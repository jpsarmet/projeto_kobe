2024-04-28 11:03:03,035:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-28 11:03:03,035:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-28 11:03:03,035:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-28 11:03:03,035:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-28 11:08:51,547:INFO:PyCaret ClassificationExperiment
2024-04-28 11:08:51,547:INFO:Logging name: clf-default-name
2024-04-28 11:08:51,547:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 11:08:51,547:INFO:version 3.2.0
2024-04-28 11:08:51,547:INFO:Initializing setup()
2024-04-28 11:08:51,548:INFO:self.USI: 34e6
2024-04-28 11:08:51,548:INFO:self._variable_keys: {'data', '_ml_usecase', 'n_jobs_param', 'html_param', '_available_plots', 'X_test', 'is_multiclass', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'memory', 'fold_generator', 'y_test', 'X_train', 'fold_groups_param', 'idx', 'X', 'exp_name_log', 'y_train', 'y', 'log_plots_param', 'exp_id', 'pipeline', 'seed', 'gpu_param', 'target_param', 'logging_param', 'USI'}
2024-04-28 11:08:51,548:INFO:Checking environment
2024-04-28 11:08:51,548:INFO:python_version: 3.8.0
2024-04-28 11:08:51,548:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 11:08:51,548:INFO:machine: AMD64
2024-04-28 11:08:51,548:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 11:08:51,553:INFO:Memory: svmem(total=34301427712, available=20884004864, percent=39.1, used=13417422848, free=20884004864)
2024-04-28 11:08:51,553:INFO:Physical Core: 6
2024-04-28 11:08:51,553:INFO:Logical Core: 12
2024-04-28 11:08:51,553:INFO:Checking libraries
2024-04-28 11:08:51,553:INFO:System:
2024-04-28 11:08:51,553:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 11:08:51,553:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 11:08:51,553:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 11:08:51,553:INFO:PyCaret required dependencies:
2024-04-28 11:08:51,603:INFO:                 pip: 24.0
2024-04-28 11:08:51,603:INFO:          setuptools: 69.5.1
2024-04-28 11:08:51,603:INFO:             pycaret: 3.2.0
2024-04-28 11:08:51,603:INFO:             IPython: 8.12.3
2024-04-28 11:08:51,603:INFO:          ipywidgets: 8.1.2
2024-04-28 11:08:51,603:INFO:                tqdm: 4.66.2
2024-04-28 11:08:51,603:INFO:               numpy: 1.24.4
2024-04-28 11:08:51,603:INFO:              pandas: 1.5.3
2024-04-28 11:08:51,603:INFO:              jinja2: 3.1.3
2024-04-28 11:08:51,603:INFO:               scipy: 1.10.1
2024-04-28 11:08:51,604:INFO:              joblib: 1.3.2
2024-04-28 11:08:51,604:INFO:             sklearn: 1.2.0
2024-04-28 11:08:51,604:INFO:                pyod: 1.1.3
2024-04-28 11:08:51,604:INFO:            imblearn: 0.12.2
2024-04-28 11:08:51,604:INFO:   category_encoders: 2.6.3
2024-04-28 11:08:51,604:INFO:            lightgbm: 4.3.0
2024-04-28 11:08:51,604:INFO:               numba: 0.58.1
2024-04-28 11:08:51,604:INFO:            requests: 2.31.0
2024-04-28 11:08:51,604:INFO:          matplotlib: 3.6.0
2024-04-28 11:08:51,604:INFO:          scikitplot: 0.3.7
2024-04-28 11:08:51,604:INFO:         yellowbrick: 1.5
2024-04-28 11:08:51,604:INFO:              plotly: 5.20.0
2024-04-28 11:08:51,604:INFO:    plotly-resampler: Not installed
2024-04-28 11:08:51,604:INFO:             kaleido: 0.2.1
2024-04-28 11:08:51,604:INFO:           schemdraw: 0.15
2024-04-28 11:08:51,604:INFO:         statsmodels: 0.14.1
2024-04-28 11:08:51,604:INFO:              sktime: 0.21.1
2024-04-28 11:08:51,604:INFO:               tbats: 1.1.3
2024-04-28 11:08:51,604:INFO:            pmdarima: 2.0.4
2024-04-28 11:08:51,604:INFO:              psutil: 5.9.8
2024-04-28 11:08:51,604:INFO:          markupsafe: 2.1.5
2024-04-28 11:08:51,604:INFO:             pickle5: Not installed
2024-04-28 11:08:51,604:INFO:         cloudpickle: 3.0.0
2024-04-28 11:08:51,604:INFO:         deprecation: 2.1.0
2024-04-28 11:08:51,604:INFO:              xxhash: 3.4.1
2024-04-28 11:08:51,604:INFO:           wurlitzer: Not installed
2024-04-28 11:08:51,604:INFO:PyCaret optional dependencies:
2024-04-28 11:08:51,611:INFO:                shap: Not installed
2024-04-28 11:08:51,611:INFO:           interpret: Not installed
2024-04-28 11:08:51,611:INFO:                umap: Not installed
2024-04-28 11:08:51,611:INFO:     ydata_profiling: Not installed
2024-04-28 11:08:51,611:INFO:  explainerdashboard: Not installed
2024-04-28 11:08:51,612:INFO:             autoviz: Not installed
2024-04-28 11:08:51,612:INFO:           fairlearn: Not installed
2024-04-28 11:08:51,612:INFO:          deepchecks: Not installed
2024-04-28 11:08:51,612:INFO:             xgboost: Not installed
2024-04-28 11:08:51,612:INFO:            catboost: Not installed
2024-04-28 11:08:51,612:INFO:              kmodes: Not installed
2024-04-28 11:08:51,612:INFO:             mlxtend: Not installed
2024-04-28 11:08:51,612:INFO:       statsforecast: Not installed
2024-04-28 11:08:51,612:INFO:        tune_sklearn: Not installed
2024-04-28 11:08:51,612:INFO:                 ray: Not installed
2024-04-28 11:08:51,612:INFO:            hyperopt: Not installed
2024-04-28 11:08:51,612:INFO:              optuna: Not installed
2024-04-28 11:08:51,612:INFO:               skopt: Not installed
2024-04-28 11:08:51,612:INFO:              mlflow: 2.11.3
2024-04-28 11:08:51,612:INFO:              gradio: Not installed
2024-04-28 11:08:51,612:INFO:             fastapi: Not installed
2024-04-28 11:08:51,612:INFO:             uvicorn: Not installed
2024-04-28 11:08:51,612:INFO:              m2cgen: Not installed
2024-04-28 11:08:51,612:INFO:           evidently: Not installed
2024-04-28 11:08:51,612:INFO:               fugue: Not installed
2024-04-28 11:08:51,612:INFO:           streamlit: 1.33.0
2024-04-28 11:08:51,612:INFO:             prophet: Not installed
2024-04-28 11:08:51,612:INFO:None
2024-04-28 11:08:51,612:INFO:Set up data.
2024-04-28 11:08:51,616:INFO:Set up folding strategy.
2024-04-28 11:08:51,617:INFO:Set up train/test split.
2024-04-28 11:08:51,617:INFO:Set up data.
2024-04-28 11:08:51,620:INFO:Set up index.
2024-04-28 11:08:51,620:INFO:Assigning column types.
2024-04-28 11:08:51,622:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 11:08:51,655:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 11:08:51,657:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 11:08:51,681:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:08:51,681:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:08:51,714:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 11:08:51,715:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 11:08:51,738:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:08:51,738:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:08:51,738:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 11:08:51,773:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 11:08:51,794:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:08:51,795:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:08:51,829:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 11:08:51,851:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:08:51,851:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:08:51,851:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 11:08:51,907:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:08:51,908:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:08:51,967:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:08:51,968:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:08:51,969:INFO:Preparing preprocessing pipeline...
2024-04-28 11:08:51,970:INFO:Set up simple imputation.
2024-04-28 11:08:51,970:INFO:Set up feature normalization.
2024-04-28 11:08:51,987:INFO:Finished creating preprocessing pipeline.
2024-04-28 11:08:51,991:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-28 11:08:51,991:INFO:Creating final display dataframe.
2024-04-28 11:08:52,042:INFO:Setup _display_container:                     Description             Value
0                    Session id              6153
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              34e6
2024-04-28 11:08:52,101:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:08:52,101:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:08:52,157:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:08:52,157:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:08:52,158:INFO:setup() successfully completed in 0.61s...............
2024-04-28 11:08:52,158:INFO:Initializing compare_models()
2024-04-28 11:08:52,158:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A087EBB0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000246A087EBB0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 11:08:52,158:INFO:Checking exceptions
2024-04-28 11:08:52,161:INFO:Preparing display monitor
2024-04-28 11:08:52,175:INFO:Initializing Logistic Regression
2024-04-28 11:08:52,175:INFO:Total runtime is 0.0 minutes
2024-04-28 11:08:52,177:INFO:SubProcess create_model() called ==================================
2024-04-28 11:08:52,177:INFO:Initializing create_model()
2024-04-28 11:08:52,178:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A087EBB0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002469CEB7D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 11:08:52,178:INFO:Checking exceptions
2024-04-28 11:08:52,178:INFO:Importing libraries
2024-04-28 11:08:52,178:INFO:Copying training dataset
2024-04-28 11:08:52,182:INFO:Defining folds
2024-04-28 11:08:52,182:INFO:Declaring metric variables
2024-04-28 11:08:52,184:INFO:Importing untrained model
2024-04-28 11:08:52,187:INFO:Logistic Regression Imported successfully
2024-04-28 11:08:52,193:INFO:Starting cross validation
2024-04-28 11:08:52,194:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 11:08:54,749:INFO:Calculating mean and std
2024-04-28 11:08:54,753:INFO:Creating metrics dataframe
2024-04-28 11:08:54,759:INFO:Uploading results into container
2024-04-28 11:08:54,759:INFO:Uploading model into container now
2024-04-28 11:08:54,760:INFO:_master_model_container: 1
2024-04-28 11:08:54,760:INFO:_display_container: 2
2024-04-28 11:08:54,761:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6153, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 11:08:54,761:INFO:create_model() successfully completed......................................
2024-04-28 11:08:54,946:INFO:SubProcess create_model() end ==================================
2024-04-28 11:08:54,946:INFO:Creating metrics dataframe
2024-04-28 11:08:54,953:INFO:Initializing Decision Tree Classifier
2024-04-28 11:08:54,953:INFO:Total runtime is 0.046288188298543295 minutes
2024-04-28 11:08:54,955:INFO:SubProcess create_model() called ==================================
2024-04-28 11:08:54,955:INFO:Initializing create_model()
2024-04-28 11:08:54,955:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A087EBB0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002469CEB7D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 11:08:54,955:INFO:Checking exceptions
2024-04-28 11:08:54,955:INFO:Importing libraries
2024-04-28 11:08:54,955:INFO:Copying training dataset
2024-04-28 11:08:54,959:INFO:Defining folds
2024-04-28 11:08:54,960:INFO:Declaring metric variables
2024-04-28 11:08:54,962:INFO:Importing untrained model
2024-04-28 11:08:54,964:INFO:Decision Tree Classifier Imported successfully
2024-04-28 11:08:54,968:INFO:Starting cross validation
2024-04-28 11:08:54,969:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 11:08:56,333:INFO:Calculating mean and std
2024-04-28 11:08:56,335:INFO:Creating metrics dataframe
2024-04-28 11:08:56,340:INFO:Uploading results into container
2024-04-28 11:08:56,340:INFO:Uploading model into container now
2024-04-28 11:08:56,341:INFO:_master_model_container: 2
2024-04-28 11:08:56,341:INFO:_display_container: 2
2024-04-28 11:08:56,341:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6153, splitter='best')
2024-04-28 11:08:56,342:INFO:create_model() successfully completed......................................
2024-04-28 11:08:56,455:INFO:SubProcess create_model() end ==================================
2024-04-28 11:08:56,455:INFO:Creating metrics dataframe
2024-04-28 11:08:56,467:INFO:Initializing create_model()
2024-04-28 11:08:56,467:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A087EBB0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6153, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 11:08:56,467:INFO:Checking exceptions
2024-04-28 11:08:56,468:INFO:Importing libraries
2024-04-28 11:08:56,469:INFO:Copying training dataset
2024-04-28 11:08:56,472:INFO:Defining folds
2024-04-28 11:08:56,472:INFO:Declaring metric variables
2024-04-28 11:08:56,472:INFO:Importing untrained model
2024-04-28 11:08:56,472:INFO:Declaring custom model
2024-04-28 11:08:56,473:INFO:Decision Tree Classifier Imported successfully
2024-04-28 11:08:56,473:INFO:Cross validation set to False
2024-04-28 11:08:56,473:INFO:Fitting Model
2024-04-28 11:08:56,520:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6153, splitter='best')
2024-04-28 11:08:56,520:INFO:create_model() successfully completed......................................
2024-04-28 11:08:56,627:INFO:Initializing create_model()
2024-04-28 11:08:56,627:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A087EBB0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6153, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 11:08:56,627:INFO:Checking exceptions
2024-04-28 11:08:56,628:INFO:Importing libraries
2024-04-28 11:08:56,628:INFO:Copying training dataset
2024-04-28 11:08:56,631:INFO:Defining folds
2024-04-28 11:08:56,632:INFO:Declaring metric variables
2024-04-28 11:08:56,632:INFO:Importing untrained model
2024-04-28 11:08:56,632:INFO:Declaring custom model
2024-04-28 11:08:56,632:INFO:Logistic Regression Imported successfully
2024-04-28 11:08:56,633:INFO:Cross validation set to False
2024-04-28 11:08:56,633:INFO:Fitting Model
2024-04-28 11:08:56,647:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6153, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 11:08:56,647:INFO:create_model() successfully completed......................................
2024-04-28 11:08:56,758:INFO:_master_model_container: 2
2024-04-28 11:08:56,758:INFO:_display_container: 2
2024-04-28 11:08:56,758:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6153, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6153, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-28 11:08:56,759:INFO:compare_models() successfully completed......................................
2024-04-28 11:08:56,759:INFO:Initializing plot_model()
2024-04-28 11:08:56,759:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6153, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A087EBB0>, system=True)
2024-04-28 11:08:56,760:INFO:Checking exceptions
2024-04-28 11:08:56,763:INFO:Preloading libraries
2024-04-28 11:08:56,763:INFO:Copying training dataset
2024-04-28 11:08:56,763:INFO:Plot type: parameter
2024-04-28 11:08:56,766:INFO:Visual Rendered Successfully
2024-04-28 11:08:56,866:INFO:plot_model() successfully completed......................................
2024-04-28 11:08:56,894:INFO:Initializing predict_model()
2024-04-28 11:08:56,894:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A087EBB0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6153, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002469EFA5550>)
2024-04-28 11:08:56,894:INFO:Checking exceptions
2024-04-28 11:08:56,894:INFO:Preloading libraries
2024-04-28 11:08:57,147:INFO:Initializing plot_model()
2024-04-28 11:08:57,147:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6153, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A087EBB0>, system=True)
2024-04-28 11:08:57,147:INFO:Checking exceptions
2024-04-28 11:08:57,150:INFO:Preloading libraries
2024-04-28 11:08:57,151:INFO:Copying training dataset
2024-04-28 11:08:57,151:INFO:Plot type: parameter
2024-04-28 11:08:57,153:INFO:Visual Rendered Successfully
2024-04-28 11:08:57,256:INFO:plot_model() successfully completed......................................
2024-04-28 11:08:57,272:INFO:Initializing predict_model()
2024-04-28 11:08:57,272:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A087EBB0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6153, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002469EF87040>)
2024-04-28 11:08:57,272:INFO:Checking exceptions
2024-04-28 11:08:57,272:INFO:Preloading libraries
2024-04-28 11:08:57,515:INFO:Initializing load_model()
2024-04-28 11:08:57,515:INFO:load_model(model_name=./model_kobe, platform=None, authentication=None, verbose=True)
2024-04-28 11:08:57,518:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.0', 'setuptools': '69.5.1', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.0', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.20.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.0', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.0', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.20.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.0', 'machine': 'AMD64'}}
  warnings.warn(

2024-04-28 11:08:57,569:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\mlflow\types\utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-28 11:09:00,150:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\_distutils_hack\__init__.py:26: UserWarning: Setuptools is replacing distutils.
  warnings.warn("Setuptools is replacing distutils.")

2024-04-28 11:09:00,222:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_19216\1973998042.py:83: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-28 11:09:00,256:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_19216\3893377491.py:5: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_versions = client.get_latest_versions(model_name)

2024-04-28 11:09:00,260:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_19216\3893377491.py:11: FutureWarning: ``mlflow.tracking.client.MlflowClient.transition_model_version_stage`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  client.transition_model_version_stage(

2024-04-28 11:12:11,540:INFO:PyCaret ClassificationExperiment
2024-04-28 11:12:11,540:INFO:Logging name: clf-default-name
2024-04-28 11:12:11,540:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 11:12:11,540:INFO:version 3.2.0
2024-04-28 11:12:11,540:INFO:Initializing setup()
2024-04-28 11:12:11,540:INFO:self.USI: 6d4e
2024-04-28 11:12:11,540:INFO:self._variable_keys: {'data', '_ml_usecase', 'n_jobs_param', 'html_param', '_available_plots', 'X_test', 'is_multiclass', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'memory', 'fold_generator', 'y_test', 'X_train', 'fold_groups_param', 'idx', 'X', 'exp_name_log', 'y_train', 'y', 'log_plots_param', 'exp_id', 'pipeline', 'seed', 'gpu_param', 'target_param', 'logging_param', 'USI'}
2024-04-28 11:12:11,540:INFO:Checking environment
2024-04-28 11:12:11,540:INFO:python_version: 3.8.0
2024-04-28 11:12:11,540:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 11:12:11,540:INFO:machine: AMD64
2024-04-28 11:12:11,540:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 11:12:11,545:INFO:Memory: svmem(total=34301427712, available=19329466368, percent=43.6, used=14971961344, free=19329466368)
2024-04-28 11:12:11,545:INFO:Physical Core: 6
2024-04-28 11:12:11,545:INFO:Logical Core: 12
2024-04-28 11:12:11,545:INFO:Checking libraries
2024-04-28 11:12:11,545:INFO:System:
2024-04-28 11:12:11,545:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 11:12:11,545:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 11:12:11,545:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 11:12:11,545:INFO:PyCaret required dependencies:
2024-04-28 11:12:11,545:INFO:                 pip: 24.0
2024-04-28 11:12:11,545:INFO:          setuptools: 69.5.1
2024-04-28 11:12:11,545:INFO:             pycaret: 3.2.0
2024-04-28 11:12:11,545:INFO:             IPython: 8.12.3
2024-04-28 11:12:11,545:INFO:          ipywidgets: 8.1.2
2024-04-28 11:12:11,545:INFO:                tqdm: 4.66.2
2024-04-28 11:12:11,545:INFO:               numpy: 1.24.4
2024-04-28 11:12:11,545:INFO:              pandas: 1.5.3
2024-04-28 11:12:11,545:INFO:              jinja2: 3.1.3
2024-04-28 11:12:11,545:INFO:               scipy: 1.10.1
2024-04-28 11:12:11,545:INFO:              joblib: 1.3.2
2024-04-28 11:12:11,545:INFO:             sklearn: 1.2.0
2024-04-28 11:12:11,545:INFO:                pyod: 1.1.3
2024-04-28 11:12:11,545:INFO:            imblearn: 0.12.2
2024-04-28 11:12:11,546:INFO:   category_encoders: 2.6.3
2024-04-28 11:12:11,546:INFO:            lightgbm: 4.3.0
2024-04-28 11:12:11,546:INFO:               numba: 0.58.1
2024-04-28 11:12:11,546:INFO:            requests: 2.31.0
2024-04-28 11:12:11,546:INFO:          matplotlib: 3.6.0
2024-04-28 11:12:11,546:INFO:          scikitplot: 0.3.7
2024-04-28 11:12:11,546:INFO:         yellowbrick: 1.5
2024-04-28 11:12:11,546:INFO:              plotly: 5.20.0
2024-04-28 11:12:11,546:INFO:    plotly-resampler: Not installed
2024-04-28 11:12:11,546:INFO:             kaleido: 0.2.1
2024-04-28 11:12:11,546:INFO:           schemdraw: 0.15
2024-04-28 11:12:11,546:INFO:         statsmodels: 0.14.1
2024-04-28 11:12:11,546:INFO:              sktime: 0.21.1
2024-04-28 11:12:11,546:INFO:               tbats: 1.1.3
2024-04-28 11:12:11,546:INFO:            pmdarima: 2.0.4
2024-04-28 11:12:11,546:INFO:              psutil: 5.9.8
2024-04-28 11:12:11,546:INFO:          markupsafe: 2.1.5
2024-04-28 11:12:11,546:INFO:             pickle5: Not installed
2024-04-28 11:12:11,546:INFO:         cloudpickle: 3.0.0
2024-04-28 11:12:11,546:INFO:         deprecation: 2.1.0
2024-04-28 11:12:11,546:INFO:              xxhash: 3.4.1
2024-04-28 11:12:11,546:INFO:           wurlitzer: Not installed
2024-04-28 11:12:11,546:INFO:PyCaret optional dependencies:
2024-04-28 11:12:11,546:INFO:                shap: Not installed
2024-04-28 11:12:11,546:INFO:           interpret: Not installed
2024-04-28 11:12:11,546:INFO:                umap: Not installed
2024-04-28 11:12:11,546:INFO:     ydata_profiling: Not installed
2024-04-28 11:12:11,546:INFO:  explainerdashboard: Not installed
2024-04-28 11:12:11,546:INFO:             autoviz: Not installed
2024-04-28 11:12:11,546:INFO:           fairlearn: Not installed
2024-04-28 11:12:11,546:INFO:          deepchecks: Not installed
2024-04-28 11:12:11,546:INFO:             xgboost: Not installed
2024-04-28 11:12:11,546:INFO:            catboost: Not installed
2024-04-28 11:12:11,546:INFO:              kmodes: Not installed
2024-04-28 11:12:11,546:INFO:             mlxtend: Not installed
2024-04-28 11:12:11,546:INFO:       statsforecast: Not installed
2024-04-28 11:12:11,546:INFO:        tune_sklearn: Not installed
2024-04-28 11:12:11,546:INFO:                 ray: Not installed
2024-04-28 11:12:11,546:INFO:            hyperopt: Not installed
2024-04-28 11:12:11,546:INFO:              optuna: Not installed
2024-04-28 11:12:11,546:INFO:               skopt: Not installed
2024-04-28 11:12:11,547:INFO:              mlflow: 2.11.3
2024-04-28 11:12:11,547:INFO:              gradio: Not installed
2024-04-28 11:12:11,547:INFO:             fastapi: Not installed
2024-04-28 11:12:11,547:INFO:             uvicorn: Not installed
2024-04-28 11:12:11,547:INFO:              m2cgen: Not installed
2024-04-28 11:12:11,547:INFO:           evidently: Not installed
2024-04-28 11:12:11,547:INFO:               fugue: Not installed
2024-04-28 11:12:11,547:INFO:           streamlit: 1.33.0
2024-04-28 11:12:11,547:INFO:             prophet: Not installed
2024-04-28 11:12:11,547:INFO:None
2024-04-28 11:12:11,547:INFO:Set up data.
2024-04-28 11:12:11,551:INFO:Set up folding strategy.
2024-04-28 11:12:11,551:INFO:Set up train/test split.
2024-04-28 11:12:11,551:INFO:Set up data.
2024-04-28 11:12:11,555:INFO:Set up index.
2024-04-28 11:12:11,555:INFO:Assigning column types.
2024-04-28 11:12:11,557:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 11:12:11,591:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 11:12:11,591:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 11:12:11,613:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:12:11,613:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:12:11,646:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 11:12:11,647:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 11:12:11,668:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:12:11,668:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:12:11,668:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 11:12:11,703:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 11:12:11,726:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:12:11,726:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:12:11,763:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 11:12:11,784:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:12:11,785:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:12:11,785:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 11:12:11,842:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:12:11,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:12:11,901:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:12:11,901:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:12:11,902:INFO:Preparing preprocessing pipeline...
2024-04-28 11:12:11,903:INFO:Set up simple imputation.
2024-04-28 11:12:11,903:INFO:Set up feature normalization.
2024-04-28 11:12:11,921:INFO:Finished creating preprocessing pipeline.
2024-04-28 11:12:11,924:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-28 11:12:11,924:INFO:Creating final display dataframe.
2024-04-28 11:12:11,978:INFO:Setup _display_container:                     Description             Value
0                    Session id              6523
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              6d4e
2024-04-28 11:12:12,038:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:12:12,038:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:12:12,094:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:12:12,094:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:12:12,095:INFO:setup() successfully completed in 0.56s...............
2024-04-28 11:12:12,095:INFO:Initializing compare_models()
2024-04-28 11:12:12,095:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A0A9A340>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000246A0A9A340>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 11:12:12,095:INFO:Checking exceptions
2024-04-28 11:12:12,098:INFO:Preparing display monitor
2024-04-28 11:12:12,112:INFO:Initializing Logistic Regression
2024-04-28 11:12:12,112:INFO:Total runtime is 0.0 minutes
2024-04-28 11:12:12,114:INFO:SubProcess create_model() called ==================================
2024-04-28 11:12:12,114:INFO:Initializing create_model()
2024-04-28 11:12:12,114:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A0A9A340>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000246A0B569A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 11:12:12,114:INFO:Checking exceptions
2024-04-28 11:12:12,114:INFO:Importing libraries
2024-04-28 11:12:12,114:INFO:Copying training dataset
2024-04-28 11:12:12,119:INFO:Defining folds
2024-04-28 11:12:12,119:INFO:Declaring metric variables
2024-04-28 11:12:12,121:INFO:Importing untrained model
2024-04-28 11:12:12,123:INFO:Logistic Regression Imported successfully
2024-04-28 11:12:12,128:INFO:Starting cross validation
2024-04-28 11:12:12,128:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 11:12:12,213:INFO:Calculating mean and std
2024-04-28 11:12:12,213:INFO:Creating metrics dataframe
2024-04-28 11:12:12,218:INFO:Uploading results into container
2024-04-28 11:12:12,219:INFO:Uploading model into container now
2024-04-28 11:12:12,219:INFO:_master_model_container: 1
2024-04-28 11:12:12,219:INFO:_display_container: 2
2024-04-28 11:12:12,219:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6523, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 11:12:12,219:INFO:create_model() successfully completed......................................
2024-04-28 11:12:12,420:INFO:SubProcess create_model() end ==================================
2024-04-28 11:12:12,420:INFO:Creating metrics dataframe
2024-04-28 11:12:12,426:INFO:Initializing Decision Tree Classifier
2024-04-28 11:12:12,426:INFO:Total runtime is 0.00523451566696167 minutes
2024-04-28 11:12:12,429:INFO:SubProcess create_model() called ==================================
2024-04-28 11:12:12,429:INFO:Initializing create_model()
2024-04-28 11:12:12,429:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A0A9A340>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000246A0B569A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 11:12:12,429:INFO:Checking exceptions
2024-04-28 11:12:12,429:INFO:Importing libraries
2024-04-28 11:12:12,429:INFO:Copying training dataset
2024-04-28 11:12:12,433:INFO:Defining folds
2024-04-28 11:12:12,433:INFO:Declaring metric variables
2024-04-28 11:12:12,435:INFO:Importing untrained model
2024-04-28 11:12:12,437:INFO:Decision Tree Classifier Imported successfully
2024-04-28 11:12:12,442:INFO:Starting cross validation
2024-04-28 11:12:12,442:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 11:12:12,558:INFO:Calculating mean and std
2024-04-28 11:12:12,558:INFO:Creating metrics dataframe
2024-04-28 11:12:12,560:INFO:Uploading results into container
2024-04-28 11:12:12,561:INFO:Uploading model into container now
2024-04-28 11:12:12,561:INFO:_master_model_container: 2
2024-04-28 11:12:12,561:INFO:_display_container: 2
2024-04-28 11:12:12,561:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6523, splitter='best')
2024-04-28 11:12:12,561:INFO:create_model() successfully completed......................................
2024-04-28 11:12:12,705:INFO:SubProcess create_model() end ==================================
2024-04-28 11:12:12,705:INFO:Creating metrics dataframe
2024-04-28 11:12:12,717:INFO:Initializing create_model()
2024-04-28 11:12:12,717:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A0A9A340>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6523, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 11:12:12,717:INFO:Checking exceptions
2024-04-28 11:12:12,718:INFO:Importing libraries
2024-04-28 11:12:12,719:INFO:Copying training dataset
2024-04-28 11:12:12,722:INFO:Defining folds
2024-04-28 11:12:12,722:INFO:Declaring metric variables
2024-04-28 11:12:12,722:INFO:Importing untrained model
2024-04-28 11:12:12,722:INFO:Declaring custom model
2024-04-28 11:12:12,723:INFO:Decision Tree Classifier Imported successfully
2024-04-28 11:12:12,723:INFO:Cross validation set to False
2024-04-28 11:12:12,723:INFO:Fitting Model
2024-04-28 11:12:12,775:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6523, splitter='best')
2024-04-28 11:12:12,775:INFO:create_model() successfully completed......................................
2024-04-28 11:12:12,912:INFO:Initializing create_model()
2024-04-28 11:12:12,912:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A0A9A340>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6523, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 11:12:12,912:INFO:Checking exceptions
2024-04-28 11:12:12,913:INFO:Importing libraries
2024-04-28 11:12:12,913:INFO:Copying training dataset
2024-04-28 11:12:12,916:INFO:Defining folds
2024-04-28 11:12:12,916:INFO:Declaring metric variables
2024-04-28 11:12:12,916:INFO:Importing untrained model
2024-04-28 11:12:12,917:INFO:Declaring custom model
2024-04-28 11:12:12,917:INFO:Logistic Regression Imported successfully
2024-04-28 11:12:12,917:INFO:Cross validation set to False
2024-04-28 11:12:12,918:INFO:Fitting Model
2024-04-28 11:12:12,931:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6523, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 11:12:12,931:INFO:create_model() successfully completed......................................
2024-04-28 11:12:13,079:INFO:_master_model_container: 2
2024-04-28 11:12:13,079:INFO:_display_container: 2
2024-04-28 11:12:13,080:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6523, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6523, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-28 11:12:13,080:INFO:compare_models() successfully completed......................................
2024-04-28 11:12:13,081:INFO:Initializing plot_model()
2024-04-28 11:12:13,081:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6523, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A0A9A340>, system=True)
2024-04-28 11:12:13,081:INFO:Checking exceptions
2024-04-28 11:12:13,084:INFO:Preloading libraries
2024-04-28 11:12:13,085:INFO:Copying training dataset
2024-04-28 11:12:13,085:INFO:Plot type: parameter
2024-04-28 11:12:13,087:INFO:Visual Rendered Successfully
2024-04-28 11:12:13,231:INFO:plot_model() successfully completed......................................
2024-04-28 11:12:13,252:INFO:Initializing predict_model()
2024-04-28 11:12:13,252:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A0A9A340>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6523, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000246A6EF3430>)
2024-04-28 11:12:13,252:INFO:Checking exceptions
2024-04-28 11:12:13,252:INFO:Preloading libraries
2024-04-28 11:12:13,585:INFO:Initializing plot_model()
2024-04-28 11:12:13,585:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6523, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A0A9A340>, system=True)
2024-04-28 11:12:13,585:INFO:Checking exceptions
2024-04-28 11:12:13,589:INFO:Preloading libraries
2024-04-28 11:12:13,589:INFO:Copying training dataset
2024-04-28 11:12:13,589:INFO:Plot type: parameter
2024-04-28 11:12:13,591:INFO:Visual Rendered Successfully
2024-04-28 11:12:13,741:INFO:plot_model() successfully completed......................................
2024-04-28 11:12:13,757:INFO:Initializing predict_model()
2024-04-28 11:12:13,757:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A0A9A340>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6523, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002469CEA9B80>)
2024-04-28 11:12:13,757:INFO:Checking exceptions
2024-04-28 11:12:13,757:INFO:Preloading libraries
2024-04-28 11:12:14,032:INFO:Initializing load_model()
2024-04-28 11:12:14,032:INFO:load_model(model_name=./model_kobe, platform=None, authentication=None, verbose=True)
2024-04-28 11:18:08,562:INFO:PyCaret ClassificationExperiment
2024-04-28 11:18:08,562:INFO:Logging name: clf-default-name
2024-04-28 11:18:08,562:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 11:18:08,562:INFO:version 3.2.0
2024-04-28 11:18:08,562:INFO:Initializing setup()
2024-04-28 11:18:08,562:INFO:self.USI: aa36
2024-04-28 11:18:08,562:INFO:self._variable_keys: {'data', '_ml_usecase', 'n_jobs_param', 'html_param', '_available_plots', 'X_test', 'is_multiclass', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'memory', 'fold_generator', 'y_test', 'X_train', 'fold_groups_param', 'idx', 'X', 'exp_name_log', 'y_train', 'y', 'log_plots_param', 'exp_id', 'pipeline', 'seed', 'gpu_param', 'target_param', 'logging_param', 'USI'}
2024-04-28 11:18:08,562:INFO:Checking environment
2024-04-28 11:18:08,562:INFO:python_version: 3.8.0
2024-04-28 11:18:08,562:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 11:18:08,562:INFO:machine: AMD64
2024-04-28 11:18:08,562:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 11:18:08,569:INFO:Memory: svmem(total=34301427712, available=20606668800, percent=39.9, used=13694758912, free=20606668800)
2024-04-28 11:18:08,569:INFO:Physical Core: 6
2024-04-28 11:18:08,569:INFO:Logical Core: 12
2024-04-28 11:18:08,569:INFO:Checking libraries
2024-04-28 11:18:08,569:INFO:System:
2024-04-28 11:18:08,569:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 11:18:08,569:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 11:18:08,569:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 11:18:08,569:INFO:PyCaret required dependencies:
2024-04-28 11:18:08,569:INFO:                 pip: 24.0
2024-04-28 11:18:08,569:INFO:          setuptools: 69.5.1
2024-04-28 11:18:08,569:INFO:             pycaret: 3.2.0
2024-04-28 11:18:08,569:INFO:             IPython: 8.12.3
2024-04-28 11:18:08,569:INFO:          ipywidgets: 8.1.2
2024-04-28 11:18:08,569:INFO:                tqdm: 4.66.2
2024-04-28 11:18:08,569:INFO:               numpy: 1.24.4
2024-04-28 11:18:08,569:INFO:              pandas: 1.5.3
2024-04-28 11:18:08,569:INFO:              jinja2: 3.1.3
2024-04-28 11:18:08,569:INFO:               scipy: 1.10.1
2024-04-28 11:18:08,569:INFO:              joblib: 1.3.2
2024-04-28 11:18:08,570:INFO:             sklearn: 1.2.0
2024-04-28 11:18:08,570:INFO:                pyod: 1.1.3
2024-04-28 11:18:08,570:INFO:            imblearn: 0.12.2
2024-04-28 11:18:08,570:INFO:   category_encoders: 2.6.3
2024-04-28 11:18:08,570:INFO:            lightgbm: 4.3.0
2024-04-28 11:18:08,570:INFO:               numba: 0.58.1
2024-04-28 11:18:08,570:INFO:            requests: 2.31.0
2024-04-28 11:18:08,570:INFO:          matplotlib: 3.6.0
2024-04-28 11:18:08,570:INFO:          scikitplot: 0.3.7
2024-04-28 11:18:08,570:INFO:         yellowbrick: 1.5
2024-04-28 11:18:08,570:INFO:              plotly: 5.20.0
2024-04-28 11:18:08,570:INFO:    plotly-resampler: Not installed
2024-04-28 11:18:08,570:INFO:             kaleido: 0.2.1
2024-04-28 11:18:08,570:INFO:           schemdraw: 0.15
2024-04-28 11:18:08,570:INFO:         statsmodels: 0.14.1
2024-04-28 11:18:08,570:INFO:              sktime: 0.21.1
2024-04-28 11:18:08,570:INFO:               tbats: 1.1.3
2024-04-28 11:18:08,570:INFO:            pmdarima: 2.0.4
2024-04-28 11:18:08,570:INFO:              psutil: 5.9.8
2024-04-28 11:18:08,570:INFO:          markupsafe: 2.1.5
2024-04-28 11:18:08,570:INFO:             pickle5: Not installed
2024-04-28 11:18:08,570:INFO:         cloudpickle: 3.0.0
2024-04-28 11:18:08,570:INFO:         deprecation: 2.1.0
2024-04-28 11:18:08,570:INFO:              xxhash: 3.4.1
2024-04-28 11:18:08,570:INFO:           wurlitzer: Not installed
2024-04-28 11:18:08,570:INFO:PyCaret optional dependencies:
2024-04-28 11:18:08,571:INFO:                shap: Not installed
2024-04-28 11:18:08,571:INFO:           interpret: Not installed
2024-04-28 11:18:08,571:INFO:                umap: Not installed
2024-04-28 11:18:08,571:INFO:     ydata_profiling: Not installed
2024-04-28 11:18:08,571:INFO:  explainerdashboard: Not installed
2024-04-28 11:18:08,571:INFO:             autoviz: Not installed
2024-04-28 11:18:08,571:INFO:           fairlearn: Not installed
2024-04-28 11:18:08,571:INFO:          deepchecks: Not installed
2024-04-28 11:18:08,571:INFO:             xgboost: Not installed
2024-04-28 11:18:08,571:INFO:            catboost: Not installed
2024-04-28 11:18:08,571:INFO:              kmodes: Not installed
2024-04-28 11:18:08,571:INFO:             mlxtend: Not installed
2024-04-28 11:18:08,571:INFO:       statsforecast: Not installed
2024-04-28 11:18:08,571:INFO:        tune_sklearn: Not installed
2024-04-28 11:18:08,571:INFO:                 ray: Not installed
2024-04-28 11:18:08,571:INFO:            hyperopt: Not installed
2024-04-28 11:18:08,571:INFO:              optuna: Not installed
2024-04-28 11:18:08,571:INFO:               skopt: Not installed
2024-04-28 11:18:08,571:INFO:              mlflow: 2.11.3
2024-04-28 11:18:08,571:INFO:              gradio: Not installed
2024-04-28 11:18:08,571:INFO:             fastapi: Not installed
2024-04-28 11:18:08,571:INFO:             uvicorn: Not installed
2024-04-28 11:18:08,571:INFO:              m2cgen: Not installed
2024-04-28 11:18:08,571:INFO:           evidently: Not installed
2024-04-28 11:18:08,571:INFO:               fugue: Not installed
2024-04-28 11:18:08,571:INFO:           streamlit: 1.33.0
2024-04-28 11:18:08,571:INFO:             prophet: Not installed
2024-04-28 11:18:08,571:INFO:None
2024-04-28 11:18:08,571:INFO:Set up data.
2024-04-28 11:18:08,577:INFO:Set up folding strategy.
2024-04-28 11:18:08,577:INFO:Set up train/test split.
2024-04-28 11:18:08,577:INFO:Set up data.
2024-04-28 11:18:08,580:INFO:Set up index.
2024-04-28 11:18:08,580:INFO:Assigning column types.
2024-04-28 11:18:08,583:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 11:18:08,616:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 11:18:08,616:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 11:18:08,637:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:18:08,638:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:18:08,671:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 11:18:08,671:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 11:18:08,692:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:18:08,693:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:18:08,693:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 11:18:08,727:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 11:18:08,749:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:18:08,749:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:18:08,784:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 11:18:08,805:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:18:08,805:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:18:08,805:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 11:18:08,862:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:18:08,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:18:08,918:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:18:08,918:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:18:08,919:INFO:Preparing preprocessing pipeline...
2024-04-28 11:18:08,920:INFO:Set up simple imputation.
2024-04-28 11:18:08,920:INFO:Set up feature normalization.
2024-04-28 11:18:08,937:INFO:Finished creating preprocessing pipeline.
2024-04-28 11:18:08,940:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-28 11:18:08,940:INFO:Creating final display dataframe.
2024-04-28 11:18:08,992:INFO:Setup _display_container:                     Description             Value
0                    Session id              6868
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              aa36
2024-04-28 11:18:09,051:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:18:09,052:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:18:09,106:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:18:09,106:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:18:09,106:INFO:setup() successfully completed in 0.55s...............
2024-04-28 11:18:09,106:INFO:Initializing compare_models()
2024-04-28 11:18:09,106:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A6972700>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000246A6972700>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 11:18:09,106:INFO:Checking exceptions
2024-04-28 11:18:09,109:INFO:Preparing display monitor
2024-04-28 11:18:09,123:INFO:Initializing Logistic Regression
2024-04-28 11:18:09,123:INFO:Total runtime is 0.0 minutes
2024-04-28 11:18:09,125:INFO:SubProcess create_model() called ==================================
2024-04-28 11:18:09,125:INFO:Initializing create_model()
2024-04-28 11:18:09,125:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A6972700>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000246A6EBF130>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 11:18:09,125:INFO:Checking exceptions
2024-04-28 11:18:09,126:INFO:Importing libraries
2024-04-28 11:18:09,126:INFO:Copying training dataset
2024-04-28 11:18:09,130:INFO:Defining folds
2024-04-28 11:18:09,130:INFO:Declaring metric variables
2024-04-28 11:18:09,132:INFO:Importing untrained model
2024-04-28 11:18:09,135:INFO:Logistic Regression Imported successfully
2024-04-28 11:18:09,138:INFO:Starting cross validation
2024-04-28 11:18:09,139:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 11:18:11,556:INFO:Calculating mean and std
2024-04-28 11:18:11,559:INFO:Creating metrics dataframe
2024-04-28 11:18:11,571:INFO:Uploading results into container
2024-04-28 11:18:11,572:INFO:Uploading model into container now
2024-04-28 11:18:11,573:INFO:_master_model_container: 1
2024-04-28 11:18:11,573:INFO:_display_container: 2
2024-04-28 11:18:11,574:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6868, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 11:18:11,574:INFO:create_model() successfully completed......................................
2024-04-28 11:18:11,800:INFO:SubProcess create_model() end ==================================
2024-04-28 11:18:11,801:INFO:Creating metrics dataframe
2024-04-28 11:18:11,807:INFO:Initializing Decision Tree Classifier
2024-04-28 11:18:11,807:INFO:Total runtime is 0.0447267731030782 minutes
2024-04-28 11:18:11,809:INFO:SubProcess create_model() called ==================================
2024-04-28 11:18:11,809:INFO:Initializing create_model()
2024-04-28 11:18:11,809:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A6972700>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000246A6EBF130>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 11:18:11,809:INFO:Checking exceptions
2024-04-28 11:18:11,809:INFO:Importing libraries
2024-04-28 11:18:11,810:INFO:Copying training dataset
2024-04-28 11:18:11,814:INFO:Defining folds
2024-04-28 11:18:11,814:INFO:Declaring metric variables
2024-04-28 11:18:11,816:INFO:Importing untrained model
2024-04-28 11:18:11,819:INFO:Decision Tree Classifier Imported successfully
2024-04-28 11:18:11,823:INFO:Starting cross validation
2024-04-28 11:18:11,823:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 11:18:13,142:INFO:Calculating mean and std
2024-04-28 11:18:13,144:INFO:Creating metrics dataframe
2024-04-28 11:18:13,147:INFO:Uploading results into container
2024-04-28 11:18:13,147:INFO:Uploading model into container now
2024-04-28 11:18:13,148:INFO:_master_model_container: 2
2024-04-28 11:18:13,148:INFO:_display_container: 2
2024-04-28 11:18:13,148:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6868, splitter='best')
2024-04-28 11:18:13,148:INFO:create_model() successfully completed......................................
2024-04-28 11:18:13,313:INFO:SubProcess create_model() end ==================================
2024-04-28 11:18:13,313:INFO:Creating metrics dataframe
2024-04-28 11:18:13,325:INFO:Initializing create_model()
2024-04-28 11:18:13,325:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A6972700>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6868, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 11:18:13,325:INFO:Checking exceptions
2024-04-28 11:18:13,326:INFO:Importing libraries
2024-04-28 11:18:13,326:INFO:Copying training dataset
2024-04-28 11:18:13,329:INFO:Defining folds
2024-04-28 11:18:13,329:INFO:Declaring metric variables
2024-04-28 11:18:13,329:INFO:Importing untrained model
2024-04-28 11:18:13,330:INFO:Declaring custom model
2024-04-28 11:18:13,330:INFO:Decision Tree Classifier Imported successfully
2024-04-28 11:18:13,331:INFO:Cross validation set to False
2024-04-28 11:18:13,331:INFO:Fitting Model
2024-04-28 11:18:13,376:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6868, splitter='best')
2024-04-28 11:18:13,376:INFO:create_model() successfully completed......................................
2024-04-28 11:18:13,531:INFO:Initializing create_model()
2024-04-28 11:18:13,531:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A6972700>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6868, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 11:18:13,531:INFO:Checking exceptions
2024-04-28 11:18:13,532:INFO:Importing libraries
2024-04-28 11:18:13,532:INFO:Copying training dataset
2024-04-28 11:18:13,536:INFO:Defining folds
2024-04-28 11:18:13,536:INFO:Declaring metric variables
2024-04-28 11:18:13,536:INFO:Importing untrained model
2024-04-28 11:18:13,536:INFO:Declaring custom model
2024-04-28 11:18:13,536:INFO:Logistic Regression Imported successfully
2024-04-28 11:18:13,537:INFO:Cross validation set to False
2024-04-28 11:18:13,537:INFO:Fitting Model
2024-04-28 11:18:13,551:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6868, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 11:18:13,551:INFO:create_model() successfully completed......................................
2024-04-28 11:18:13,712:INFO:_master_model_container: 2
2024-04-28 11:18:13,712:INFO:_display_container: 2
2024-04-28 11:18:13,713:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6868, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6868, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-28 11:18:13,713:INFO:compare_models() successfully completed......................................
2024-04-28 11:18:13,714:INFO:Initializing plot_model()
2024-04-28 11:18:13,714:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6868, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A6972700>, system=True)
2024-04-28 11:18:13,714:INFO:Checking exceptions
2024-04-28 11:18:13,716:INFO:Preloading libraries
2024-04-28 11:18:13,718:INFO:Copying training dataset
2024-04-28 11:18:13,718:INFO:Plot type: parameter
2024-04-28 11:18:13,720:INFO:Visual Rendered Successfully
2024-04-28 11:18:13,868:INFO:plot_model() successfully completed......................................
2024-04-28 11:18:13,888:INFO:Initializing predict_model()
2024-04-28 11:18:13,888:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A6972700>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6868, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000246A8684C10>)
2024-04-28 11:18:13,888:INFO:Checking exceptions
2024-04-28 11:18:13,888:INFO:Preloading libraries
2024-04-28 11:18:14,185:INFO:Initializing plot_model()
2024-04-28 11:18:14,185:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6868, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A6972700>, system=True)
2024-04-28 11:18:14,185:INFO:Checking exceptions
2024-04-28 11:18:14,188:INFO:Preloading libraries
2024-04-28 11:18:14,188:INFO:Copying training dataset
2024-04-28 11:18:14,189:INFO:Plot type: parameter
2024-04-28 11:18:14,191:INFO:Visual Rendered Successfully
2024-04-28 11:18:14,344:INFO:plot_model() successfully completed......................................
2024-04-28 11:18:14,359:INFO:Initializing predict_model()
2024-04-28 11:18:14,359:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A6972700>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6868, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000246A0B97AF0>)
2024-04-28 11:18:14,359:INFO:Checking exceptions
2024-04-28 11:18:14,359:INFO:Preloading libraries
2024-04-28 11:18:14,649:INFO:Initializing load_model()
2024-04-28 11:18:14,649:INFO:load_model(model_name=./model_kobe, platform=None, authentication=None, verbose=True)
2024-04-28 11:18:14,650:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.0', 'setuptools': '69.5.1', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.0', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.20.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.0', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.0', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.20.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.0', 'machine': 'AMD64'}}
  warnings.warn(

2024-04-28 11:18:14,700:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\mlflow\types\utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-28 11:18:16,690:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_19216\1973998042.py:83: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-28 11:18:16,729:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_19216\3893377491.py:5: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_versions = client.get_latest_versions(model_name)

2024-04-28 11:18:16,732:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_19216\3893377491.py:11: FutureWarning: ``mlflow.tracking.client.MlflowClient.transition_model_version_stage`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  client.transition_model_version_stage(

2024-04-28 11:19:03,919:INFO:PyCaret ClassificationExperiment
2024-04-28 11:19:03,919:INFO:Logging name: clf-default-name
2024-04-28 11:19:03,919:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 11:19:03,919:INFO:version 3.2.0
2024-04-28 11:19:03,919:INFO:Initializing setup()
2024-04-28 11:19:03,919:INFO:self.USI: 015b
2024-04-28 11:19:03,919:INFO:self._variable_keys: {'data', '_ml_usecase', 'n_jobs_param', 'html_param', '_available_plots', 'X_test', 'is_multiclass', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'memory', 'fold_generator', 'y_test', 'X_train', 'fold_groups_param', 'idx', 'X', 'exp_name_log', 'y_train', 'y', 'log_plots_param', 'exp_id', 'pipeline', 'seed', 'gpu_param', 'target_param', 'logging_param', 'USI'}
2024-04-28 11:19:03,919:INFO:Checking environment
2024-04-28 11:19:03,919:INFO:python_version: 3.8.0
2024-04-28 11:19:03,919:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 11:19:03,919:INFO:machine: AMD64
2024-04-28 11:19:03,919:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 11:19:03,923:INFO:Memory: svmem(total=34301427712, available=19096309760, percent=44.3, used=15205117952, free=19096309760)
2024-04-28 11:19:03,924:INFO:Physical Core: 6
2024-04-28 11:19:03,924:INFO:Logical Core: 12
2024-04-28 11:19:03,924:INFO:Checking libraries
2024-04-28 11:19:03,924:INFO:System:
2024-04-28 11:19:03,924:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 11:19:03,924:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 11:19:03,924:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 11:19:03,924:INFO:PyCaret required dependencies:
2024-04-28 11:19:03,924:INFO:                 pip: 24.0
2024-04-28 11:19:03,924:INFO:          setuptools: 69.5.1
2024-04-28 11:19:03,924:INFO:             pycaret: 3.2.0
2024-04-28 11:19:03,924:INFO:             IPython: 8.12.3
2024-04-28 11:19:03,924:INFO:          ipywidgets: 8.1.2
2024-04-28 11:19:03,924:INFO:                tqdm: 4.66.2
2024-04-28 11:19:03,924:INFO:               numpy: 1.24.4
2024-04-28 11:19:03,924:INFO:              pandas: 1.5.3
2024-04-28 11:19:03,924:INFO:              jinja2: 3.1.3
2024-04-28 11:19:03,924:INFO:               scipy: 1.10.1
2024-04-28 11:19:03,924:INFO:              joblib: 1.3.2
2024-04-28 11:19:03,924:INFO:             sklearn: 1.2.0
2024-04-28 11:19:03,924:INFO:                pyod: 1.1.3
2024-04-28 11:19:03,924:INFO:            imblearn: 0.12.2
2024-04-28 11:19:03,924:INFO:   category_encoders: 2.6.3
2024-04-28 11:19:03,924:INFO:            lightgbm: 4.3.0
2024-04-28 11:19:03,924:INFO:               numba: 0.58.1
2024-04-28 11:19:03,924:INFO:            requests: 2.31.0
2024-04-28 11:19:03,924:INFO:          matplotlib: 3.6.0
2024-04-28 11:19:03,924:INFO:          scikitplot: 0.3.7
2024-04-28 11:19:03,924:INFO:         yellowbrick: 1.5
2024-04-28 11:19:03,925:INFO:              plotly: 5.20.0
2024-04-28 11:19:03,925:INFO:    plotly-resampler: Not installed
2024-04-28 11:19:03,925:INFO:             kaleido: 0.2.1
2024-04-28 11:19:03,925:INFO:           schemdraw: 0.15
2024-04-28 11:19:03,925:INFO:         statsmodels: 0.14.1
2024-04-28 11:19:03,925:INFO:              sktime: 0.21.1
2024-04-28 11:19:03,925:INFO:               tbats: 1.1.3
2024-04-28 11:19:03,925:INFO:            pmdarima: 2.0.4
2024-04-28 11:19:03,925:INFO:              psutil: 5.9.8
2024-04-28 11:19:03,925:INFO:          markupsafe: 2.1.5
2024-04-28 11:19:03,925:INFO:             pickle5: Not installed
2024-04-28 11:19:03,925:INFO:         cloudpickle: 3.0.0
2024-04-28 11:19:03,925:INFO:         deprecation: 2.1.0
2024-04-28 11:19:03,925:INFO:              xxhash: 3.4.1
2024-04-28 11:19:03,925:INFO:           wurlitzer: Not installed
2024-04-28 11:19:03,925:INFO:PyCaret optional dependencies:
2024-04-28 11:19:03,925:INFO:                shap: Not installed
2024-04-28 11:19:03,925:INFO:           interpret: Not installed
2024-04-28 11:19:03,925:INFO:                umap: Not installed
2024-04-28 11:19:03,925:INFO:     ydata_profiling: Not installed
2024-04-28 11:19:03,925:INFO:  explainerdashboard: Not installed
2024-04-28 11:19:03,925:INFO:             autoviz: Not installed
2024-04-28 11:19:03,925:INFO:           fairlearn: Not installed
2024-04-28 11:19:03,925:INFO:          deepchecks: Not installed
2024-04-28 11:19:03,925:INFO:             xgboost: Not installed
2024-04-28 11:19:03,925:INFO:            catboost: Not installed
2024-04-28 11:19:03,925:INFO:              kmodes: Not installed
2024-04-28 11:19:03,925:INFO:             mlxtend: Not installed
2024-04-28 11:19:03,925:INFO:       statsforecast: Not installed
2024-04-28 11:19:03,925:INFO:        tune_sklearn: Not installed
2024-04-28 11:19:03,925:INFO:                 ray: Not installed
2024-04-28 11:19:03,925:INFO:            hyperopt: Not installed
2024-04-28 11:19:03,925:INFO:              optuna: Not installed
2024-04-28 11:19:03,925:INFO:               skopt: Not installed
2024-04-28 11:19:03,926:INFO:              mlflow: 2.11.3
2024-04-28 11:19:03,926:INFO:              gradio: Not installed
2024-04-28 11:19:03,926:INFO:             fastapi: Not installed
2024-04-28 11:19:03,926:INFO:             uvicorn: Not installed
2024-04-28 11:19:03,926:INFO:              m2cgen: Not installed
2024-04-28 11:19:03,926:INFO:           evidently: Not installed
2024-04-28 11:19:03,926:INFO:               fugue: Not installed
2024-04-28 11:19:03,926:INFO:           streamlit: 1.33.0
2024-04-28 11:19:03,926:INFO:             prophet: Not installed
2024-04-28 11:19:03,926:INFO:None
2024-04-28 11:19:03,926:INFO:Set up data.
2024-04-28 11:19:03,931:INFO:Set up folding strategy.
2024-04-28 11:19:03,931:INFO:Set up train/test split.
2024-04-28 11:19:03,931:INFO:Set up data.
2024-04-28 11:19:03,935:INFO:Set up index.
2024-04-28 11:19:03,935:INFO:Assigning column types.
2024-04-28 11:19:03,937:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 11:19:03,971:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 11:19:03,972:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 11:19:03,993:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:19:03,993:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:19:04,029:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 11:19:04,029:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 11:19:04,051:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:19:04,051:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:19:04,051:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 11:19:04,086:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 11:19:04,107:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:19:04,108:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:19:04,143:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 11:19:04,163:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:19:04,164:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:19:04,164:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 11:19:04,218:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:19:04,218:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:19:04,272:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:19:04,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:19:04,273:INFO:Preparing preprocessing pipeline...
2024-04-28 11:19:04,274:INFO:Set up simple imputation.
2024-04-28 11:19:04,274:INFO:Set up feature normalization.
2024-04-28 11:19:04,291:INFO:Finished creating preprocessing pipeline.
2024-04-28 11:19:04,294:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-28 11:19:04,294:INFO:Creating final display dataframe.
2024-04-28 11:19:04,346:INFO:Setup _display_container:                     Description             Value
0                    Session id              2569
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              015b
2024-04-28 11:19:04,410:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:19:04,410:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:19:04,471:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:19:04,471:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 11:19:04,471:INFO:setup() successfully completed in 0.55s...............
2024-04-28 11:19:04,472:INFO:Initializing compare_models()
2024-04-28 11:19:04,472:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A72D8E20>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000246A72D8E20>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 11:19:04,472:INFO:Checking exceptions
2024-04-28 11:19:04,474:INFO:Preparing display monitor
2024-04-28 11:19:04,490:INFO:Initializing Logistic Regression
2024-04-28 11:19:04,491:INFO:Total runtime is 1.6669432322184246e-05 minutes
2024-04-28 11:19:04,493:INFO:SubProcess create_model() called ==================================
2024-04-28 11:19:04,493:INFO:Initializing create_model()
2024-04-28 11:19:04,493:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A72D8E20>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000246A6F6D430>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 11:19:04,493:INFO:Checking exceptions
2024-04-28 11:19:04,493:INFO:Importing libraries
2024-04-28 11:19:04,493:INFO:Copying training dataset
2024-04-28 11:19:04,498:INFO:Defining folds
2024-04-28 11:19:04,498:INFO:Declaring metric variables
2024-04-28 11:19:04,501:INFO:Importing untrained model
2024-04-28 11:19:04,503:INFO:Logistic Regression Imported successfully
2024-04-28 11:19:04,507:INFO:Starting cross validation
2024-04-28 11:19:04,508:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 11:19:04,601:INFO:Calculating mean and std
2024-04-28 11:19:04,601:INFO:Creating metrics dataframe
2024-04-28 11:19:04,605:INFO:Uploading results into container
2024-04-28 11:19:04,605:INFO:Uploading model into container now
2024-04-28 11:19:04,606:INFO:_master_model_container: 1
2024-04-28 11:19:04,606:INFO:_display_container: 2
2024-04-28 11:19:04,606:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2569, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 11:19:04,606:INFO:create_model() successfully completed......................................
2024-04-28 11:19:04,778:INFO:SubProcess create_model() end ==================================
2024-04-28 11:19:04,778:INFO:Creating metrics dataframe
2024-04-28 11:19:04,785:INFO:Initializing Decision Tree Classifier
2024-04-28 11:19:04,785:INFO:Total runtime is 0.0049177686373392746 minutes
2024-04-28 11:19:04,789:INFO:SubProcess create_model() called ==================================
2024-04-28 11:19:04,789:INFO:Initializing create_model()
2024-04-28 11:19:04,789:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A72D8E20>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000246A6F6D430>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 11:19:04,789:INFO:Checking exceptions
2024-04-28 11:19:04,789:INFO:Importing libraries
2024-04-28 11:19:04,789:INFO:Copying training dataset
2024-04-28 11:19:04,793:INFO:Defining folds
2024-04-28 11:19:04,793:INFO:Declaring metric variables
2024-04-28 11:19:04,797:INFO:Importing untrained model
2024-04-28 11:19:04,799:INFO:Decision Tree Classifier Imported successfully
2024-04-28 11:19:04,804:INFO:Starting cross validation
2024-04-28 11:19:04,805:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 11:19:04,946:INFO:Calculating mean and std
2024-04-28 11:19:04,946:INFO:Creating metrics dataframe
2024-04-28 11:19:04,949:INFO:Uploading results into container
2024-04-28 11:19:04,950:INFO:Uploading model into container now
2024-04-28 11:19:04,950:INFO:_master_model_container: 2
2024-04-28 11:19:04,950:INFO:_display_container: 2
2024-04-28 11:19:04,950:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2569, splitter='best')
2024-04-28 11:19:04,950:INFO:create_model() successfully completed......................................
2024-04-28 11:19:05,135:INFO:SubProcess create_model() end ==================================
2024-04-28 11:19:05,135:INFO:Creating metrics dataframe
2024-04-28 11:19:05,147:INFO:Initializing create_model()
2024-04-28 11:19:05,147:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A72D8E20>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2569, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 11:19:05,147:INFO:Checking exceptions
2024-04-28 11:19:05,148:INFO:Importing libraries
2024-04-28 11:19:05,148:INFO:Copying training dataset
2024-04-28 11:19:05,153:INFO:Defining folds
2024-04-28 11:19:05,153:INFO:Declaring metric variables
2024-04-28 11:19:05,153:INFO:Importing untrained model
2024-04-28 11:19:05,153:INFO:Declaring custom model
2024-04-28 11:19:05,153:INFO:Decision Tree Classifier Imported successfully
2024-04-28 11:19:05,154:INFO:Cross validation set to False
2024-04-28 11:19:05,154:INFO:Fitting Model
2024-04-28 11:19:05,202:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2569, splitter='best')
2024-04-28 11:19:05,202:INFO:create_model() successfully completed......................................
2024-04-28 11:19:05,354:INFO:Initializing create_model()
2024-04-28 11:19:05,354:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A72D8E20>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2569, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 11:19:05,354:INFO:Checking exceptions
2024-04-28 11:19:05,356:INFO:Importing libraries
2024-04-28 11:19:05,356:INFO:Copying training dataset
2024-04-28 11:19:05,359:INFO:Defining folds
2024-04-28 11:19:05,359:INFO:Declaring metric variables
2024-04-28 11:19:05,359:INFO:Importing untrained model
2024-04-28 11:19:05,359:INFO:Declaring custom model
2024-04-28 11:19:05,360:INFO:Logistic Regression Imported successfully
2024-04-28 11:19:05,360:INFO:Cross validation set to False
2024-04-28 11:19:05,360:INFO:Fitting Model
2024-04-28 11:19:05,375:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2569, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 11:19:05,375:INFO:create_model() successfully completed......................................
2024-04-28 11:19:05,539:INFO:_master_model_container: 2
2024-04-28 11:19:05,539:INFO:_display_container: 2
2024-04-28 11:19:05,540:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2569, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2569, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-28 11:19:05,540:INFO:compare_models() successfully completed......................................
2024-04-28 11:19:05,541:INFO:Initializing plot_model()
2024-04-28 11:19:05,541:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2569, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A72D8E20>, system=True)
2024-04-28 11:19:05,541:INFO:Checking exceptions
2024-04-28 11:19:05,544:INFO:Preloading libraries
2024-04-28 11:19:05,545:INFO:Copying training dataset
2024-04-28 11:19:05,545:INFO:Plot type: parameter
2024-04-28 11:19:05,548:INFO:Visual Rendered Successfully
2024-04-28 11:19:05,723:INFO:plot_model() successfully completed......................................
2024-04-28 11:19:05,744:INFO:Initializing predict_model()
2024-04-28 11:19:05,744:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A72D8E20>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2569, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002469CF025E0>)
2024-04-28 11:19:05,744:INFO:Checking exceptions
2024-04-28 11:19:05,744:INFO:Preloading libraries
2024-04-28 11:19:06,095:INFO:Initializing plot_model()
2024-04-28 11:19:06,096:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2569, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A72D8E20>, system=True)
2024-04-28 11:19:06,096:INFO:Checking exceptions
2024-04-28 11:19:06,100:INFO:Preloading libraries
2024-04-28 11:19:06,101:INFO:Copying training dataset
2024-04-28 11:19:06,101:INFO:Plot type: parameter
2024-04-28 11:19:06,104:INFO:Visual Rendered Successfully
2024-04-28 11:19:06,279:INFO:plot_model() successfully completed......................................
2024-04-28 11:19:06,297:INFO:Initializing predict_model()
2024-04-28 11:19:06,297:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246A72D8E20>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2569, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000246A6E28310>)
2024-04-28 11:19:06,297:INFO:Checking exceptions
2024-04-28 11:19:06,297:INFO:Preloading libraries
2024-04-28 11:19:06,625:INFO:Initializing load_model()
2024-04-28 11:19:06,625:INFO:load_model(model_name=./model_kobe, platform=None, authentication=None, verbose=True)
2024-04-28 11:19:06,626:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.0', 'setuptools': '69.5.1', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.0', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.20.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.0', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.0', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.20.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.0', 'machine': 'AMD64'}}
  warnings.warn(

2024-04-28 11:19:06,682:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\mlflow\types\utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-28 11:19:08,746:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_19216\1973998042.py:83: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-28 11:19:08,782:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_19216\3893377491.py:5: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_versions = client.get_latest_versions(model_name)

2024-04-28 11:19:08,787:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_19216\3893377491.py:11: FutureWarning: ``mlflow.tracking.client.MlflowClient.transition_model_version_stage`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  client.transition_model_version_stage(

2024-04-28 11:32:23,998:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.0', 'setuptools': '69.5.1', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.0', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.20.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.0', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.0', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.20.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.0', 'machine': 'AMD64'}}
  warnings.warn(

2024-04-28 11:36:43,544:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.0', 'setuptools': '69.5.1', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.0', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.20.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.0', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.0', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.20.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.0', 'machine': 'AMD64'}}
  warnings.warn(

2024-04-28 11:39:25,789:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.0', 'setuptools': '69.5.1', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.0', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.20.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.0', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.0', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.20.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.0', 'machine': 'AMD64'}}
  warnings.warn(

2024-04-28 12:01:05,867:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_19216\2929750616.py:12: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(model_name, stages=['staging'])[0].version

2024-04-28 12:05:36,170:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_19216\1277045758.py:17: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(model_name, stages=['staging'])[0].version

2024-04-28 12:21:58,131:INFO:PyCaret ClassificationExperiment
2024-04-28 12:21:58,131:INFO:Logging name: Projeto Kobe
2024-04-28 12:21:58,131:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 12:21:58,131:INFO:version 3.2.0
2024-04-28 12:21:58,131:INFO:Initializing setup()
2024-04-28 12:21:58,131:INFO:self.USI: 0027
2024-04-28 12:21:58,131:INFO:self._variable_keys: {'data', '_ml_usecase', 'n_jobs_param', 'html_param', '_available_plots', 'X_test', 'is_multiclass', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'memory', 'fold_generator', 'y_test', 'X_train', 'fold_groups_param', 'idx', 'X', 'exp_name_log', 'y_train', 'y', 'log_plots_param', 'exp_id', 'pipeline', 'seed', 'gpu_param', 'target_param', 'logging_param', 'USI'}
2024-04-28 12:21:58,131:INFO:Checking environment
2024-04-28 12:21:58,131:INFO:python_version: 3.8.0
2024-04-28 12:21:58,131:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 12:21:58,131:INFO:machine: AMD64
2024-04-28 12:21:58,131:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 12:21:58,136:INFO:Memory: svmem(total=34301427712, available=20160397312, percent=41.2, used=14141030400, free=20160397312)
2024-04-28 12:21:58,136:INFO:Physical Core: 6
2024-04-28 12:21:58,136:INFO:Logical Core: 12
2024-04-28 12:21:58,136:INFO:Checking libraries
2024-04-28 12:21:58,136:INFO:System:
2024-04-28 12:21:58,136:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 12:21:58,136:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 12:21:58,136:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 12:21:58,136:INFO:PyCaret required dependencies:
2024-04-28 12:21:58,136:INFO:                 pip: 24.0
2024-04-28 12:21:58,137:INFO:          setuptools: 69.5.1
2024-04-28 12:21:58,137:INFO:             pycaret: 3.2.0
2024-04-28 12:21:58,137:INFO:             IPython: 8.12.3
2024-04-28 12:21:58,137:INFO:          ipywidgets: 8.1.2
2024-04-28 12:21:58,137:INFO:                tqdm: 4.66.2
2024-04-28 12:21:58,137:INFO:               numpy: 1.24.4
2024-04-28 12:21:58,137:INFO:              pandas: 1.5.3
2024-04-28 12:21:58,137:INFO:              jinja2: 3.1.3
2024-04-28 12:21:58,137:INFO:               scipy: 1.10.1
2024-04-28 12:21:58,137:INFO:              joblib: 1.3.2
2024-04-28 12:21:58,137:INFO:             sklearn: 1.2.0
2024-04-28 12:21:58,137:INFO:                pyod: 1.1.3
2024-04-28 12:21:58,137:INFO:            imblearn: 0.12.2
2024-04-28 12:21:58,137:INFO:   category_encoders: 2.6.3
2024-04-28 12:21:58,137:INFO:            lightgbm: 4.3.0
2024-04-28 12:21:58,137:INFO:               numba: 0.58.1
2024-04-28 12:21:58,137:INFO:            requests: 2.31.0
2024-04-28 12:21:58,137:INFO:          matplotlib: 3.6.0
2024-04-28 12:21:58,137:INFO:          scikitplot: 0.3.7
2024-04-28 12:21:58,137:INFO:         yellowbrick: 1.5
2024-04-28 12:21:58,137:INFO:              plotly: 5.20.0
2024-04-28 12:21:58,137:INFO:    plotly-resampler: Not installed
2024-04-28 12:21:58,137:INFO:             kaleido: 0.2.1
2024-04-28 12:21:58,137:INFO:           schemdraw: 0.15
2024-04-28 12:21:58,137:INFO:         statsmodels: 0.14.1
2024-04-28 12:21:58,137:INFO:              sktime: 0.21.1
2024-04-28 12:21:58,137:INFO:               tbats: 1.1.3
2024-04-28 12:21:58,137:INFO:            pmdarima: 2.0.4
2024-04-28 12:21:58,137:INFO:              psutil: 5.9.8
2024-04-28 12:21:58,137:INFO:          markupsafe: 2.1.5
2024-04-28 12:21:58,137:INFO:             pickle5: Not installed
2024-04-28 12:21:58,137:INFO:         cloudpickle: 3.0.0
2024-04-28 12:21:58,137:INFO:         deprecation: 2.1.0
2024-04-28 12:21:58,138:INFO:              xxhash: 3.4.1
2024-04-28 12:21:58,138:INFO:           wurlitzer: Not installed
2024-04-28 12:21:58,138:INFO:PyCaret optional dependencies:
2024-04-28 12:21:58,138:INFO:                shap: Not installed
2024-04-28 12:21:58,138:INFO:           interpret: Not installed
2024-04-28 12:21:58,138:INFO:                umap: Not installed
2024-04-28 12:21:58,138:INFO:     ydata_profiling: Not installed
2024-04-28 12:21:58,138:INFO:  explainerdashboard: Not installed
2024-04-28 12:21:58,138:INFO:             autoviz: Not installed
2024-04-28 12:21:58,138:INFO:           fairlearn: Not installed
2024-04-28 12:21:58,138:INFO:          deepchecks: Not installed
2024-04-28 12:21:58,138:INFO:             xgboost: Not installed
2024-04-28 12:21:58,138:INFO:            catboost: Not installed
2024-04-28 12:21:58,138:INFO:              kmodes: Not installed
2024-04-28 12:21:58,138:INFO:             mlxtend: Not installed
2024-04-28 12:21:58,138:INFO:       statsforecast: Not installed
2024-04-28 12:21:58,138:INFO:        tune_sklearn: Not installed
2024-04-28 12:21:58,138:INFO:                 ray: Not installed
2024-04-28 12:21:58,138:INFO:            hyperopt: Not installed
2024-04-28 12:21:58,138:INFO:              optuna: Not installed
2024-04-28 12:21:58,138:INFO:               skopt: Not installed
2024-04-28 12:21:58,138:INFO:              mlflow: 2.11.3
2024-04-28 12:21:58,138:INFO:              gradio: Not installed
2024-04-28 12:21:58,138:INFO:             fastapi: Not installed
2024-04-28 12:21:58,138:INFO:             uvicorn: Not installed
2024-04-28 12:21:58,138:INFO:              m2cgen: Not installed
2024-04-28 12:21:58,138:INFO:           evidently: Not installed
2024-04-28 12:21:58,138:INFO:               fugue: Not installed
2024-04-28 12:21:58,138:INFO:           streamlit: 1.33.0
2024-04-28 12:21:58,138:INFO:             prophet: Not installed
2024-04-28 12:21:58,138:INFO:None
2024-04-28 12:21:58,138:INFO:Set up data.
2024-04-28 12:21:58,143:INFO:Set up folding strategy.
2024-04-28 12:21:58,143:INFO:Set up train/test split.
2024-04-28 12:21:58,150:INFO:Set up index.
2024-04-28 12:21:58,150:INFO:Assigning column types.
2024-04-28 12:21:58,153:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 12:21:58,187:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 12:21:58,188:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:21:58,208:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:21:58,208:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:21:58,241:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 12:21:58,242:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:21:58,262:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:21:58,263:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:21:58,263:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 12:21:58,297:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:21:58,321:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:21:58,322:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:21:58,357:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:21:58,378:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:21:58,378:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:21:58,379:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 12:21:58,435:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:21:58,435:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:21:58,490:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:21:58,490:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:21:58,491:INFO:Preparing preprocessing pipeline...
2024-04-28 12:21:58,493:INFO:Set up simple imputation.
2024-04-28 12:21:58,505:INFO:Finished creating preprocessing pipeline.
2024-04-28 12:21:58,507:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-04-28 12:21:58,507:INFO:Creating final display dataframe.
2024-04-28 12:21:58,544:INFO:Setup _display_container:                     Description            Value
0                    Session id             6843
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (20285, 7)
4        Transformed data shape       (20285, 7)
5   Transformed train set shape       (14199, 7)
6    Transformed test set shape        (6086, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name     Projeto Kobe
18                          USI             0027
2024-04-28 12:21:58,598:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:21:58,598:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:21:58,654:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:21:58,654:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:21:58,655:INFO:Logging experiment in loggers
2024-04-28 12:21:58,701:INFO:SubProcess save_model() called ==================================
2024-04-28 12:21:58,705:INFO:Initializing save_model()
2024-04-28 12:21:58,705:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), model_name=C:\Users\jpsar\AppData\Local\Temp\tmperx2k1rv\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-28 12:21:58,705:INFO:Adding model into prep_pipe
2024-04-28 12:21:58,705:WARNING:Only Model saved as it was a pipeline.
2024-04-28 12:21:58,707:INFO:C:\Users\jpsar\AppData\Local\Temp\tmperx2k1rv\Transformation Pipeline.pkl saved in current working directory
2024-04-28 12:21:58,709:INFO:Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-04-28 12:21:58,709:INFO:save_model() successfully completed......................................
2024-04-28 12:21:58,891:INFO:SubProcess save_model() end ==================================
2024-04-28 12:21:58,903:INFO:setup() successfully completed in 0.53s...............
2024-04-28 12:21:58,903:INFO:Initializing compare_models()
2024-04-28 12:21:58,903:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002469F1154F0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=precision, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002469F1154F0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'precision', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 12:21:58,903:INFO:Checking exceptions
2024-04-28 12:21:58,906:INFO:Preparing display monitor
2024-04-28 12:21:58,920:INFO:Initializing Logistic Regression
2024-04-28 12:21:58,920:INFO:Total runtime is 0.0 minutes
2024-04-28 12:21:58,922:INFO:SubProcess create_model() called ==================================
2024-04-28 12:21:58,922:INFO:Initializing create_model()
2024-04-28 12:21:58,922:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002469F1154F0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002469F24BDC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:21:58,922:INFO:Checking exceptions
2024-04-28 12:21:58,922:INFO:Importing libraries
2024-04-28 12:21:58,923:INFO:Copying training dataset
2024-04-28 12:21:58,927:INFO:Defining folds
2024-04-28 12:21:58,927:INFO:Declaring metric variables
2024-04-28 12:21:58,930:INFO:Importing untrained model
2024-04-28 12:21:58,933:INFO:Logistic Regression Imported successfully
2024-04-28 12:21:58,939:INFO:Starting cross validation
2024-04-28 12:21:58,941:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:22:01,549:INFO:Calculating mean and std
2024-04-28 12:22:01,555:INFO:Creating metrics dataframe
2024-04-28 12:22:01,561:INFO:Uploading results into container
2024-04-28 12:22:01,561:INFO:Uploading model into container now
2024-04-28 12:22:01,562:INFO:_master_model_container: 1
2024-04-28 12:22:01,562:INFO:_display_container: 2
2024-04-28 12:22:01,563:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6843, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 12:22:01,563:INFO:create_model() successfully completed......................................
2024-04-28 12:22:01,802:INFO:SubProcess create_model() end ==================================
2024-04-28 12:22:01,802:INFO:Creating metrics dataframe
2024-04-28 12:22:01,808:INFO:Initializing Decision Tree Classifier
2024-04-28 12:22:01,808:INFO:Total runtime is 0.04813141028086344 minutes
2024-04-28 12:22:01,810:INFO:SubProcess create_model() called ==================================
2024-04-28 12:22:01,810:INFO:Initializing create_model()
2024-04-28 12:22:01,810:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002469F1154F0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002469F24BDC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:22:01,810:INFO:Checking exceptions
2024-04-28 12:22:01,810:INFO:Importing libraries
2024-04-28 12:22:01,810:INFO:Copying training dataset
2024-04-28 12:22:01,814:INFO:Defining folds
2024-04-28 12:22:01,814:INFO:Declaring metric variables
2024-04-28 12:22:01,816:INFO:Importing untrained model
2024-04-28 12:22:01,819:INFO:Decision Tree Classifier Imported successfully
2024-04-28 12:22:01,823:INFO:Starting cross validation
2024-04-28 12:22:01,823:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:22:03,117:INFO:Calculating mean and std
2024-04-28 12:22:03,119:INFO:Creating metrics dataframe
2024-04-28 12:22:03,123:INFO:Uploading results into container
2024-04-28 12:22:03,124:INFO:Uploading model into container now
2024-04-28 12:22:03,124:INFO:_master_model_container: 2
2024-04-28 12:22:03,124:INFO:_display_container: 2
2024-04-28 12:22:03,125:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6843, splitter='best')
2024-04-28 12:22:03,125:INFO:create_model() successfully completed......................................
2024-04-28 12:22:03,306:INFO:SubProcess create_model() end ==================================
2024-04-28 12:22:03,306:INFO:Creating metrics dataframe
2024-04-28 12:22:03,318:INFO:Initializing create_model()
2024-04-28 12:22:03,318:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002469F1154F0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6843, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:22:03,318:INFO:Checking exceptions
2024-04-28 12:22:03,319:INFO:Importing libraries
2024-04-28 12:22:03,320:INFO:Copying training dataset
2024-04-28 12:22:03,323:INFO:Defining folds
2024-04-28 12:22:03,323:INFO:Declaring metric variables
2024-04-28 12:22:03,323:INFO:Importing untrained model
2024-04-28 12:22:03,323:INFO:Declaring custom model
2024-04-28 12:22:03,324:INFO:Logistic Regression Imported successfully
2024-04-28 12:22:03,324:INFO:Cross validation set to False
2024-04-28 12:22:03,324:INFO:Fitting Model
2024-04-28 12:22:03,342:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6843, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 12:22:03,342:INFO:create_model() successfully completed......................................
2024-04-28 12:22:03,519:INFO:Creating Dashboard logs
2024-04-28 12:22:03,523:INFO:Model: Logistic Regression
2024-04-28 12:22:03,538:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 6843, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-04-28 12:22:03,603:INFO:Initializing predict_model()
2024-04-28 12:22:03,603:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002469F1154F0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6843, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000246A9EA1AF0>)
2024-04-28 12:22:03,603:INFO:Checking exceptions
2024-04-28 12:22:03,604:INFO:Preloading libraries
2024-04-28 12:22:03,828:INFO:SubProcess plot_model() called ==================================
2024-04-28 12:22:03,828:INFO:Initializing plot_model()
2024-04-28 12:22:03,828:INFO:plot_model(plot=auc, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6843, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmpqawzn956, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002469F1154F0>, system=False)
2024-04-28 12:22:03,828:INFO:Checking exceptions
2024-04-28 12:22:03,830:INFO:Preloading libraries
2024-04-28 12:22:03,830:INFO:Copying training dataset
2024-04-28 12:22:03,830:INFO:Plot type: auc
2024-04-28 12:22:03,865:INFO:Fitting Model
2024-04-28 12:22:03,866:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 12:22:03,866:INFO:Scoring test/hold-out set
2024-04-28 12:22:03,882:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmpqawzn956\AUC.png'
2024-04-28 12:22:04,050:INFO:Visual Rendered Successfully
2024-04-28 12:22:04,232:INFO:plot_model() successfully completed......................................
2024-04-28 12:22:04,237:INFO:Initializing plot_model()
2024-04-28 12:22:04,238:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6843, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmpqawzn956, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002469F1154F0>, system=False)
2024-04-28 12:22:04,238:INFO:Checking exceptions
2024-04-28 12:22:04,239:INFO:Preloading libraries
2024-04-28 12:22:04,239:INFO:Copying training dataset
2024-04-28 12:22:04,240:INFO:Plot type: confusion_matrix
2024-04-28 12:22:04,277:INFO:Fitting Model
2024-04-28 12:22:04,277:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 12:22:04,278:INFO:Scoring test/hold-out set
2024-04-28 12:22:04,291:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmpqawzn956\Confusion Matrix.png'
2024-04-28 12:22:04,378:INFO:Visual Rendered Successfully
2024-04-28 12:22:04,557:INFO:plot_model() successfully completed......................................
2024-04-28 12:22:04,563:INFO:Initializing plot_model()
2024-04-28 12:22:04,563:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6843, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmpqawzn956, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002469F1154F0>, system=False)
2024-04-28 12:22:04,563:INFO:Checking exceptions
2024-04-28 12:22:04,565:INFO:Preloading libraries
2024-04-28 12:22:04,565:INFO:Copying training dataset
2024-04-28 12:22:04,565:INFO:Plot type: feature
2024-04-28 12:22:04,597:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmpqawzn956\Feature Importance.png'
2024-04-28 12:22:04,733:INFO:Visual Rendered Successfully
2024-04-28 12:22:04,908:INFO:plot_model() successfully completed......................................
2024-04-28 12:22:04,914:INFO:SubProcess plot_model() end ==================================
2024-04-28 12:22:05,134:INFO:Creating Dashboard logs
2024-04-28 12:22:05,136:INFO:Model: Decision Tree Classifier
2024-04-28 12:22:05,149:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 6843, 'splitter': 'best'}
2024-04-28 12:22:05,431:INFO:_master_model_container: 2
2024-04-28 12:22:05,431:INFO:_display_container: 2
2024-04-28 12:22:05,432:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6843, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 12:22:05,432:INFO:compare_models() successfully completed......................................
2024-04-28 12:22:05,432:INFO:Initializing plot_model()
2024-04-28 12:22:05,433:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6843, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002469F1154F0>, system=True)
2024-04-28 12:22:05,433:INFO:Checking exceptions
2024-04-28 12:22:05,435:INFO:Preloading libraries
2024-04-28 12:22:05,435:INFO:Copying training dataset
2024-04-28 12:22:05,435:INFO:Plot type: auc
2024-04-28 12:22:05,475:INFO:Fitting Model
2024-04-28 12:22:05,476:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 12:22:05,476:INFO:Scoring test/hold-out set
2024-04-28 12:22:05,491:INFO:Saving 'AUC.png'
2024-04-28 12:22:05,662:INFO:Visual Rendered Successfully
2024-04-28 12:22:05,841:INFO:plot_model() successfully completed......................................
2024-04-28 12:22:05,847:INFO:Initializing plot_model()
2024-04-28 12:22:05,847:INFO:plot_model(plot=pr, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6843, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002469F1154F0>, system=True)
2024-04-28 12:22:05,847:INFO:Checking exceptions
2024-04-28 12:22:05,850:INFO:Preloading libraries
2024-04-28 12:22:05,850:INFO:Copying training dataset
2024-04-28 12:22:05,850:INFO:Plot type: pr
2024-04-28 12:22:05,889:INFO:Fitting Model
2024-04-28 12:22:05,890:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 12:22:05,891:INFO:Scoring test/hold-out set
2024-04-28 12:22:05,904:INFO:Saving 'Precision Recall.png'
2024-04-28 12:22:06,054:INFO:Visual Rendered Successfully
2024-04-28 12:22:06,228:INFO:plot_model() successfully completed......................................
2024-04-28 12:22:06,234:INFO:Initializing plot_model()
2024-04-28 12:22:06,234:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6843, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002469F1154F0>, system=True)
2024-04-28 12:22:06,234:INFO:Checking exceptions
2024-04-28 12:22:06,237:INFO:Preloading libraries
2024-04-28 12:22:06,238:INFO:Copying training dataset
2024-04-28 12:22:06,238:INFO:Plot type: confusion_matrix
2024-04-28 12:22:06,278:INFO:Fitting Model
2024-04-28 12:22:06,278:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 12:22:06,278:INFO:Scoring test/hold-out set
2024-04-28 12:22:06,291:INFO:Saving 'Confusion Matrix.png'
2024-04-28 12:22:06,373:INFO:Visual Rendered Successfully
2024-04-28 12:22:06,550:INFO:plot_model() successfully completed......................................
2024-04-28 12:22:06,556:INFO:Initializing plot_model()
2024-04-28 12:22:06,556:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6843, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002469F1154F0>, system=True)
2024-04-28 12:22:06,556:INFO:Checking exceptions
2024-04-28 12:22:06,559:INFO:Preloading libraries
2024-04-28 12:22:06,559:INFO:Copying training dataset
2024-04-28 12:22:06,560:INFO:Plot type: learning
2024-04-28 12:22:06,602:INFO:Fitting Model
2024-04-28 12:22:08,971:INFO:Saving 'Learning Curve.png'
2024-04-28 12:22:09,127:INFO:Visual Rendered Successfully
2024-04-28 12:22:09,300:INFO:plot_model() successfully completed......................................
2024-04-28 12:22:09,306:INFO:Initializing plot_model()
2024-04-28 12:22:09,306:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6843, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002469F1154F0>, system=True)
2024-04-28 12:22:09,306:INFO:Checking exceptions
2024-04-28 12:22:09,309:INFO:Preloading libraries
2024-04-28 12:22:09,309:INFO:Copying training dataset
2024-04-28 12:22:09,309:INFO:Plot type: feature
2024-04-28 12:22:09,341:INFO:Saving 'Feature Importance.png'
2024-04-28 12:22:09,449:INFO:Visual Rendered Successfully
2024-04-28 12:22:09,625:INFO:plot_model() successfully completed......................................
2024-04-28 12:25:46,484:INFO:Initializing predict_model()
2024-04-28 12:25:46,484:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002469F1154F0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6843, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000246A9E254C0>)
2024-04-28 12:25:46,484:INFO:Checking exceptions
2024-04-28 12:25:46,484:INFO:Preloading libraries
2024-04-28 12:26:28,530:INFO:Initializing predict_model()
2024-04-28 12:26:28,530:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002469F1154F0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6843, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000246A9EFC1F0>)
2024-04-28 12:26:28,530:INFO:Checking exceptions
2024-04-28 12:26:28,530:INFO:Preloading libraries
2024-04-28 12:51:42,126:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-28 12:51:42,127:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-28 12:51:42,127:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-28 12:51:42,127:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-28 12:51:45,904:INFO:PyCaret ClassificationExperiment
2024-04-28 12:51:45,904:INFO:Logging name: clf-default-name
2024-04-28 12:51:45,904:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 12:51:45,904:INFO:version 3.2.0
2024-04-28 12:51:45,904:INFO:Initializing setup()
2024-04-28 12:51:45,904:INFO:self.USI: c801
2024-04-28 12:51:45,904:INFO:self._variable_keys: {'log_plots_param', 'fold_shuffle_param', 'X_test', 'target_param', 'fold_groups_param', 'y_test', 'logging_param', 'y', 'fold_generator', 'fix_imbalance', 'pipeline', 'gpu_param', 'memory', 'X', '_available_plots', 'is_multiclass', 'html_param', 'exp_name_log', 'idx', 'n_jobs_param', 'exp_id', 'y_train', 'X_train', 'gpu_n_jobs_param', 'USI', 'seed', '_ml_usecase', 'data'}
2024-04-28 12:51:45,904:INFO:Checking environment
2024-04-28 12:51:45,904:INFO:python_version: 3.8.0
2024-04-28 12:51:45,904:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 12:51:45,904:INFO:machine: AMD64
2024-04-28 12:51:45,905:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 12:51:45,909:INFO:Memory: svmem(total=34301427712, available=19878719488, percent=42.0, used=14422708224, free=19878719488)
2024-04-28 12:51:45,909:INFO:Physical Core: 6
2024-04-28 12:51:45,909:INFO:Logical Core: 12
2024-04-28 12:51:45,909:INFO:Checking libraries
2024-04-28 12:51:45,909:INFO:System:
2024-04-28 12:51:45,909:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 12:51:45,909:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 12:51:45,909:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 12:51:45,910:INFO:PyCaret required dependencies:
2024-04-28 12:51:45,954:INFO:                 pip: 24.0
2024-04-28 12:51:45,954:INFO:          setuptools: 69.5.1
2024-04-28 12:51:45,954:INFO:             pycaret: 3.2.0
2024-04-28 12:51:45,954:INFO:             IPython: 8.12.3
2024-04-28 12:51:45,954:INFO:          ipywidgets: 8.1.2
2024-04-28 12:51:45,954:INFO:                tqdm: 4.66.2
2024-04-28 12:51:45,954:INFO:               numpy: 1.24.4
2024-04-28 12:51:45,954:INFO:              pandas: 1.5.3
2024-04-28 12:51:45,954:INFO:              jinja2: 3.1.3
2024-04-28 12:51:45,954:INFO:               scipy: 1.10.1
2024-04-28 12:51:45,954:INFO:              joblib: 1.3.2
2024-04-28 12:51:45,954:INFO:             sklearn: 1.2.0
2024-04-28 12:51:45,954:INFO:                pyod: 1.1.3
2024-04-28 12:51:45,954:INFO:            imblearn: 0.12.2
2024-04-28 12:51:45,954:INFO:   category_encoders: 2.6.3
2024-04-28 12:51:45,954:INFO:            lightgbm: 4.3.0
2024-04-28 12:51:45,954:INFO:               numba: 0.58.1
2024-04-28 12:51:45,954:INFO:            requests: 2.31.0
2024-04-28 12:51:45,954:INFO:          matplotlib: 3.6.0
2024-04-28 12:51:45,954:INFO:          scikitplot: 0.3.7
2024-04-28 12:51:45,954:INFO:         yellowbrick: 1.5
2024-04-28 12:51:45,954:INFO:              plotly: 5.20.0
2024-04-28 12:51:45,954:INFO:    plotly-resampler: Not installed
2024-04-28 12:51:45,955:INFO:             kaleido: 0.2.1
2024-04-28 12:51:45,955:INFO:           schemdraw: 0.15
2024-04-28 12:51:45,955:INFO:         statsmodels: 0.14.1
2024-04-28 12:51:45,955:INFO:              sktime: 0.21.1
2024-04-28 12:51:45,955:INFO:               tbats: 1.1.3
2024-04-28 12:51:45,955:INFO:            pmdarima: 2.0.4
2024-04-28 12:51:45,955:INFO:              psutil: 5.9.8
2024-04-28 12:51:45,955:INFO:          markupsafe: 2.1.5
2024-04-28 12:51:45,955:INFO:             pickle5: Not installed
2024-04-28 12:51:45,955:INFO:         cloudpickle: 3.0.0
2024-04-28 12:51:45,955:INFO:         deprecation: 2.1.0
2024-04-28 12:51:45,955:INFO:              xxhash: 3.4.1
2024-04-28 12:51:45,955:INFO:           wurlitzer: Not installed
2024-04-28 12:51:45,955:INFO:PyCaret optional dependencies:
2024-04-28 12:51:45,962:INFO:                shap: Not installed
2024-04-28 12:51:45,962:INFO:           interpret: Not installed
2024-04-28 12:51:45,962:INFO:                umap: Not installed
2024-04-28 12:51:45,962:INFO:     ydata_profiling: Not installed
2024-04-28 12:51:45,962:INFO:  explainerdashboard: Not installed
2024-04-28 12:51:45,962:INFO:             autoviz: Not installed
2024-04-28 12:51:45,962:INFO:           fairlearn: Not installed
2024-04-28 12:51:45,962:INFO:          deepchecks: Not installed
2024-04-28 12:51:45,962:INFO:             xgboost: Not installed
2024-04-28 12:51:45,962:INFO:            catboost: Not installed
2024-04-28 12:51:45,962:INFO:              kmodes: Not installed
2024-04-28 12:51:45,962:INFO:             mlxtend: Not installed
2024-04-28 12:51:45,962:INFO:       statsforecast: Not installed
2024-04-28 12:51:45,962:INFO:        tune_sklearn: Not installed
2024-04-28 12:51:45,962:INFO:                 ray: Not installed
2024-04-28 12:51:45,962:INFO:            hyperopt: Not installed
2024-04-28 12:51:45,962:INFO:              optuna: Not installed
2024-04-28 12:51:45,962:INFO:               skopt: Not installed
2024-04-28 12:51:45,962:INFO:              mlflow: 2.11.3
2024-04-28 12:51:45,962:INFO:              gradio: Not installed
2024-04-28 12:51:45,962:INFO:             fastapi: Not installed
2024-04-28 12:51:45,962:INFO:             uvicorn: Not installed
2024-04-28 12:51:45,962:INFO:              m2cgen: Not installed
2024-04-28 12:51:45,962:INFO:           evidently: Not installed
2024-04-28 12:51:45,962:INFO:               fugue: Not installed
2024-04-28 12:51:45,962:INFO:           streamlit: 1.33.0
2024-04-28 12:51:45,962:INFO:             prophet: Not installed
2024-04-28 12:51:45,962:INFO:None
2024-04-28 12:51:45,962:INFO:Set up data.
2024-04-28 12:51:45,967:INFO:Set up folding strategy.
2024-04-28 12:51:45,967:INFO:Set up train/test split.
2024-04-28 12:51:45,967:INFO:Set up data.
2024-04-28 12:51:45,970:INFO:Set up index.
2024-04-28 12:51:45,970:INFO:Assigning column types.
2024-04-28 12:51:45,972:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 12:51:46,005:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 12:51:46,006:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:51:46,032:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:46,032:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:46,066:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 12:51:46,067:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:51:46,088:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:46,088:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:46,089:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 12:51:46,123:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:51:46,144:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:46,145:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:46,179:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:51:46,202:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:46,202:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:46,202:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 12:51:46,258:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:46,259:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:46,429:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:46,430:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:46,431:INFO:Preparing preprocessing pipeline...
2024-04-28 12:51:46,432:INFO:Set up simple imputation.
2024-04-28 12:51:46,432:INFO:Set up feature normalization.
2024-04-28 12:51:46,459:INFO:Finished creating preprocessing pipeline.
2024-04-28 12:51:46,462:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-28 12:51:46,462:INFO:Creating final display dataframe.
2024-04-28 12:51:46,520:INFO:Setup _display_container:                     Description             Value
0                    Session id               485
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              c801
2024-04-28 12:51:46,580:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:46,580:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:46,634:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:46,634:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:46,634:INFO:setup() successfully completed in 0.73s...............
2024-04-28 12:51:46,634:INFO:Initializing compare_models()
2024-04-28 12:51:46,634:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026292241FA0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000026292241FA0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 12:51:46,634:INFO:Checking exceptions
2024-04-28 12:51:46,637:INFO:Preparing display monitor
2024-04-28 12:51:46,651:INFO:Initializing Logistic Regression
2024-04-28 12:51:46,651:INFO:Total runtime is 0.0 minutes
2024-04-28 12:51:46,654:INFO:SubProcess create_model() called ==================================
2024-04-28 12:51:46,654:INFO:Initializing create_model()
2024-04-28 12:51:46,654:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026292241FA0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002628F842910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:51:46,654:INFO:Checking exceptions
2024-04-28 12:51:46,654:INFO:Importing libraries
2024-04-28 12:51:46,654:INFO:Copying training dataset
2024-04-28 12:51:46,658:INFO:Defining folds
2024-04-28 12:51:46,658:INFO:Declaring metric variables
2024-04-28 12:51:46,661:INFO:Importing untrained model
2024-04-28 12:51:46,663:INFO:Logistic Regression Imported successfully
2024-04-28 12:51:46,667:INFO:Starting cross validation
2024-04-28 12:51:46,668:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:51:49,107:INFO:Calculating mean and std
2024-04-28 12:51:49,110:INFO:Creating metrics dataframe
2024-04-28 12:51:49,121:INFO:Uploading results into container
2024-04-28 12:51:49,122:INFO:Uploading model into container now
2024-04-28 12:51:49,123:INFO:_master_model_container: 1
2024-04-28 12:51:49,123:INFO:_display_container: 2
2024-04-28 12:51:49,124:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=485, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 12:51:49,124:INFO:create_model() successfully completed......................................
2024-04-28 12:51:49,312:INFO:SubProcess create_model() end ==================================
2024-04-28 12:51:49,312:INFO:Creating metrics dataframe
2024-04-28 12:51:49,319:INFO:Initializing Decision Tree Classifier
2024-04-28 12:51:49,319:INFO:Total runtime is 0.044468820095062256 minutes
2024-04-28 12:51:49,322:INFO:SubProcess create_model() called ==================================
2024-04-28 12:51:49,322:INFO:Initializing create_model()
2024-04-28 12:51:49,322:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026292241FA0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002628F842910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:51:49,322:INFO:Checking exceptions
2024-04-28 12:51:49,322:INFO:Importing libraries
2024-04-28 12:51:49,322:INFO:Copying training dataset
2024-04-28 12:51:49,326:INFO:Defining folds
2024-04-28 12:51:49,326:INFO:Declaring metric variables
2024-04-28 12:51:49,329:INFO:Importing untrained model
2024-04-28 12:51:49,331:INFO:Decision Tree Classifier Imported successfully
2024-04-28 12:51:49,335:INFO:Starting cross validation
2024-04-28 12:51:49,336:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:51:50,671:INFO:Calculating mean and std
2024-04-28 12:51:50,673:INFO:Creating metrics dataframe
2024-04-28 12:51:50,677:INFO:Uploading results into container
2024-04-28 12:51:50,678:INFO:Uploading model into container now
2024-04-28 12:51:50,678:INFO:_master_model_container: 2
2024-04-28 12:51:50,678:INFO:_display_container: 2
2024-04-28 12:51:50,679:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=485, splitter='best')
2024-04-28 12:51:50,679:INFO:create_model() successfully completed......................................
2024-04-28 12:51:50,792:INFO:SubProcess create_model() end ==================================
2024-04-28 12:51:50,792:INFO:Creating metrics dataframe
2024-04-28 12:51:50,805:INFO:Initializing create_model()
2024-04-28 12:51:50,805:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026292241FA0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=485, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:51:50,805:INFO:Checking exceptions
2024-04-28 12:51:50,806:INFO:Importing libraries
2024-04-28 12:51:50,806:INFO:Copying training dataset
2024-04-28 12:51:50,809:INFO:Defining folds
2024-04-28 12:51:50,809:INFO:Declaring metric variables
2024-04-28 12:51:50,810:INFO:Importing untrained model
2024-04-28 12:51:50,810:INFO:Declaring custom model
2024-04-28 12:51:50,810:INFO:Decision Tree Classifier Imported successfully
2024-04-28 12:51:50,811:INFO:Cross validation set to False
2024-04-28 12:51:50,811:INFO:Fitting Model
2024-04-28 12:51:50,861:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=485, splitter='best')
2024-04-28 12:51:50,861:INFO:create_model() successfully completed......................................
2024-04-28 12:51:50,965:INFO:Initializing create_model()
2024-04-28 12:51:50,965:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026292241FA0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=485, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:51:50,965:INFO:Checking exceptions
2024-04-28 12:51:50,967:INFO:Importing libraries
2024-04-28 12:51:50,967:INFO:Copying training dataset
2024-04-28 12:51:50,970:INFO:Defining folds
2024-04-28 12:51:50,971:INFO:Declaring metric variables
2024-04-28 12:51:50,971:INFO:Importing untrained model
2024-04-28 12:51:50,971:INFO:Declaring custom model
2024-04-28 12:51:50,971:INFO:Logistic Regression Imported successfully
2024-04-28 12:51:50,972:INFO:Cross validation set to False
2024-04-28 12:51:50,972:INFO:Fitting Model
2024-04-28 12:51:50,986:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=485, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 12:51:50,986:INFO:create_model() successfully completed......................................
2024-04-28 12:51:51,097:INFO:_master_model_container: 2
2024-04-28 12:51:51,097:INFO:_display_container: 2
2024-04-28 12:51:51,098:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=485, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=485, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-28 12:51:51,098:INFO:compare_models() successfully completed......................................
2024-04-28 12:51:51,099:INFO:Initializing plot_model()
2024-04-28 12:51:51,099:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=485, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026292241FA0>, system=True)
2024-04-28 12:51:51,099:INFO:Checking exceptions
2024-04-28 12:51:51,102:INFO:Preloading libraries
2024-04-28 12:51:51,103:INFO:Copying training dataset
2024-04-28 12:51:51,103:INFO:Plot type: parameter
2024-04-28 12:51:51,105:INFO:Visual Rendered Successfully
2024-04-28 12:51:51,203:INFO:plot_model() successfully completed......................................
2024-04-28 12:51:51,231:INFO:Initializing predict_model()
2024-04-28 12:51:51,231:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026292241FA0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=485, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000262925D58B0>)
2024-04-28 12:51:51,231:INFO:Checking exceptions
2024-04-28 12:51:51,231:INFO:Preloading libraries
2024-04-28 12:51:51,479:INFO:Initializing plot_model()
2024-04-28 12:51:51,479:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=485, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026292241FA0>, system=True)
2024-04-28 12:51:51,479:INFO:Checking exceptions
2024-04-28 12:51:51,482:INFO:Preloading libraries
2024-04-28 12:51:51,482:INFO:Copying training dataset
2024-04-28 12:51:51,482:INFO:Plot type: parameter
2024-04-28 12:51:51,485:INFO:Visual Rendered Successfully
2024-04-28 12:51:51,585:INFO:plot_model() successfully completed......................................
2024-04-28 12:51:51,601:INFO:Initializing predict_model()
2024-04-28 12:51:51,601:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026292241FA0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=485, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002628D59E820>)
2024-04-28 12:51:51,601:INFO:Checking exceptions
2024-04-28 12:51:51,601:INFO:Preloading libraries
2024-04-28 12:51:51,843:INFO:Initializing load_model()
2024-04-28 12:51:51,843:INFO:load_model(model_name=./model_kobe, platform=None, authentication=None, verbose=True)
2024-04-28 12:51:51,850:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.0', 'setuptools': '69.5.1', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.0', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.20.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.0', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.0', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.20.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.0', 'machine': 'AMD64'}}
  warnings.warn(

2024-04-28 12:51:51,909:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\mlflow\types\utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-28 12:51:54,509:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\_distutils_hack\__init__.py:26: UserWarning: Setuptools is replacing distutils.
  warnings.warn("Setuptools is replacing distutils.")

2024-04-28 12:51:54,576:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_13812\1973998042.py:83: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-28 12:51:54,612:INFO:PyCaret ClassificationExperiment
2024-04-28 12:51:54,612:INFO:Logging name: Projeto Kobe
2024-04-28 12:51:54,612:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 12:51:54,612:INFO:version 3.2.0
2024-04-28 12:51:54,612:INFO:Initializing setup()
2024-04-28 12:51:54,612:INFO:self.USI: bd9a
2024-04-28 12:51:54,612:INFO:self._variable_keys: {'log_plots_param', 'fold_shuffle_param', 'X_test', 'target_param', 'fold_groups_param', 'y_test', 'logging_param', 'y', 'fold_generator', 'fix_imbalance', 'pipeline', 'gpu_param', 'memory', 'X', '_available_plots', 'is_multiclass', 'html_param', 'exp_name_log', 'idx', 'n_jobs_param', 'exp_id', 'y_train', 'X_train', 'gpu_n_jobs_param', 'USI', 'seed', '_ml_usecase', 'data'}
2024-04-28 12:51:54,612:INFO:Checking environment
2024-04-28 12:51:54,612:INFO:python_version: 3.8.0
2024-04-28 12:51:54,612:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 12:51:54,612:INFO:machine: AMD64
2024-04-28 12:51:54,612:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 12:51:54,618:INFO:Memory: svmem(total=34301427712, available=18429132800, percent=46.3, used=15872294912, free=18429132800)
2024-04-28 12:51:54,618:INFO:Physical Core: 6
2024-04-28 12:51:54,618:INFO:Logical Core: 12
2024-04-28 12:51:54,618:INFO:Checking libraries
2024-04-28 12:51:54,618:INFO:System:
2024-04-28 12:51:54,618:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 12:51:54,618:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 12:51:54,618:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 12:51:54,618:INFO:PyCaret required dependencies:
2024-04-28 12:51:54,618:INFO:                 pip: 24.0
2024-04-28 12:51:54,618:INFO:          setuptools: 69.5.1
2024-04-28 12:51:54,618:INFO:             pycaret: 3.2.0
2024-04-28 12:51:54,618:INFO:             IPython: 8.12.3
2024-04-28 12:51:54,618:INFO:          ipywidgets: 8.1.2
2024-04-28 12:51:54,619:INFO:                tqdm: 4.66.2
2024-04-28 12:51:54,619:INFO:               numpy: 1.24.4
2024-04-28 12:51:54,619:INFO:              pandas: 1.5.3
2024-04-28 12:51:54,619:INFO:              jinja2: 3.1.3
2024-04-28 12:51:54,619:INFO:               scipy: 1.10.1
2024-04-28 12:51:54,619:INFO:              joblib: 1.3.2
2024-04-28 12:51:54,619:INFO:             sklearn: 1.2.0
2024-04-28 12:51:54,619:INFO:                pyod: 1.1.3
2024-04-28 12:51:54,619:INFO:            imblearn: 0.12.2
2024-04-28 12:51:54,619:INFO:   category_encoders: 2.6.3
2024-04-28 12:51:54,619:INFO:            lightgbm: 4.3.0
2024-04-28 12:51:54,619:INFO:               numba: 0.58.1
2024-04-28 12:51:54,619:INFO:            requests: 2.31.0
2024-04-28 12:51:54,619:INFO:          matplotlib: 3.6.0
2024-04-28 12:51:54,619:INFO:          scikitplot: 0.3.7
2024-04-28 12:51:54,619:INFO:         yellowbrick: 1.5
2024-04-28 12:51:54,619:INFO:              plotly: 5.20.0
2024-04-28 12:51:54,619:INFO:    plotly-resampler: Not installed
2024-04-28 12:51:54,619:INFO:             kaleido: 0.2.1
2024-04-28 12:51:54,619:INFO:           schemdraw: 0.15
2024-04-28 12:51:54,619:INFO:         statsmodels: 0.14.1
2024-04-28 12:51:54,619:INFO:              sktime: 0.21.1
2024-04-28 12:51:54,619:INFO:               tbats: 1.1.3
2024-04-28 12:51:54,619:INFO:            pmdarima: 2.0.4
2024-04-28 12:51:54,619:INFO:              psutil: 5.9.8
2024-04-28 12:51:54,619:INFO:          markupsafe: 2.1.5
2024-04-28 12:51:54,619:INFO:             pickle5: Not installed
2024-04-28 12:51:54,619:INFO:         cloudpickle: 3.0.0
2024-04-28 12:51:54,619:INFO:         deprecation: 2.1.0
2024-04-28 12:51:54,619:INFO:              xxhash: 3.4.1
2024-04-28 12:51:54,619:INFO:           wurlitzer: Not installed
2024-04-28 12:51:54,619:INFO:PyCaret optional dependencies:
2024-04-28 12:51:54,619:INFO:                shap: Not installed
2024-04-28 12:51:54,619:INFO:           interpret: Not installed
2024-04-28 12:51:54,619:INFO:                umap: Not installed
2024-04-28 12:51:54,619:INFO:     ydata_profiling: Not installed
2024-04-28 12:51:54,619:INFO:  explainerdashboard: Not installed
2024-04-28 12:51:54,619:INFO:             autoviz: Not installed
2024-04-28 12:51:54,619:INFO:           fairlearn: Not installed
2024-04-28 12:51:54,619:INFO:          deepchecks: Not installed
2024-04-28 12:51:54,619:INFO:             xgboost: Not installed
2024-04-28 12:51:54,620:INFO:            catboost: Not installed
2024-04-28 12:51:54,620:INFO:              kmodes: Not installed
2024-04-28 12:51:54,620:INFO:             mlxtend: Not installed
2024-04-28 12:51:54,620:INFO:       statsforecast: Not installed
2024-04-28 12:51:54,620:INFO:        tune_sklearn: Not installed
2024-04-28 12:51:54,620:INFO:                 ray: Not installed
2024-04-28 12:51:54,620:INFO:            hyperopt: Not installed
2024-04-28 12:51:54,620:INFO:              optuna: Not installed
2024-04-28 12:51:54,620:INFO:               skopt: Not installed
2024-04-28 12:51:54,620:INFO:              mlflow: 2.11.3
2024-04-28 12:51:54,620:INFO:              gradio: Not installed
2024-04-28 12:51:54,620:INFO:             fastapi: Not installed
2024-04-28 12:51:54,620:INFO:             uvicorn: Not installed
2024-04-28 12:51:54,620:INFO:              m2cgen: Not installed
2024-04-28 12:51:54,620:INFO:           evidently: Not installed
2024-04-28 12:51:54,620:INFO:               fugue: Not installed
2024-04-28 12:51:54,620:INFO:           streamlit: 1.33.0
2024-04-28 12:51:54,620:INFO:             prophet: Not installed
2024-04-28 12:51:54,620:INFO:None
2024-04-28 12:51:54,620:INFO:Set up data.
2024-04-28 12:51:54,625:INFO:Set up folding strategy.
2024-04-28 12:51:54,625:INFO:Set up train/test split.
2024-04-28 12:51:54,631:INFO:Set up index.
2024-04-28 12:51:54,631:INFO:Assigning column types.
2024-04-28 12:51:54,634:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 12:51:54,667:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 12:51:54,668:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:51:54,689:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:54,689:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:54,724:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 12:51:54,724:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:51:54,746:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:54,746:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:54,746:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 12:51:54,781:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:51:54,802:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:54,802:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:54,836:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:51:54,856:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:54,856:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:54,856:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 12:51:54,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:54,912:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:54,974:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:54,974:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:54,975:INFO:Preparing preprocessing pipeline...
2024-04-28 12:51:54,976:INFO:Set up simple imputation.
2024-04-28 12:51:54,988:INFO:Finished creating preprocessing pipeline.
2024-04-28 12:51:54,990:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-04-28 12:51:54,990:INFO:Creating final display dataframe.
2024-04-28 12:51:55,029:INFO:Setup _display_container:                     Description            Value
0                    Session id             4907
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (20285, 7)
4        Transformed data shape       (20285, 7)
5   Transformed train set shape       (14199, 7)
6    Transformed test set shape        (6086, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name     Projeto Kobe
18                          USI             bd9a
2024-04-28 12:51:55,087:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:55,087:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:55,143:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:55,143:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:51:55,144:INFO:Logging experiment in loggers
2024-04-28 12:51:55,182:INFO:SubProcess save_model() called ==================================
2024-04-28 12:51:55,186:INFO:Initializing save_model()
2024-04-28 12:51:55,186:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), model_name=C:\Users\jpsar\AppData\Local\Temp\tmp753zgivd\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-28 12:51:55,186:INFO:Adding model into prep_pipe
2024-04-28 12:51:55,186:WARNING:Only Model saved as it was a pipeline.
2024-04-28 12:51:55,188:INFO:C:\Users\jpsar\AppData\Local\Temp\tmp753zgivd\Transformation Pipeline.pkl saved in current working directory
2024-04-28 12:51:55,190:INFO:Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-04-28 12:51:55,190:INFO:save_model() successfully completed......................................
2024-04-28 12:51:55,326:INFO:SubProcess save_model() end ==================================
2024-04-28 12:51:55,337:INFO:setup() successfully completed in 0.53s...............
2024-04-28 12:51:55,338:INFO:Initializing compare_models()
2024-04-28 12:51:55,338:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002628F7CA070>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=precision, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002628F7CA070>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'precision', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 12:51:55,338:INFO:Checking exceptions
2024-04-28 12:51:55,341:INFO:Preparing display monitor
2024-04-28 12:51:55,355:INFO:Initializing Logistic Regression
2024-04-28 12:51:55,355:INFO:Total runtime is 0.0 minutes
2024-04-28 12:51:55,357:INFO:SubProcess create_model() called ==================================
2024-04-28 12:51:55,358:INFO:Initializing create_model()
2024-04-28 12:51:55,358:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002628F7CA070>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026287CC2850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:51:55,358:INFO:Checking exceptions
2024-04-28 12:51:55,358:INFO:Importing libraries
2024-04-28 12:51:55,358:INFO:Copying training dataset
2024-04-28 12:51:55,362:INFO:Defining folds
2024-04-28 12:51:55,362:INFO:Declaring metric variables
2024-04-28 12:51:55,364:INFO:Importing untrained model
2024-04-28 12:51:55,366:INFO:Logistic Regression Imported successfully
2024-04-28 12:51:55,370:INFO:Starting cross validation
2024-04-28 12:51:55,371:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:51:55,482:INFO:Calculating mean and std
2024-04-28 12:51:55,482:INFO:Creating metrics dataframe
2024-04-28 12:51:55,486:INFO:Uploading results into container
2024-04-28 12:51:55,487:INFO:Uploading model into container now
2024-04-28 12:51:55,487:INFO:_master_model_container: 1
2024-04-28 12:51:55,487:INFO:_display_container: 2
2024-04-28 12:51:55,487:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4907, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 12:51:55,487:INFO:create_model() successfully completed......................................
2024-04-28 12:51:55,615:INFO:SubProcess create_model() end ==================================
2024-04-28 12:51:55,615:INFO:Creating metrics dataframe
2024-04-28 12:51:55,621:INFO:Initializing Decision Tree Classifier
2024-04-28 12:51:55,622:INFO:Total runtime is 0.004451076189676921 minutes
2024-04-28 12:51:55,624:INFO:SubProcess create_model() called ==================================
2024-04-28 12:51:55,624:INFO:Initializing create_model()
2024-04-28 12:51:55,624:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002628F7CA070>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026287CC2850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:51:55,624:INFO:Checking exceptions
2024-04-28 12:51:55,624:INFO:Importing libraries
2024-04-28 12:51:55,624:INFO:Copying training dataset
2024-04-28 12:51:55,628:INFO:Defining folds
2024-04-28 12:51:55,628:INFO:Declaring metric variables
2024-04-28 12:51:55,630:INFO:Importing untrained model
2024-04-28 12:51:55,633:INFO:Decision Tree Classifier Imported successfully
2024-04-28 12:51:55,637:INFO:Starting cross validation
2024-04-28 12:51:55,638:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:51:55,735:INFO:Calculating mean and std
2024-04-28 12:51:55,735:INFO:Creating metrics dataframe
2024-04-28 12:51:55,739:INFO:Uploading results into container
2024-04-28 12:51:55,739:INFO:Uploading model into container now
2024-04-28 12:51:55,739:INFO:_master_model_container: 2
2024-04-28 12:51:55,739:INFO:_display_container: 2
2024-04-28 12:51:55,739:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4907, splitter='best')
2024-04-28 12:51:55,739:INFO:create_model() successfully completed......................................
2024-04-28 12:51:55,871:INFO:SubProcess create_model() end ==================================
2024-04-28 12:51:55,871:INFO:Creating metrics dataframe
2024-04-28 12:51:55,883:INFO:Initializing create_model()
2024-04-28 12:51:55,883:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002628F7CA070>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4907, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:51:55,883:INFO:Checking exceptions
2024-04-28 12:51:55,885:INFO:Importing libraries
2024-04-28 12:51:55,885:INFO:Copying training dataset
2024-04-28 12:51:55,888:INFO:Defining folds
2024-04-28 12:51:55,888:INFO:Declaring metric variables
2024-04-28 12:51:55,888:INFO:Importing untrained model
2024-04-28 12:51:55,889:INFO:Declaring custom model
2024-04-28 12:51:55,889:INFO:Logistic Regression Imported successfully
2024-04-28 12:51:55,889:INFO:Cross validation set to False
2024-04-28 12:51:55,889:INFO:Fitting Model
2024-04-28 12:51:55,919:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4907, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 12:51:55,920:INFO:create_model() successfully completed......................................
2024-04-28 12:51:56,060:INFO:Creating Dashboard logs
2024-04-28 12:51:56,063:INFO:Model: Logistic Regression
2024-04-28 12:51:56,075:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 4907, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-04-28 12:51:56,139:INFO:Initializing predict_model()
2024-04-28 12:51:56,139:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002628F7CA070>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4907, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026295A5C940>)
2024-04-28 12:51:56,139:INFO:Checking exceptions
2024-04-28 12:51:56,139:INFO:Preloading libraries
2024-04-28 12:51:56,317:INFO:SubProcess plot_model() called ==================================
2024-04-28 12:51:56,318:INFO:Initializing plot_model()
2024-04-28 12:51:56,318:INFO:plot_model(plot=auc, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4907, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmp_elni759, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002628F7CA070>, system=False)
2024-04-28 12:51:56,318:INFO:Checking exceptions
2024-04-28 12:51:56,319:INFO:Preloading libraries
2024-04-28 12:51:56,320:INFO:Copying training dataset
2024-04-28 12:51:56,320:INFO:Plot type: auc
2024-04-28 12:51:56,356:INFO:Fitting Model
2024-04-28 12:51:56,363:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 12:51:56,364:INFO:Scoring test/hold-out set
2024-04-28 12:51:56,378:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmp_elni759\AUC.png'
2024-04-28 12:51:56,549:INFO:Visual Rendered Successfully
2024-04-28 12:51:56,683:INFO:plot_model() successfully completed......................................
2024-04-28 12:51:56,689:INFO:Initializing plot_model()
2024-04-28 12:51:56,689:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4907, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmp_elni759, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002628F7CA070>, system=False)
2024-04-28 12:51:56,689:INFO:Checking exceptions
2024-04-28 12:51:56,691:INFO:Preloading libraries
2024-04-28 12:51:56,691:INFO:Copying training dataset
2024-04-28 12:51:56,691:INFO:Plot type: confusion_matrix
2024-04-28 12:51:56,727:INFO:Fitting Model
2024-04-28 12:51:56,728:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 12:51:56,728:INFO:Scoring test/hold-out set
2024-04-28 12:51:56,740:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmp_elni759\Confusion Matrix.png'
2024-04-28 12:51:56,825:INFO:Visual Rendered Successfully
2024-04-28 12:51:56,954:INFO:plot_model() successfully completed......................................
2024-04-28 12:51:56,960:INFO:Initializing plot_model()
2024-04-28 12:51:56,960:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4907, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmp_elni759, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002628F7CA070>, system=False)
2024-04-28 12:51:56,960:INFO:Checking exceptions
2024-04-28 12:51:56,961:INFO:Preloading libraries
2024-04-28 12:51:56,962:INFO:Copying training dataset
2024-04-28 12:51:56,962:INFO:Plot type: feature
2024-04-28 12:51:56,993:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmp_elni759\Feature Importance.png'
2024-04-28 12:51:57,119:INFO:Visual Rendered Successfully
2024-04-28 12:51:57,254:INFO:plot_model() successfully completed......................................
2024-04-28 12:51:57,259:INFO:SubProcess plot_model() end ==================================
2024-04-28 12:51:57,438:INFO:Creating Dashboard logs
2024-04-28 12:51:57,440:INFO:Model: Decision Tree Classifier
2024-04-28 12:51:57,453:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 4907, 'splitter': 'best'}
2024-04-28 12:51:57,686:INFO:_master_model_container: 2
2024-04-28 12:51:57,687:INFO:_display_container: 2
2024-04-28 12:51:57,687:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4907, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 12:51:57,687:INFO:compare_models() successfully completed......................................
2024-04-28 12:51:57,688:INFO:Initializing plot_model()
2024-04-28 12:51:57,688:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4907, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002628F7CA070>, system=True)
2024-04-28 12:51:57,688:INFO:Checking exceptions
2024-04-28 12:51:57,691:INFO:Preloading libraries
2024-04-28 12:51:57,691:INFO:Copying training dataset
2024-04-28 12:51:57,691:INFO:Plot type: auc
2024-04-28 12:51:57,729:INFO:Fitting Model
2024-04-28 12:51:57,730:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 12:51:57,730:INFO:Scoring test/hold-out set
2024-04-28 12:51:57,744:INFO:Saving 'AUC.png'
2024-04-28 12:51:57,922:INFO:Visual Rendered Successfully
2024-04-28 12:51:58,058:INFO:plot_model() successfully completed......................................
2024-04-28 12:51:58,064:INFO:Initializing plot_model()
2024-04-28 12:51:58,064:INFO:plot_model(plot=pr, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4907, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002628F7CA070>, system=True)
2024-04-28 12:51:58,064:INFO:Checking exceptions
2024-04-28 12:51:58,067:INFO:Preloading libraries
2024-04-28 12:51:58,067:INFO:Copying training dataset
2024-04-28 12:51:58,068:INFO:Plot type: pr
2024-04-28 12:51:58,106:INFO:Fitting Model
2024-04-28 12:51:58,106:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 12:51:58,107:INFO:Scoring test/hold-out set
2024-04-28 12:51:58,121:INFO:Saving 'Precision Recall.png'
2024-04-28 12:51:58,277:INFO:Visual Rendered Successfully
2024-04-28 12:51:58,411:INFO:plot_model() successfully completed......................................
2024-04-28 12:51:58,417:INFO:Initializing plot_model()
2024-04-28 12:51:58,417:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4907, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002628F7CA070>, system=True)
2024-04-28 12:51:58,417:INFO:Checking exceptions
2024-04-28 12:51:58,420:INFO:Preloading libraries
2024-04-28 12:51:58,421:INFO:Copying training dataset
2024-04-28 12:51:58,421:INFO:Plot type: confusion_matrix
2024-04-28 12:51:58,460:INFO:Fitting Model
2024-04-28 12:51:58,460:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 12:51:58,461:INFO:Scoring test/hold-out set
2024-04-28 12:51:58,475:INFO:Saving 'Confusion Matrix.png'
2024-04-28 12:51:58,561:INFO:Visual Rendered Successfully
2024-04-28 12:51:58,688:INFO:plot_model() successfully completed......................................
2024-04-28 12:51:58,690:INFO:Initializing plot_model()
2024-04-28 12:51:58,690:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4907, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002628F7CA070>, system=True)
2024-04-28 12:51:58,690:INFO:Checking exceptions
2024-04-28 12:51:58,693:INFO:Preloading libraries
2024-04-28 12:51:58,693:INFO:Copying training dataset
2024-04-28 12:51:58,694:INFO:Plot type: learning
2024-04-28 12:51:58,737:INFO:Fitting Model
2024-04-28 12:52:01,322:INFO:Saving 'Learning Curve.png'
2024-04-28 12:52:01,477:INFO:Visual Rendered Successfully
2024-04-28 12:52:01,605:INFO:plot_model() successfully completed......................................
2024-04-28 12:52:01,611:INFO:Initializing plot_model()
2024-04-28 12:52:01,611:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4907, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002628F7CA070>, system=True)
2024-04-28 12:52:01,611:INFO:Checking exceptions
2024-04-28 12:52:01,615:INFO:Preloading libraries
2024-04-28 12:52:01,615:INFO:Copying training dataset
2024-04-28 12:52:01,615:INFO:Plot type: feature
2024-04-28 12:52:01,648:INFO:Saving 'Feature Importance.png'
2024-04-28 12:52:01,763:INFO:Visual Rendered Successfully
2024-04-28 12:52:01,891:INFO:plot_model() successfully completed......................................
2024-04-28 12:52:01,916:INFO:Initializing predict_model()
2024-04-28 12:52:01,916:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002628F7CA070>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4907, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026295543280>)
2024-04-28 12:52:01,916:INFO:Checking exceptions
2024-04-28 12:52:01,916:INFO:Preloading libraries
2024-04-28 12:58:11,659:INFO:PyCaret ClassificationExperiment
2024-04-28 12:58:11,659:INFO:Logging name: clf-default-name
2024-04-28 12:58:11,659:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 12:58:11,659:INFO:version 3.2.0
2024-04-28 12:58:11,659:INFO:Initializing setup()
2024-04-28 12:58:11,659:INFO:self.USI: 2a70
2024-04-28 12:58:11,659:INFO:self._variable_keys: {'log_plots_param', 'fold_shuffle_param', 'X_test', 'target_param', 'fold_groups_param', 'y_test', 'logging_param', 'y', 'fold_generator', 'fix_imbalance', 'pipeline', 'gpu_param', 'memory', 'X', '_available_plots', 'is_multiclass', 'html_param', 'exp_name_log', 'idx', 'n_jobs_param', 'exp_id', 'y_train', 'X_train', 'gpu_n_jobs_param', 'USI', 'seed', '_ml_usecase', 'data'}
2024-04-28 12:58:11,659:INFO:Checking environment
2024-04-28 12:58:11,659:INFO:python_version: 3.8.0
2024-04-28 12:58:11,659:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 12:58:11,659:INFO:machine: AMD64
2024-04-28 12:58:11,659:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 12:58:11,663:INFO:Memory: svmem(total=34301427712, available=19784667136, percent=42.3, used=14516760576, free=19784667136)
2024-04-28 12:58:11,663:INFO:Physical Core: 6
2024-04-28 12:58:11,664:INFO:Logical Core: 12
2024-04-28 12:58:11,664:INFO:Checking libraries
2024-04-28 12:58:11,664:INFO:System:
2024-04-28 12:58:11,664:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 12:58:11,664:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 12:58:11,664:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 12:58:11,664:INFO:PyCaret required dependencies:
2024-04-28 12:58:11,664:INFO:                 pip: 24.0
2024-04-28 12:58:11,664:INFO:          setuptools: 69.5.1
2024-04-28 12:58:11,664:INFO:             pycaret: 3.2.0
2024-04-28 12:58:11,664:INFO:             IPython: 8.12.3
2024-04-28 12:58:11,664:INFO:          ipywidgets: 8.1.2
2024-04-28 12:58:11,664:INFO:                tqdm: 4.66.2
2024-04-28 12:58:11,664:INFO:               numpy: 1.24.4
2024-04-28 12:58:11,664:INFO:              pandas: 1.5.3
2024-04-28 12:58:11,664:INFO:              jinja2: 3.1.3
2024-04-28 12:58:11,664:INFO:               scipy: 1.10.1
2024-04-28 12:58:11,664:INFO:              joblib: 1.3.2
2024-04-28 12:58:11,664:INFO:             sklearn: 1.2.0
2024-04-28 12:58:11,664:INFO:                pyod: 1.1.3
2024-04-28 12:58:11,664:INFO:            imblearn: 0.12.2
2024-04-28 12:58:11,664:INFO:   category_encoders: 2.6.3
2024-04-28 12:58:11,664:INFO:            lightgbm: 4.3.0
2024-04-28 12:58:11,664:INFO:               numba: 0.58.1
2024-04-28 12:58:11,664:INFO:            requests: 2.31.0
2024-04-28 12:58:11,664:INFO:          matplotlib: 3.6.0
2024-04-28 12:58:11,664:INFO:          scikitplot: 0.3.7
2024-04-28 12:58:11,664:INFO:         yellowbrick: 1.5
2024-04-28 12:58:11,664:INFO:              plotly: 5.20.0
2024-04-28 12:58:11,664:INFO:    plotly-resampler: Not installed
2024-04-28 12:58:11,664:INFO:             kaleido: 0.2.1
2024-04-28 12:58:11,664:INFO:           schemdraw: 0.15
2024-04-28 12:58:11,664:INFO:         statsmodels: 0.14.1
2024-04-28 12:58:11,664:INFO:              sktime: 0.21.1
2024-04-28 12:58:11,664:INFO:               tbats: 1.1.3
2024-04-28 12:58:11,664:INFO:            pmdarima: 2.0.4
2024-04-28 12:58:11,665:INFO:              psutil: 5.9.8
2024-04-28 12:58:11,665:INFO:          markupsafe: 2.1.5
2024-04-28 12:58:11,665:INFO:             pickle5: Not installed
2024-04-28 12:58:11,665:INFO:         cloudpickle: 3.0.0
2024-04-28 12:58:11,665:INFO:         deprecation: 2.1.0
2024-04-28 12:58:11,665:INFO:              xxhash: 3.4.1
2024-04-28 12:58:11,665:INFO:           wurlitzer: Not installed
2024-04-28 12:58:11,665:INFO:PyCaret optional dependencies:
2024-04-28 12:58:11,665:INFO:                shap: Not installed
2024-04-28 12:58:11,665:INFO:           interpret: Not installed
2024-04-28 12:58:11,665:INFO:                umap: Not installed
2024-04-28 12:58:11,665:INFO:     ydata_profiling: Not installed
2024-04-28 12:58:11,665:INFO:  explainerdashboard: Not installed
2024-04-28 12:58:11,665:INFO:             autoviz: Not installed
2024-04-28 12:58:11,665:INFO:           fairlearn: Not installed
2024-04-28 12:58:11,665:INFO:          deepchecks: Not installed
2024-04-28 12:58:11,665:INFO:             xgboost: Not installed
2024-04-28 12:58:11,665:INFO:            catboost: Not installed
2024-04-28 12:58:11,665:INFO:              kmodes: Not installed
2024-04-28 12:58:11,665:INFO:             mlxtend: Not installed
2024-04-28 12:58:11,665:INFO:       statsforecast: Not installed
2024-04-28 12:58:11,665:INFO:        tune_sklearn: Not installed
2024-04-28 12:58:11,665:INFO:                 ray: Not installed
2024-04-28 12:58:11,665:INFO:            hyperopt: Not installed
2024-04-28 12:58:11,665:INFO:              optuna: Not installed
2024-04-28 12:58:11,665:INFO:               skopt: Not installed
2024-04-28 12:58:11,665:INFO:              mlflow: 2.11.3
2024-04-28 12:58:11,665:INFO:              gradio: Not installed
2024-04-28 12:58:11,665:INFO:             fastapi: Not installed
2024-04-28 12:58:11,665:INFO:             uvicorn: Not installed
2024-04-28 12:58:11,665:INFO:              m2cgen: Not installed
2024-04-28 12:58:11,665:INFO:           evidently: Not installed
2024-04-28 12:58:11,665:INFO:               fugue: Not installed
2024-04-28 12:58:11,665:INFO:           streamlit: 1.33.0
2024-04-28 12:58:11,665:INFO:             prophet: Not installed
2024-04-28 12:58:11,665:INFO:None
2024-04-28 12:58:11,665:INFO:Set up data.
2024-04-28 12:58:11,669:INFO:Set up folding strategy.
2024-04-28 12:58:11,669:INFO:Set up train/test split.
2024-04-28 12:58:11,669:INFO:Set up data.
2024-04-28 12:58:11,672:INFO:Set up index.
2024-04-28 12:58:11,672:INFO:Assigning column types.
2024-04-28 12:58:11,674:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 12:58:11,707:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 12:58:11,707:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:58:11,728:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:11,728:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:11,761:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 12:58:11,762:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:58:11,782:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:11,782:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:11,783:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 12:58:11,817:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:58:11,839:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:11,840:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:11,874:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:58:11,895:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:11,895:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:11,896:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 12:58:11,951:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:11,951:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:12,007:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:12,007:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:12,008:INFO:Preparing preprocessing pipeline...
2024-04-28 12:58:12,009:INFO:Set up simple imputation.
2024-04-28 12:58:12,009:INFO:Set up feature normalization.
2024-04-28 12:58:12,024:INFO:Finished creating preprocessing pipeline.
2024-04-28 12:58:12,027:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-28 12:58:12,027:INFO:Creating final display dataframe.
2024-04-28 12:58:12,077:INFO:Setup _display_container:                     Description             Value
0                    Session id              5613
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              2a70
2024-04-28 12:58:12,136:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:12,136:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:12,193:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:12,193:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:12,194:INFO:setup() successfully completed in 0.54s...............
2024-04-28 12:58:12,194:INFO:Initializing compare_models()
2024-04-28 12:58:12,194:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026299380310>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000026299380310>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 12:58:12,194:INFO:Checking exceptions
2024-04-28 12:58:12,196:INFO:Preparing display monitor
2024-04-28 12:58:12,210:INFO:Initializing Logistic Regression
2024-04-28 12:58:12,210:INFO:Total runtime is 0.0 minutes
2024-04-28 12:58:12,212:INFO:SubProcess create_model() called ==================================
2024-04-28 12:58:12,212:INFO:Initializing create_model()
2024-04-28 12:58:12,212:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026299380310>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002629225AE80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:58:12,212:INFO:Checking exceptions
2024-04-28 12:58:12,212:INFO:Importing libraries
2024-04-28 12:58:12,213:INFO:Copying training dataset
2024-04-28 12:58:12,217:INFO:Defining folds
2024-04-28 12:58:12,217:INFO:Declaring metric variables
2024-04-28 12:58:12,220:INFO:Importing untrained model
2024-04-28 12:58:12,223:INFO:Logistic Regression Imported successfully
2024-04-28 12:58:12,226:INFO:Starting cross validation
2024-04-28 12:58:12,227:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:58:14,628:INFO:Calculating mean and std
2024-04-28 12:58:14,632:INFO:Creating metrics dataframe
2024-04-28 12:58:14,637:INFO:Uploading results into container
2024-04-28 12:58:14,638:INFO:Uploading model into container now
2024-04-28 12:58:14,639:INFO:_master_model_container: 1
2024-04-28 12:58:14,639:INFO:_display_container: 2
2024-04-28 12:58:14,640:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5613, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 12:58:14,640:INFO:create_model() successfully completed......................................
2024-04-28 12:58:14,870:INFO:SubProcess create_model() end ==================================
2024-04-28 12:58:14,870:INFO:Creating metrics dataframe
2024-04-28 12:58:14,876:INFO:Initializing Decision Tree Classifier
2024-04-28 12:58:14,876:INFO:Total runtime is 0.04443448781967163 minutes
2024-04-28 12:58:14,879:INFO:SubProcess create_model() called ==================================
2024-04-28 12:58:14,879:INFO:Initializing create_model()
2024-04-28 12:58:14,879:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026299380310>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002629225AE80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:58:14,879:INFO:Checking exceptions
2024-04-28 12:58:14,879:INFO:Importing libraries
2024-04-28 12:58:14,879:INFO:Copying training dataset
2024-04-28 12:58:14,883:INFO:Defining folds
2024-04-28 12:58:14,883:INFO:Declaring metric variables
2024-04-28 12:58:14,886:INFO:Importing untrained model
2024-04-28 12:58:14,888:INFO:Decision Tree Classifier Imported successfully
2024-04-28 12:58:14,892:INFO:Starting cross validation
2024-04-28 12:58:14,893:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:58:16,203:INFO:Calculating mean and std
2024-04-28 12:58:16,205:INFO:Creating metrics dataframe
2024-04-28 12:58:16,208:INFO:Uploading results into container
2024-04-28 12:58:16,208:INFO:Uploading model into container now
2024-04-28 12:58:16,209:INFO:_master_model_container: 2
2024-04-28 12:58:16,209:INFO:_display_container: 2
2024-04-28 12:58:16,209:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5613, splitter='best')
2024-04-28 12:58:16,209:INFO:create_model() successfully completed......................................
2024-04-28 12:58:16,352:INFO:SubProcess create_model() end ==================================
2024-04-28 12:58:16,352:INFO:Creating metrics dataframe
2024-04-28 12:58:16,364:INFO:Initializing create_model()
2024-04-28 12:58:16,364:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026299380310>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5613, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:58:16,364:INFO:Checking exceptions
2024-04-28 12:58:16,365:INFO:Importing libraries
2024-04-28 12:58:16,365:INFO:Copying training dataset
2024-04-28 12:58:16,369:INFO:Defining folds
2024-04-28 12:58:16,369:INFO:Declaring metric variables
2024-04-28 12:58:16,369:INFO:Importing untrained model
2024-04-28 12:58:16,369:INFO:Declaring custom model
2024-04-28 12:58:16,369:INFO:Decision Tree Classifier Imported successfully
2024-04-28 12:58:16,370:INFO:Cross validation set to False
2024-04-28 12:58:16,370:INFO:Fitting Model
2024-04-28 12:58:16,418:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5613, splitter='best')
2024-04-28 12:58:16,418:INFO:create_model() successfully completed......................................
2024-04-28 12:58:16,560:INFO:Initializing create_model()
2024-04-28 12:58:16,560:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026299380310>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5613, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:58:16,560:INFO:Checking exceptions
2024-04-28 12:58:16,561:INFO:Importing libraries
2024-04-28 12:58:16,561:INFO:Copying training dataset
2024-04-28 12:58:16,565:INFO:Defining folds
2024-04-28 12:58:16,565:INFO:Declaring metric variables
2024-04-28 12:58:16,565:INFO:Importing untrained model
2024-04-28 12:58:16,565:INFO:Declaring custom model
2024-04-28 12:58:16,565:INFO:Logistic Regression Imported successfully
2024-04-28 12:58:16,566:INFO:Cross validation set to False
2024-04-28 12:58:16,566:INFO:Fitting Model
2024-04-28 12:58:16,581:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5613, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 12:58:16,581:INFO:create_model() successfully completed......................................
2024-04-28 12:58:16,729:INFO:_master_model_container: 2
2024-04-28 12:58:16,729:INFO:_display_container: 2
2024-04-28 12:58:16,729:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5613, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5613, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-28 12:58:16,729:INFO:compare_models() successfully completed......................................
2024-04-28 12:58:16,730:INFO:Initializing plot_model()
2024-04-28 12:58:16,730:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5613, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026299380310>, system=True)
2024-04-28 12:58:16,730:INFO:Checking exceptions
2024-04-28 12:58:16,733:INFO:Preloading libraries
2024-04-28 12:58:16,734:INFO:Copying training dataset
2024-04-28 12:58:16,734:INFO:Plot type: parameter
2024-04-28 12:58:16,736:INFO:Visual Rendered Successfully
2024-04-28 12:58:16,870:INFO:plot_model() successfully completed......................................
2024-04-28 12:58:16,889:INFO:Initializing predict_model()
2024-04-28 12:58:16,890:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026299380310>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5613, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026298C2B430>)
2024-04-28 12:58:16,890:INFO:Checking exceptions
2024-04-28 12:58:16,890:INFO:Preloading libraries
2024-04-28 12:58:17,170:INFO:Initializing plot_model()
2024-04-28 12:58:17,170:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5613, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026299380310>, system=True)
2024-04-28 12:58:17,170:INFO:Checking exceptions
2024-04-28 12:58:17,172:INFO:Preloading libraries
2024-04-28 12:58:17,173:INFO:Copying training dataset
2024-04-28 12:58:17,173:INFO:Plot type: parameter
2024-04-28 12:58:17,175:INFO:Visual Rendered Successfully
2024-04-28 12:58:17,312:INFO:plot_model() successfully completed......................................
2024-04-28 12:58:17,328:INFO:Initializing predict_model()
2024-04-28 12:58:17,328:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026299380310>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5613, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002628F966AF0>)
2024-04-28 12:58:17,328:INFO:Checking exceptions
2024-04-28 12:58:17,329:INFO:Preloading libraries
2024-04-28 12:58:17,609:INFO:Initializing load_model()
2024-04-28 12:58:17,609:INFO:load_model(model_name=./model_kobe, platform=None, authentication=None, verbose=True)
2024-04-28 12:58:17,611:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.0', 'setuptools': '69.5.1', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.0', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.20.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.0', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.0', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.20.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.0', 'machine': 'AMD64'}}
  warnings.warn(

2024-04-28 12:58:17,661:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\mlflow\types\utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-28 12:58:19,785:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_13812\1973998042.py:83: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-28 12:58:19,822:INFO:PyCaret ClassificationExperiment
2024-04-28 12:58:19,822:INFO:Logging name: Projeto Kobe
2024-04-28 12:58:19,822:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 12:58:19,822:INFO:version 3.2.0
2024-04-28 12:58:19,822:INFO:Initializing setup()
2024-04-28 12:58:19,822:INFO:self.USI: 95e5
2024-04-28 12:58:19,822:INFO:self._variable_keys: {'log_plots_param', 'fold_shuffle_param', 'X_test', 'target_param', 'fold_groups_param', 'y_test', 'logging_param', 'y', 'fold_generator', 'fix_imbalance', 'pipeline', 'gpu_param', 'memory', 'X', '_available_plots', 'is_multiclass', 'html_param', 'exp_name_log', 'idx', 'n_jobs_param', 'exp_id', 'y_train', 'X_train', 'gpu_n_jobs_param', 'USI', 'seed', '_ml_usecase', 'data'}
2024-04-28 12:58:19,822:INFO:Checking environment
2024-04-28 12:58:19,822:INFO:python_version: 3.8.0
2024-04-28 12:58:19,822:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 12:58:19,822:INFO:machine: AMD64
2024-04-28 12:58:19,822:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 12:58:19,828:INFO:Memory: svmem(total=34301427712, available=18322219008, percent=46.6, used=15979208704, free=18322219008)
2024-04-28 12:58:19,828:INFO:Physical Core: 6
2024-04-28 12:58:19,828:INFO:Logical Core: 12
2024-04-28 12:58:19,828:INFO:Checking libraries
2024-04-28 12:58:19,828:INFO:System:
2024-04-28 12:58:19,828:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 12:58:19,828:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 12:58:19,828:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 12:58:19,828:INFO:PyCaret required dependencies:
2024-04-28 12:58:19,828:INFO:                 pip: 24.0
2024-04-28 12:58:19,828:INFO:          setuptools: 69.5.1
2024-04-28 12:58:19,828:INFO:             pycaret: 3.2.0
2024-04-28 12:58:19,828:INFO:             IPython: 8.12.3
2024-04-28 12:58:19,828:INFO:          ipywidgets: 8.1.2
2024-04-28 12:58:19,828:INFO:                tqdm: 4.66.2
2024-04-28 12:58:19,828:INFO:               numpy: 1.24.4
2024-04-28 12:58:19,828:INFO:              pandas: 1.5.3
2024-04-28 12:58:19,828:INFO:              jinja2: 3.1.3
2024-04-28 12:58:19,828:INFO:               scipy: 1.10.1
2024-04-28 12:58:19,828:INFO:              joblib: 1.3.2
2024-04-28 12:58:19,828:INFO:             sklearn: 1.2.0
2024-04-28 12:58:19,828:INFO:                pyod: 1.1.3
2024-04-28 12:58:19,828:INFO:            imblearn: 0.12.2
2024-04-28 12:58:19,828:INFO:   category_encoders: 2.6.3
2024-04-28 12:58:19,828:INFO:            lightgbm: 4.3.0
2024-04-28 12:58:19,829:INFO:               numba: 0.58.1
2024-04-28 12:58:19,829:INFO:            requests: 2.31.0
2024-04-28 12:58:19,829:INFO:          matplotlib: 3.6.0
2024-04-28 12:58:19,829:INFO:          scikitplot: 0.3.7
2024-04-28 12:58:19,829:INFO:         yellowbrick: 1.5
2024-04-28 12:58:19,829:INFO:              plotly: 5.20.0
2024-04-28 12:58:19,829:INFO:    plotly-resampler: Not installed
2024-04-28 12:58:19,829:INFO:             kaleido: 0.2.1
2024-04-28 12:58:19,829:INFO:           schemdraw: 0.15
2024-04-28 12:58:19,829:INFO:         statsmodels: 0.14.1
2024-04-28 12:58:19,829:INFO:              sktime: 0.21.1
2024-04-28 12:58:19,829:INFO:               tbats: 1.1.3
2024-04-28 12:58:19,829:INFO:            pmdarima: 2.0.4
2024-04-28 12:58:19,829:INFO:              psutil: 5.9.8
2024-04-28 12:58:19,829:INFO:          markupsafe: 2.1.5
2024-04-28 12:58:19,829:INFO:             pickle5: Not installed
2024-04-28 12:58:19,829:INFO:         cloudpickle: 3.0.0
2024-04-28 12:58:19,829:INFO:         deprecation: 2.1.0
2024-04-28 12:58:19,829:INFO:              xxhash: 3.4.1
2024-04-28 12:58:19,829:INFO:           wurlitzer: Not installed
2024-04-28 12:58:19,829:INFO:PyCaret optional dependencies:
2024-04-28 12:58:19,829:INFO:                shap: Not installed
2024-04-28 12:58:19,829:INFO:           interpret: Not installed
2024-04-28 12:58:19,829:INFO:                umap: Not installed
2024-04-28 12:58:19,829:INFO:     ydata_profiling: Not installed
2024-04-28 12:58:19,829:INFO:  explainerdashboard: Not installed
2024-04-28 12:58:19,829:INFO:             autoviz: Not installed
2024-04-28 12:58:19,829:INFO:           fairlearn: Not installed
2024-04-28 12:58:19,829:INFO:          deepchecks: Not installed
2024-04-28 12:58:19,829:INFO:             xgboost: Not installed
2024-04-28 12:58:19,829:INFO:            catboost: Not installed
2024-04-28 12:58:19,829:INFO:              kmodes: Not installed
2024-04-28 12:58:19,829:INFO:             mlxtend: Not installed
2024-04-28 12:58:19,829:INFO:       statsforecast: Not installed
2024-04-28 12:58:19,830:INFO:        tune_sklearn: Not installed
2024-04-28 12:58:19,830:INFO:                 ray: Not installed
2024-04-28 12:58:19,830:INFO:            hyperopt: Not installed
2024-04-28 12:58:19,830:INFO:              optuna: Not installed
2024-04-28 12:58:19,830:INFO:               skopt: Not installed
2024-04-28 12:58:19,830:INFO:              mlflow: 2.11.3
2024-04-28 12:58:19,830:INFO:              gradio: Not installed
2024-04-28 12:58:19,830:INFO:             fastapi: Not installed
2024-04-28 12:58:19,830:INFO:             uvicorn: Not installed
2024-04-28 12:58:19,830:INFO:              m2cgen: Not installed
2024-04-28 12:58:19,830:INFO:           evidently: Not installed
2024-04-28 12:58:19,830:INFO:               fugue: Not installed
2024-04-28 12:58:19,830:INFO:           streamlit: 1.33.0
2024-04-28 12:58:19,830:INFO:             prophet: Not installed
2024-04-28 12:58:19,830:INFO:None
2024-04-28 12:58:19,830:INFO:Set up data.
2024-04-28 12:58:19,836:INFO:Set up folding strategy.
2024-04-28 12:58:19,836:INFO:Set up train/test split.
2024-04-28 12:58:19,844:INFO:Set up index.
2024-04-28 12:58:19,844:INFO:Assigning column types.
2024-04-28 12:58:19,847:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 12:58:19,881:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 12:58:19,882:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:58:19,903:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:19,903:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:19,938:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 12:58:19,939:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:58:19,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:19,961:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:19,961:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 12:58:19,995:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:58:20,015:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:20,015:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:20,048:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:58:20,069:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:20,069:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:20,069:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 12:58:20,124:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:20,125:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:20,181:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:20,181:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:20,182:INFO:Preparing preprocessing pipeline...
2024-04-28 12:58:20,184:INFO:Set up simple imputation.
2024-04-28 12:58:20,195:INFO:Finished creating preprocessing pipeline.
2024-04-28 12:58:20,197:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-04-28 12:58:20,197:INFO:Creating final display dataframe.
2024-04-28 12:58:20,236:INFO:Setup _display_container:                     Description            Value
0                    Session id             6930
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (20285, 7)
4        Transformed data shape       (20285, 7)
5   Transformed train set shape       (14199, 7)
6    Transformed test set shape        (6086, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name     Projeto Kobe
18                          USI             95e5
2024-04-28 12:58:20,293:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:20,294:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:20,351:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:20,351:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:20,352:INFO:Logging experiment in loggers
2024-04-28 12:58:20,388:INFO:SubProcess save_model() called ==================================
2024-04-28 12:58:20,393:INFO:Initializing save_model()
2024-04-28 12:58:20,393:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), model_name=C:\Users\jpsar\AppData\Local\Temp\tmpbfpizzd_\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-28 12:58:20,393:INFO:Adding model into prep_pipe
2024-04-28 12:58:20,393:WARNING:Only Model saved as it was a pipeline.
2024-04-28 12:58:20,395:INFO:C:\Users\jpsar\AppData\Local\Temp\tmpbfpizzd_\Transformation Pipeline.pkl saved in current working directory
2024-04-28 12:58:20,397:INFO:Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-04-28 12:58:20,397:INFO:save_model() successfully completed......................................
2024-04-28 12:58:20,560:INFO:SubProcess save_model() end ==================================
2024-04-28 12:58:20,574:INFO:setup() successfully completed in 0.53s...............
2024-04-28 12:58:20,581:INFO:Initializing compare_models()
2024-04-28 12:58:20,582:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026298DD5A00>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=precision, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000026298DD5A00>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'precision', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 12:58:20,582:INFO:Checking exceptions
2024-04-28 12:58:20,585:INFO:Preparing display monitor
2024-04-28 12:58:20,601:INFO:Initializing Logistic Regression
2024-04-28 12:58:20,601:INFO:Total runtime is 0.0 minutes
2024-04-28 12:58:20,603:INFO:SubProcess create_model() called ==================================
2024-04-28 12:58:20,603:INFO:Initializing create_model()
2024-04-28 12:58:20,603:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026298DD5A00>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000262D6114D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:58:20,603:INFO:Checking exceptions
2024-04-28 12:58:20,604:INFO:Importing libraries
2024-04-28 12:58:20,604:INFO:Copying training dataset
2024-04-28 12:58:20,608:INFO:Defining folds
2024-04-28 12:58:20,608:INFO:Declaring metric variables
2024-04-28 12:58:20,611:INFO:Importing untrained model
2024-04-28 12:58:20,613:INFO:Logistic Regression Imported successfully
2024-04-28 12:58:20,617:INFO:Starting cross validation
2024-04-28 12:58:20,618:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:58:20,748:INFO:Calculating mean and std
2024-04-28 12:58:20,748:INFO:Creating metrics dataframe
2024-04-28 12:58:20,752:INFO:Uploading results into container
2024-04-28 12:58:20,752:INFO:Uploading model into container now
2024-04-28 12:58:20,752:INFO:_master_model_container: 1
2024-04-28 12:58:20,753:INFO:_display_container: 2
2024-04-28 12:58:20,753:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6930, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 12:58:20,753:INFO:create_model() successfully completed......................................
2024-04-28 12:58:20,896:INFO:SubProcess create_model() end ==================================
2024-04-28 12:58:20,896:INFO:Creating metrics dataframe
2024-04-28 12:58:20,902:INFO:Initializing Decision Tree Classifier
2024-04-28 12:58:20,902:INFO:Total runtime is 0.005028585592905681 minutes
2024-04-28 12:58:20,904:INFO:SubProcess create_model() called ==================================
2024-04-28 12:58:20,904:INFO:Initializing create_model()
2024-04-28 12:58:20,904:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026298DD5A00>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000262D6114D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:58:20,905:INFO:Checking exceptions
2024-04-28 12:58:20,905:INFO:Importing libraries
2024-04-28 12:58:20,905:INFO:Copying training dataset
2024-04-28 12:58:20,909:INFO:Defining folds
2024-04-28 12:58:20,909:INFO:Declaring metric variables
2024-04-28 12:58:20,912:INFO:Importing untrained model
2024-04-28 12:58:20,914:INFO:Decision Tree Classifier Imported successfully
2024-04-28 12:58:20,918:INFO:Starting cross validation
2024-04-28 12:58:20,919:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:58:21,016:INFO:Calculating mean and std
2024-04-28 12:58:21,017:INFO:Creating metrics dataframe
2024-04-28 12:58:21,020:INFO:Uploading results into container
2024-04-28 12:58:21,020:INFO:Uploading model into container now
2024-04-28 12:58:21,020:INFO:_master_model_container: 2
2024-04-28 12:58:21,021:INFO:_display_container: 2
2024-04-28 12:58:21,021:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6930, splitter='best')
2024-04-28 12:58:21,021:INFO:create_model() successfully completed......................................
2024-04-28 12:58:21,218:INFO:SubProcess create_model() end ==================================
2024-04-28 12:58:21,219:INFO:Creating metrics dataframe
2024-04-28 12:58:21,231:INFO:Initializing create_model()
2024-04-28 12:58:21,231:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026298DD5A00>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6930, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:58:21,232:INFO:Checking exceptions
2024-04-28 12:58:21,233:INFO:Importing libraries
2024-04-28 12:58:21,233:INFO:Copying training dataset
2024-04-28 12:58:21,236:INFO:Defining folds
2024-04-28 12:58:21,236:INFO:Declaring metric variables
2024-04-28 12:58:21,236:INFO:Importing untrained model
2024-04-28 12:58:21,236:INFO:Declaring custom model
2024-04-28 12:58:21,237:INFO:Logistic Regression Imported successfully
2024-04-28 12:58:21,237:INFO:Cross validation set to False
2024-04-28 12:58:21,237:INFO:Fitting Model
2024-04-28 12:58:21,268:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6930, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 12:58:21,268:INFO:create_model() successfully completed......................................
2024-04-28 12:58:21,412:INFO:Creating Dashboard logs
2024-04-28 12:58:21,415:INFO:Model: Logistic Regression
2024-04-28 12:58:21,428:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 6930, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-04-28 12:58:21,484:INFO:Initializing predict_model()
2024-04-28 12:58:21,484:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026298DD5A00>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6930, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026295AFD8B0>)
2024-04-28 12:58:21,484:INFO:Checking exceptions
2024-04-28 12:58:21,484:INFO:Preloading libraries
2024-04-28 12:58:21,680:INFO:SubProcess plot_model() called ==================================
2024-04-28 12:58:21,680:INFO:Initializing plot_model()
2024-04-28 12:58:21,680:INFO:plot_model(plot=auc, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6930, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmpwqg3ga8s, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026298DD5A00>, system=False)
2024-04-28 12:58:21,680:INFO:Checking exceptions
2024-04-28 12:58:21,682:INFO:Preloading libraries
2024-04-28 12:58:21,682:INFO:Copying training dataset
2024-04-28 12:58:21,682:INFO:Plot type: auc
2024-04-28 12:58:21,720:INFO:Fitting Model
2024-04-28 12:58:21,720:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 12:58:21,720:INFO:Scoring test/hold-out set
2024-04-28 12:58:21,735:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmpwqg3ga8s\AUC.png'
2024-04-28 12:58:21,913:INFO:Visual Rendered Successfully
2024-04-28 12:58:22,053:INFO:plot_model() successfully completed......................................
2024-04-28 12:58:22,058:INFO:Initializing plot_model()
2024-04-28 12:58:22,058:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6930, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmpwqg3ga8s, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026298DD5A00>, system=False)
2024-04-28 12:58:22,058:INFO:Checking exceptions
2024-04-28 12:58:22,060:INFO:Preloading libraries
2024-04-28 12:58:22,060:INFO:Copying training dataset
2024-04-28 12:58:22,060:INFO:Plot type: confusion_matrix
2024-04-28 12:58:22,097:INFO:Fitting Model
2024-04-28 12:58:22,097:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 12:58:22,098:INFO:Scoring test/hold-out set
2024-04-28 12:58:22,112:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmpwqg3ga8s\Confusion Matrix.png'
2024-04-28 12:58:22,197:INFO:Visual Rendered Successfully
2024-04-28 12:58:22,343:INFO:plot_model() successfully completed......................................
2024-04-28 12:58:22,349:INFO:Initializing plot_model()
2024-04-28 12:58:22,349:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6930, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmpwqg3ga8s, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026298DD5A00>, system=False)
2024-04-28 12:58:22,349:INFO:Checking exceptions
2024-04-28 12:58:22,351:INFO:Preloading libraries
2024-04-28 12:58:22,351:INFO:Copying training dataset
2024-04-28 12:58:22,351:INFO:Plot type: feature
2024-04-28 12:58:22,384:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmpwqg3ga8s\Feature Importance.png'
2024-04-28 12:58:22,514:INFO:Visual Rendered Successfully
2024-04-28 12:58:22,667:INFO:plot_model() successfully completed......................................
2024-04-28 12:58:22,672:INFO:SubProcess plot_model() end ==================================
2024-04-28 12:58:22,855:INFO:Creating Dashboard logs
2024-04-28 12:58:22,858:INFO:Model: Decision Tree Classifier
2024-04-28 12:58:22,870:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 6930, 'splitter': 'best'}
2024-04-28 12:58:23,105:INFO:_master_model_container: 2
2024-04-28 12:58:23,105:INFO:_display_container: 2
2024-04-28 12:58:23,106:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6930, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 12:58:23,106:INFO:compare_models() successfully completed......................................
2024-04-28 12:58:23,107:INFO:Initializing plot_model()
2024-04-28 12:58:23,107:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6930, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026298DD5A00>, system=True)
2024-04-28 12:58:23,107:INFO:Checking exceptions
2024-04-28 12:58:23,109:INFO:Preloading libraries
2024-04-28 12:58:23,110:INFO:Copying training dataset
2024-04-28 12:58:23,110:INFO:Plot type: auc
2024-04-28 12:58:23,148:INFO:Fitting Model
2024-04-28 12:58:23,148:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 12:58:23,149:INFO:Scoring test/hold-out set
2024-04-28 12:58:23,164:INFO:Saving 'AUC.png'
2024-04-28 12:58:23,338:INFO:Visual Rendered Successfully
2024-04-28 12:58:23,484:INFO:plot_model() successfully completed......................................
2024-04-28 12:58:23,486:INFO:Initializing plot_model()
2024-04-28 12:58:23,486:INFO:plot_model(plot=pr, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6930, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026298DD5A00>, system=True)
2024-04-28 12:58:23,486:INFO:Checking exceptions
2024-04-28 12:58:23,489:INFO:Preloading libraries
2024-04-28 12:58:23,489:INFO:Copying training dataset
2024-04-28 12:58:23,489:INFO:Plot type: pr
2024-04-28 12:58:23,531:INFO:Fitting Model
2024-04-28 12:58:23,531:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 12:58:23,532:INFO:Scoring test/hold-out set
2024-04-28 12:58:23,545:INFO:Saving 'Precision Recall.png'
2024-04-28 12:58:23,699:INFO:Visual Rendered Successfully
2024-04-28 12:58:23,833:INFO:plot_model() successfully completed......................................
2024-04-28 12:58:23,839:INFO:Initializing plot_model()
2024-04-28 12:58:23,839:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6930, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026298DD5A00>, system=True)
2024-04-28 12:58:23,839:INFO:Checking exceptions
2024-04-28 12:58:23,843:INFO:Preloading libraries
2024-04-28 12:58:23,843:INFO:Copying training dataset
2024-04-28 12:58:23,843:INFO:Plot type: confusion_matrix
2024-04-28 12:58:23,884:INFO:Fitting Model
2024-04-28 12:58:23,884:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 12:58:23,885:INFO:Scoring test/hold-out set
2024-04-28 12:58:23,898:INFO:Saving 'Confusion Matrix.png'
2024-04-28 12:58:23,986:INFO:Visual Rendered Successfully
2024-04-28 12:58:24,157:INFO:plot_model() successfully completed......................................
2024-04-28 12:58:24,162:INFO:Initializing plot_model()
2024-04-28 12:58:24,162:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6930, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026298DD5A00>, system=True)
2024-04-28 12:58:24,162:INFO:Checking exceptions
2024-04-28 12:58:24,166:INFO:Preloading libraries
2024-04-28 12:58:24,166:INFO:Copying training dataset
2024-04-28 12:58:24,166:INFO:Plot type: learning
2024-04-28 12:58:24,209:INFO:Fitting Model
2024-04-28 12:58:26,900:INFO:Saving 'Learning Curve.png'
2024-04-28 12:58:27,057:INFO:Visual Rendered Successfully
2024-04-28 12:58:27,198:INFO:plot_model() successfully completed......................................
2024-04-28 12:58:27,204:INFO:Initializing plot_model()
2024-04-28 12:58:27,204:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6930, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026298DD5A00>, system=True)
2024-04-28 12:58:27,204:INFO:Checking exceptions
2024-04-28 12:58:27,207:INFO:Preloading libraries
2024-04-28 12:58:27,207:INFO:Copying training dataset
2024-04-28 12:58:27,207:INFO:Plot type: feature
2024-04-28 12:58:27,239:INFO:Saving 'Feature Importance.png'
2024-04-28 12:58:27,367:INFO:Visual Rendered Successfully
2024-04-28 12:58:27,507:INFO:plot_model() successfully completed......................................
2024-04-28 12:58:27,537:INFO:Initializing predict_model()
2024-04-28 12:58:27,537:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026298DD5A00>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6930, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026295551430>)
2024-04-28 12:58:27,537:INFO:Checking exceptions
2024-04-28 12:58:27,538:INFO:Preloading libraries
2024-04-28 12:58:55,100:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-28 12:58:55,100:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-28 12:58:55,100:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-28 12:58:55,100:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-28 12:58:57,756:INFO:PyCaret ClassificationExperiment
2024-04-28 12:58:57,757:INFO:Logging name: clf-default-name
2024-04-28 12:58:57,757:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 12:58:57,757:INFO:version 3.2.0
2024-04-28 12:58:57,757:INFO:Initializing setup()
2024-04-28 12:58:57,757:INFO:self.USI: a7af
2024-04-28 12:58:57,757:INFO:self._variable_keys: {'exp_name_log', 'exp_id', 'target_param', 'seed', 'idx', 'X', 'X_test', 'y_test', 'html_param', 'fold_groups_param', 'X_train', 'y_train', 'gpu_param', '_available_plots', 'log_plots_param', 'USI', 'n_jobs_param', 'data', 'fold_generator', 'fix_imbalance', 'memory', 'y', '_ml_usecase', 'pipeline', 'fold_shuffle_param', 'is_multiclass', 'logging_param', 'gpu_n_jobs_param'}
2024-04-28 12:58:57,757:INFO:Checking environment
2024-04-28 12:58:57,757:INFO:python_version: 3.8.0
2024-04-28 12:58:57,757:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 12:58:57,757:INFO:machine: AMD64
2024-04-28 12:58:57,757:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 12:58:57,761:INFO:Memory: svmem(total=34301427712, available=19952807936, percent=41.8, used=14348619776, free=19952807936)
2024-04-28 12:58:57,761:INFO:Physical Core: 6
2024-04-28 12:58:57,761:INFO:Logical Core: 12
2024-04-28 12:58:57,761:INFO:Checking libraries
2024-04-28 12:58:57,761:INFO:System:
2024-04-28 12:58:57,761:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 12:58:57,761:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 12:58:57,761:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 12:58:57,762:INFO:PyCaret required dependencies:
2024-04-28 12:58:57,775:INFO:                 pip: 24.0
2024-04-28 12:58:57,775:INFO:          setuptools: 69.5.1
2024-04-28 12:58:57,775:INFO:             pycaret: 3.2.0
2024-04-28 12:58:57,775:INFO:             IPython: 8.12.3
2024-04-28 12:58:57,775:INFO:          ipywidgets: 8.1.2
2024-04-28 12:58:57,775:INFO:                tqdm: 4.66.2
2024-04-28 12:58:57,775:INFO:               numpy: 1.24.4
2024-04-28 12:58:57,775:INFO:              pandas: 1.5.3
2024-04-28 12:58:57,775:INFO:              jinja2: 3.1.3
2024-04-28 12:58:57,775:INFO:               scipy: 1.10.1
2024-04-28 12:58:57,775:INFO:              joblib: 1.3.2
2024-04-28 12:58:57,775:INFO:             sklearn: 1.2.0
2024-04-28 12:58:57,775:INFO:                pyod: 1.1.3
2024-04-28 12:58:57,775:INFO:            imblearn: 0.12.2
2024-04-28 12:58:57,775:INFO:   category_encoders: 2.6.3
2024-04-28 12:58:57,775:INFO:            lightgbm: 4.3.0
2024-04-28 12:58:57,775:INFO:               numba: 0.58.1
2024-04-28 12:58:57,775:INFO:            requests: 2.31.0
2024-04-28 12:58:57,775:INFO:          matplotlib: 3.6.0
2024-04-28 12:58:57,775:INFO:          scikitplot: 0.3.7
2024-04-28 12:58:57,775:INFO:         yellowbrick: 1.5
2024-04-28 12:58:57,775:INFO:              plotly: 5.20.0
2024-04-28 12:58:57,775:INFO:    plotly-resampler: Not installed
2024-04-28 12:58:57,775:INFO:             kaleido: 0.2.1
2024-04-28 12:58:57,775:INFO:           schemdraw: 0.15
2024-04-28 12:58:57,776:INFO:         statsmodels: 0.14.1
2024-04-28 12:58:57,776:INFO:              sktime: 0.21.1
2024-04-28 12:58:57,776:INFO:               tbats: 1.1.3
2024-04-28 12:58:57,776:INFO:            pmdarima: 2.0.4
2024-04-28 12:58:57,776:INFO:              psutil: 5.9.8
2024-04-28 12:58:57,776:INFO:          markupsafe: 2.1.5
2024-04-28 12:58:57,776:INFO:             pickle5: Not installed
2024-04-28 12:58:57,776:INFO:         cloudpickle: 3.0.0
2024-04-28 12:58:57,776:INFO:         deprecation: 2.1.0
2024-04-28 12:58:57,776:INFO:              xxhash: 3.4.1
2024-04-28 12:58:57,776:INFO:           wurlitzer: Not installed
2024-04-28 12:58:57,776:INFO:PyCaret optional dependencies:
2024-04-28 12:58:57,783:INFO:                shap: Not installed
2024-04-28 12:58:57,783:INFO:           interpret: Not installed
2024-04-28 12:58:57,783:INFO:                umap: Not installed
2024-04-28 12:58:57,783:INFO:     ydata_profiling: Not installed
2024-04-28 12:58:57,783:INFO:  explainerdashboard: Not installed
2024-04-28 12:58:57,783:INFO:             autoviz: Not installed
2024-04-28 12:58:57,783:INFO:           fairlearn: Not installed
2024-04-28 12:58:57,783:INFO:          deepchecks: Not installed
2024-04-28 12:58:57,783:INFO:             xgboost: Not installed
2024-04-28 12:58:57,783:INFO:            catboost: Not installed
2024-04-28 12:58:57,783:INFO:              kmodes: Not installed
2024-04-28 12:58:57,783:INFO:             mlxtend: Not installed
2024-04-28 12:58:57,783:INFO:       statsforecast: Not installed
2024-04-28 12:58:57,783:INFO:        tune_sklearn: Not installed
2024-04-28 12:58:57,783:INFO:                 ray: Not installed
2024-04-28 12:58:57,783:INFO:            hyperopt: Not installed
2024-04-28 12:58:57,783:INFO:              optuna: Not installed
2024-04-28 12:58:57,783:INFO:               skopt: Not installed
2024-04-28 12:58:57,783:INFO:              mlflow: 2.11.3
2024-04-28 12:58:57,783:INFO:              gradio: Not installed
2024-04-28 12:58:57,783:INFO:             fastapi: Not installed
2024-04-28 12:58:57,783:INFO:             uvicorn: Not installed
2024-04-28 12:58:57,783:INFO:              m2cgen: Not installed
2024-04-28 12:58:57,783:INFO:           evidently: Not installed
2024-04-28 12:58:57,783:INFO:               fugue: Not installed
2024-04-28 12:58:57,783:INFO:           streamlit: 1.33.0
2024-04-28 12:58:57,783:INFO:             prophet: Not installed
2024-04-28 12:58:57,783:INFO:None
2024-04-28 12:58:57,783:INFO:Set up data.
2024-04-28 12:58:57,788:INFO:Set up folding strategy.
2024-04-28 12:58:57,788:INFO:Set up train/test split.
2024-04-28 12:58:57,788:INFO:Set up data.
2024-04-28 12:58:57,791:INFO:Set up index.
2024-04-28 12:58:57,791:INFO:Assigning column types.
2024-04-28 12:58:57,794:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 12:58:57,827:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 12:58:57,829:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:58:57,854:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:57,854:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:57,889:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 12:58:57,890:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:58:57,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:57,911:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:57,911:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 12:58:57,945:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:58:57,975:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:57,975:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:58,014:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:58:58,036:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:58,036:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:58,036:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 12:58:58,094:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:58,094:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:58,149:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:58,149:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:58,151:INFO:Preparing preprocessing pipeline...
2024-04-28 12:58:58,152:INFO:Set up simple imputation.
2024-04-28 12:58:58,152:INFO:Set up feature normalization.
2024-04-28 12:58:58,171:INFO:Finished creating preprocessing pipeline.
2024-04-28 12:58:58,175:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-28 12:58:58,175:INFO:Creating final display dataframe.
2024-04-28 12:58:58,224:INFO:Setup _display_container:                     Description             Value
0                    Session id              8716
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              a7af
2024-04-28 12:58:58,285:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:58,285:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:58,341:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:58,341:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:58:58,342:INFO:setup() successfully completed in 0.59s...............
2024-04-28 12:58:58,342:INFO:Initializing compare_models()
2024-04-28 12:58:58,342:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249EDE771C0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000249EDE771C0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 12:58:58,342:INFO:Checking exceptions
2024-04-28 12:58:58,345:INFO:Preparing display monitor
2024-04-28 12:58:58,359:INFO:Initializing Logistic Regression
2024-04-28 12:58:58,359:INFO:Total runtime is 0.0 minutes
2024-04-28 12:58:58,361:INFO:SubProcess create_model() called ==================================
2024-04-28 12:58:58,361:INFO:Initializing create_model()
2024-04-28 12:58:58,361:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249EDE771C0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249F45D2F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:58:58,362:INFO:Checking exceptions
2024-04-28 12:58:58,362:INFO:Importing libraries
2024-04-28 12:58:58,362:INFO:Copying training dataset
2024-04-28 12:58:58,366:INFO:Defining folds
2024-04-28 12:58:58,366:INFO:Declaring metric variables
2024-04-28 12:58:58,368:INFO:Importing untrained model
2024-04-28 12:58:58,370:INFO:Logistic Regression Imported successfully
2024-04-28 12:58:58,374:INFO:Starting cross validation
2024-04-28 12:58:58,375:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:59:00,759:INFO:Calculating mean and std
2024-04-28 12:59:00,761:INFO:Creating metrics dataframe
2024-04-28 12:59:00,767:INFO:Uploading results into container
2024-04-28 12:59:00,768:INFO:Uploading model into container now
2024-04-28 12:59:00,769:INFO:_master_model_container: 1
2024-04-28 12:59:00,769:INFO:_display_container: 2
2024-04-28 12:59:00,770:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8716, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 12:59:00,770:INFO:create_model() successfully completed......................................
2024-04-28 12:59:00,971:INFO:SubProcess create_model() end ==================================
2024-04-28 12:59:00,971:INFO:Creating metrics dataframe
2024-04-28 12:59:00,977:INFO:Initializing Decision Tree Classifier
2024-04-28 12:59:00,978:INFO:Total runtime is 0.043647277355194095 minutes
2024-04-28 12:59:00,980:INFO:SubProcess create_model() called ==================================
2024-04-28 12:59:00,980:INFO:Initializing create_model()
2024-04-28 12:59:00,980:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249EDE771C0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249F45D2F10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:59:00,980:INFO:Checking exceptions
2024-04-28 12:59:00,980:INFO:Importing libraries
2024-04-28 12:59:00,980:INFO:Copying training dataset
2024-04-28 12:59:00,984:INFO:Defining folds
2024-04-28 12:59:00,984:INFO:Declaring metric variables
2024-04-28 12:59:00,987:INFO:Importing untrained model
2024-04-28 12:59:00,989:INFO:Decision Tree Classifier Imported successfully
2024-04-28 12:59:00,993:INFO:Starting cross validation
2024-04-28 12:59:00,994:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:59:02,318:INFO:Calculating mean and std
2024-04-28 12:59:02,320:INFO:Creating metrics dataframe
2024-04-28 12:59:02,325:INFO:Uploading results into container
2024-04-28 12:59:02,326:INFO:Uploading model into container now
2024-04-28 12:59:02,326:INFO:_master_model_container: 2
2024-04-28 12:59:02,326:INFO:_display_container: 2
2024-04-28 12:59:02,326:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8716, splitter='best')
2024-04-28 12:59:02,327:INFO:create_model() successfully completed......................................
2024-04-28 12:59:02,440:INFO:SubProcess create_model() end ==================================
2024-04-28 12:59:02,440:INFO:Creating metrics dataframe
2024-04-28 12:59:02,452:INFO:Initializing create_model()
2024-04-28 12:59:02,453:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249EDE771C0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8716, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:59:02,453:INFO:Checking exceptions
2024-04-28 12:59:02,454:INFO:Importing libraries
2024-04-28 12:59:02,454:INFO:Copying training dataset
2024-04-28 12:59:02,457:INFO:Defining folds
2024-04-28 12:59:02,457:INFO:Declaring metric variables
2024-04-28 12:59:02,457:INFO:Importing untrained model
2024-04-28 12:59:02,458:INFO:Declaring custom model
2024-04-28 12:59:02,458:INFO:Decision Tree Classifier Imported successfully
2024-04-28 12:59:02,458:INFO:Cross validation set to False
2024-04-28 12:59:02,458:INFO:Fitting Model
2024-04-28 12:59:02,504:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8716, splitter='best')
2024-04-28 12:59:02,504:INFO:create_model() successfully completed......................................
2024-04-28 12:59:02,605:INFO:Initializing create_model()
2024-04-28 12:59:02,605:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249EDE771C0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8716, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:59:02,605:INFO:Checking exceptions
2024-04-28 12:59:02,606:INFO:Importing libraries
2024-04-28 12:59:02,606:INFO:Copying training dataset
2024-04-28 12:59:02,609:INFO:Defining folds
2024-04-28 12:59:02,609:INFO:Declaring metric variables
2024-04-28 12:59:02,609:INFO:Importing untrained model
2024-04-28 12:59:02,609:INFO:Declaring custom model
2024-04-28 12:59:02,610:INFO:Logistic Regression Imported successfully
2024-04-28 12:59:02,610:INFO:Cross validation set to False
2024-04-28 12:59:02,610:INFO:Fitting Model
2024-04-28 12:59:02,625:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8716, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 12:59:02,625:INFO:create_model() successfully completed......................................
2024-04-28 12:59:02,730:INFO:_master_model_container: 2
2024-04-28 12:59:02,730:INFO:_display_container: 2
2024-04-28 12:59:02,730:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8716, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8716, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-28 12:59:02,731:INFO:compare_models() successfully completed......................................
2024-04-28 12:59:02,731:INFO:Initializing plot_model()
2024-04-28 12:59:02,731:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8716, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249EDE771C0>, system=True)
2024-04-28 12:59:02,731:INFO:Checking exceptions
2024-04-28 12:59:02,734:INFO:Preloading libraries
2024-04-28 12:59:02,735:INFO:Copying training dataset
2024-04-28 12:59:02,735:INFO:Plot type: parameter
2024-04-28 12:59:02,737:INFO:Visual Rendered Successfully
2024-04-28 12:59:02,833:INFO:plot_model() successfully completed......................................
2024-04-28 12:59:02,857:INFO:Initializing predict_model()
2024-04-28 12:59:02,857:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249EDE771C0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8716, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000249F463D670>)
2024-04-28 12:59:02,857:INFO:Checking exceptions
2024-04-28 12:59:02,857:INFO:Preloading libraries
2024-04-28 12:59:03,102:INFO:Initializing plot_model()
2024-04-28 12:59:03,102:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8716, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249EDE771C0>, system=True)
2024-04-28 12:59:03,102:INFO:Checking exceptions
2024-04-28 12:59:03,105:INFO:Preloading libraries
2024-04-28 12:59:03,105:INFO:Copying training dataset
2024-04-28 12:59:03,105:INFO:Plot type: parameter
2024-04-28 12:59:03,108:INFO:Visual Rendered Successfully
2024-04-28 12:59:03,205:INFO:plot_model() successfully completed......................................
2024-04-28 12:59:03,221:INFO:Initializing predict_model()
2024-04-28 12:59:03,221:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249EDE771C0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8716, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000249EFF931F0>)
2024-04-28 12:59:03,221:INFO:Checking exceptions
2024-04-28 12:59:03,221:INFO:Preloading libraries
2024-04-28 12:59:03,461:INFO:Initializing load_model()
2024-04-28 12:59:03,462:INFO:load_model(model_name=./model_kobe, platform=None, authentication=None, verbose=True)
2024-04-28 12:59:03,463:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.0', 'setuptools': '69.5.1', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.0', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.20.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.0', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.0', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.20.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.0', 'machine': 'AMD64'}}
  warnings.warn(

2024-04-28 12:59:03,513:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\mlflow\types\utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-28 12:59:05,865:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\_distutils_hack\__init__.py:26: UserWarning: Setuptools is replacing distutils.
  warnings.warn("Setuptools is replacing distutils.")

2024-04-28 12:59:05,925:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_15520\1973998042.py:83: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-28 12:59:05,958:INFO:PyCaret ClassificationExperiment
2024-04-28 12:59:05,958:INFO:Logging name: Projeto Kobe
2024-04-28 12:59:05,958:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 12:59:05,958:INFO:version 3.2.0
2024-04-28 12:59:05,958:INFO:Initializing setup()
2024-04-28 12:59:05,958:INFO:self.USI: 998f
2024-04-28 12:59:05,958:INFO:self._variable_keys: {'exp_name_log', 'exp_id', 'target_param', 'seed', 'idx', 'X', 'X_test', 'y_test', 'html_param', 'fold_groups_param', 'X_train', 'y_train', 'gpu_param', '_available_plots', 'log_plots_param', 'USI', 'n_jobs_param', 'data', 'fold_generator', 'fix_imbalance', 'memory', 'y', '_ml_usecase', 'pipeline', 'fold_shuffle_param', 'is_multiclass', 'logging_param', 'gpu_n_jobs_param'}
2024-04-28 12:59:05,958:INFO:Checking environment
2024-04-28 12:59:05,958:INFO:python_version: 3.8.0
2024-04-28 12:59:05,958:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 12:59:05,959:INFO:machine: AMD64
2024-04-28 12:59:05,959:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 12:59:05,963:INFO:Memory: svmem(total=34301427712, available=18443837440, percent=46.2, used=15857590272, free=18443837440)
2024-04-28 12:59:05,963:INFO:Physical Core: 6
2024-04-28 12:59:05,963:INFO:Logical Core: 12
2024-04-28 12:59:05,963:INFO:Checking libraries
2024-04-28 12:59:05,964:INFO:System:
2024-04-28 12:59:05,964:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 12:59:05,964:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 12:59:05,964:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 12:59:05,964:INFO:PyCaret required dependencies:
2024-04-28 12:59:05,964:INFO:                 pip: 24.0
2024-04-28 12:59:05,964:INFO:          setuptools: 69.5.1
2024-04-28 12:59:05,964:INFO:             pycaret: 3.2.0
2024-04-28 12:59:05,964:INFO:             IPython: 8.12.3
2024-04-28 12:59:05,964:INFO:          ipywidgets: 8.1.2
2024-04-28 12:59:05,964:INFO:                tqdm: 4.66.2
2024-04-28 12:59:05,964:INFO:               numpy: 1.24.4
2024-04-28 12:59:05,964:INFO:              pandas: 1.5.3
2024-04-28 12:59:05,964:INFO:              jinja2: 3.1.3
2024-04-28 12:59:05,964:INFO:               scipy: 1.10.1
2024-04-28 12:59:05,964:INFO:              joblib: 1.3.2
2024-04-28 12:59:05,964:INFO:             sklearn: 1.2.0
2024-04-28 12:59:05,964:INFO:                pyod: 1.1.3
2024-04-28 12:59:05,964:INFO:            imblearn: 0.12.2
2024-04-28 12:59:05,964:INFO:   category_encoders: 2.6.3
2024-04-28 12:59:05,964:INFO:            lightgbm: 4.3.0
2024-04-28 12:59:05,964:INFO:               numba: 0.58.1
2024-04-28 12:59:05,964:INFO:            requests: 2.31.0
2024-04-28 12:59:05,964:INFO:          matplotlib: 3.6.0
2024-04-28 12:59:05,964:INFO:          scikitplot: 0.3.7
2024-04-28 12:59:05,964:INFO:         yellowbrick: 1.5
2024-04-28 12:59:05,964:INFO:              plotly: 5.20.0
2024-04-28 12:59:05,964:INFO:    plotly-resampler: Not installed
2024-04-28 12:59:05,964:INFO:             kaleido: 0.2.1
2024-04-28 12:59:05,964:INFO:           schemdraw: 0.15
2024-04-28 12:59:05,964:INFO:         statsmodels: 0.14.1
2024-04-28 12:59:05,964:INFO:              sktime: 0.21.1
2024-04-28 12:59:05,964:INFO:               tbats: 1.1.3
2024-04-28 12:59:05,964:INFO:            pmdarima: 2.0.4
2024-04-28 12:59:05,964:INFO:              psutil: 5.9.8
2024-04-28 12:59:05,964:INFO:          markupsafe: 2.1.5
2024-04-28 12:59:05,965:INFO:             pickle5: Not installed
2024-04-28 12:59:05,965:INFO:         cloudpickle: 3.0.0
2024-04-28 12:59:05,965:INFO:         deprecation: 2.1.0
2024-04-28 12:59:05,965:INFO:              xxhash: 3.4.1
2024-04-28 12:59:05,965:INFO:           wurlitzer: Not installed
2024-04-28 12:59:05,965:INFO:PyCaret optional dependencies:
2024-04-28 12:59:05,965:INFO:                shap: Not installed
2024-04-28 12:59:05,965:INFO:           interpret: Not installed
2024-04-28 12:59:05,965:INFO:                umap: Not installed
2024-04-28 12:59:05,965:INFO:     ydata_profiling: Not installed
2024-04-28 12:59:05,965:INFO:  explainerdashboard: Not installed
2024-04-28 12:59:05,965:INFO:             autoviz: Not installed
2024-04-28 12:59:05,965:INFO:           fairlearn: Not installed
2024-04-28 12:59:05,965:INFO:          deepchecks: Not installed
2024-04-28 12:59:05,965:INFO:             xgboost: Not installed
2024-04-28 12:59:05,965:INFO:            catboost: Not installed
2024-04-28 12:59:05,965:INFO:              kmodes: Not installed
2024-04-28 12:59:05,965:INFO:             mlxtend: Not installed
2024-04-28 12:59:05,965:INFO:       statsforecast: Not installed
2024-04-28 12:59:05,965:INFO:        tune_sklearn: Not installed
2024-04-28 12:59:05,965:INFO:                 ray: Not installed
2024-04-28 12:59:05,965:INFO:            hyperopt: Not installed
2024-04-28 12:59:05,965:INFO:              optuna: Not installed
2024-04-28 12:59:05,965:INFO:               skopt: Not installed
2024-04-28 12:59:05,965:INFO:              mlflow: 2.11.3
2024-04-28 12:59:05,965:INFO:              gradio: Not installed
2024-04-28 12:59:05,965:INFO:             fastapi: Not installed
2024-04-28 12:59:05,965:INFO:             uvicorn: Not installed
2024-04-28 12:59:05,965:INFO:              m2cgen: Not installed
2024-04-28 12:59:05,965:INFO:           evidently: Not installed
2024-04-28 12:59:05,965:INFO:               fugue: Not installed
2024-04-28 12:59:05,965:INFO:           streamlit: 1.33.0
2024-04-28 12:59:05,965:INFO:             prophet: Not installed
2024-04-28 12:59:05,965:INFO:None
2024-04-28 12:59:05,965:INFO:Set up data.
2024-04-28 12:59:05,970:INFO:Set up folding strategy.
2024-04-28 12:59:05,970:INFO:Set up train/test split.
2024-04-28 12:59:05,976:INFO:Set up index.
2024-04-28 12:59:05,976:INFO:Assigning column types.
2024-04-28 12:59:05,978:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 12:59:06,013:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 12:59:06,013:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:59:06,035:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:59:06,035:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:59:06,071:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 12:59:06,071:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:59:06,093:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:59:06,093:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:59:06,093:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 12:59:06,128:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:59:06,149:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:59:06,150:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:59:06,183:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:59:06,204:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:59:06,204:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:59:06,205:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 12:59:06,262:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:59:06,262:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:59:06,319:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:59:06,319:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:59:06,320:INFO:Preparing preprocessing pipeline...
2024-04-28 12:59:06,321:INFO:Set up simple imputation.
2024-04-28 12:59:06,333:INFO:Finished creating preprocessing pipeline.
2024-04-28 12:59:06,335:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-04-28 12:59:06,335:INFO:Creating final display dataframe.
2024-04-28 12:59:06,373:INFO:Setup _display_container:                     Description            Value
0                    Session id             5943
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (20285, 7)
4        Transformed data shape       (20285, 7)
5   Transformed train set shape       (14199, 7)
6    Transformed test set shape        (6086, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name     Projeto Kobe
18                          USI             998f
2024-04-28 12:59:06,430:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:59:06,431:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:59:06,485:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:59:06,485:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:59:06,486:INFO:Logging experiment in loggers
2024-04-28 12:59:06,525:INFO:SubProcess save_model() called ==================================
2024-04-28 12:59:06,530:INFO:Initializing save_model()
2024-04-28 12:59:06,530:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), model_name=C:\Users\jpsar\AppData\Local\Temp\tmp0tpo7jdh\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-28 12:59:06,530:INFO:Adding model into prep_pipe
2024-04-28 12:59:06,530:WARNING:Only Model saved as it was a pipeline.
2024-04-28 12:59:06,532:INFO:C:\Users\jpsar\AppData\Local\Temp\tmp0tpo7jdh\Transformation Pipeline.pkl saved in current working directory
2024-04-28 12:59:06,534:INFO:Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-04-28 12:59:06,534:INFO:save_model() successfully completed......................................
2024-04-28 12:59:06,668:INFO:SubProcess save_model() end ==================================
2024-04-28 12:59:06,679:INFO:setup() successfully completed in 0.53s...............
2024-04-28 12:59:06,679:INFO:Initializing compare_models()
2024-04-28 12:59:06,679:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F2E1DEB0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=precision, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000249F2E1DEB0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'precision', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 12:59:06,680:INFO:Checking exceptions
2024-04-28 12:59:06,682:INFO:Preparing display monitor
2024-04-28 12:59:06,697:INFO:Initializing Logistic Regression
2024-04-28 12:59:06,697:INFO:Total runtime is 0.0 minutes
2024-04-28 12:59:06,699:INFO:SubProcess create_model() called ==================================
2024-04-28 12:59:06,699:INFO:Initializing create_model()
2024-04-28 12:59:06,699:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F2E1DEB0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249F6731C40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:59:06,699:INFO:Checking exceptions
2024-04-28 12:59:06,699:INFO:Importing libraries
2024-04-28 12:59:06,699:INFO:Copying training dataset
2024-04-28 12:59:06,703:INFO:Defining folds
2024-04-28 12:59:06,703:INFO:Declaring metric variables
2024-04-28 12:59:06,706:INFO:Importing untrained model
2024-04-28 12:59:06,708:INFO:Logistic Regression Imported successfully
2024-04-28 12:59:06,712:INFO:Starting cross validation
2024-04-28 12:59:06,713:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:59:06,838:INFO:Calculating mean and std
2024-04-28 12:59:06,838:INFO:Creating metrics dataframe
2024-04-28 12:59:06,842:INFO:Uploading results into container
2024-04-28 12:59:06,842:INFO:Uploading model into container now
2024-04-28 12:59:06,842:INFO:_master_model_container: 1
2024-04-28 12:59:06,842:INFO:_display_container: 2
2024-04-28 12:59:06,843:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5943, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 12:59:06,843:INFO:create_model() successfully completed......................................
2024-04-28 12:59:06,969:INFO:SubProcess create_model() end ==================================
2024-04-28 12:59:06,969:INFO:Creating metrics dataframe
2024-04-28 12:59:06,975:INFO:Initializing Decision Tree Classifier
2024-04-28 12:59:06,975:INFO:Total runtime is 0.004634376366933187 minutes
2024-04-28 12:59:06,977:INFO:SubProcess create_model() called ==================================
2024-04-28 12:59:06,978:INFO:Initializing create_model()
2024-04-28 12:59:06,978:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F2E1DEB0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249F6731C40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:59:06,978:INFO:Checking exceptions
2024-04-28 12:59:06,978:INFO:Importing libraries
2024-04-28 12:59:06,978:INFO:Copying training dataset
2024-04-28 12:59:06,982:INFO:Defining folds
2024-04-28 12:59:06,982:INFO:Declaring metric variables
2024-04-28 12:59:06,984:INFO:Importing untrained model
2024-04-28 12:59:06,986:INFO:Decision Tree Classifier Imported successfully
2024-04-28 12:59:06,990:INFO:Starting cross validation
2024-04-28 12:59:06,990:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:59:07,092:INFO:Calculating mean and std
2024-04-28 12:59:07,092:INFO:Creating metrics dataframe
2024-04-28 12:59:07,095:INFO:Uploading results into container
2024-04-28 12:59:07,095:INFO:Uploading model into container now
2024-04-28 12:59:07,095:INFO:_master_model_container: 2
2024-04-28 12:59:07,095:INFO:_display_container: 2
2024-04-28 12:59:07,096:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5943, splitter='best')
2024-04-28 12:59:07,096:INFO:create_model() successfully completed......................................
2024-04-28 12:59:07,221:INFO:SubProcess create_model() end ==================================
2024-04-28 12:59:07,221:INFO:Creating metrics dataframe
2024-04-28 12:59:07,233:INFO:Initializing create_model()
2024-04-28 12:59:07,233:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F2E1DEB0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5943, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:59:07,233:INFO:Checking exceptions
2024-04-28 12:59:07,235:INFO:Importing libraries
2024-04-28 12:59:07,235:INFO:Copying training dataset
2024-04-28 12:59:07,238:INFO:Defining folds
2024-04-28 12:59:07,238:INFO:Declaring metric variables
2024-04-28 12:59:07,239:INFO:Importing untrained model
2024-04-28 12:59:07,239:INFO:Declaring custom model
2024-04-28 12:59:07,239:INFO:Logistic Regression Imported successfully
2024-04-28 12:59:07,239:INFO:Cross validation set to False
2024-04-28 12:59:07,239:INFO:Fitting Model
2024-04-28 12:59:07,282:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5943, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 12:59:07,282:INFO:create_model() successfully completed......................................
2024-04-28 12:59:07,414:INFO:Creating Dashboard logs
2024-04-28 12:59:07,416:INFO:Model: Logistic Regression
2024-04-28 12:59:07,429:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 5943, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-04-28 12:59:07,490:INFO:Initializing predict_model()
2024-04-28 12:59:07,490:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F2E1DEB0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5943, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000249ED9ABA60>)
2024-04-28 12:59:07,490:INFO:Checking exceptions
2024-04-28 12:59:07,490:INFO:Preloading libraries
2024-04-28 12:59:07,682:INFO:SubProcess plot_model() called ==================================
2024-04-28 12:59:07,683:INFO:Initializing plot_model()
2024-04-28 12:59:07,683:INFO:plot_model(plot=auc, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5943, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmpp_cw61oo, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F2E1DEB0>, system=False)
2024-04-28 12:59:07,683:INFO:Checking exceptions
2024-04-28 12:59:07,685:INFO:Preloading libraries
2024-04-28 12:59:07,686:INFO:Copying training dataset
2024-04-28 12:59:07,686:INFO:Plot type: auc
2024-04-28 12:59:07,721:INFO:Fitting Model
2024-04-28 12:59:07,722:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 12:59:07,722:INFO:Scoring test/hold-out set
2024-04-28 12:59:07,736:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmpp_cw61oo\AUC.png'
2024-04-28 12:59:07,900:INFO:Visual Rendered Successfully
2024-04-28 12:59:08,027:INFO:plot_model() successfully completed......................................
2024-04-28 12:59:08,033:INFO:Initializing plot_model()
2024-04-28 12:59:08,033:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5943, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmpp_cw61oo, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F2E1DEB0>, system=False)
2024-04-28 12:59:08,033:INFO:Checking exceptions
2024-04-28 12:59:08,035:INFO:Preloading libraries
2024-04-28 12:59:08,035:INFO:Copying training dataset
2024-04-28 12:59:08,035:INFO:Plot type: confusion_matrix
2024-04-28 12:59:08,070:INFO:Fitting Model
2024-04-28 12:59:08,070:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 12:59:08,071:INFO:Scoring test/hold-out set
2024-04-28 12:59:08,084:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmpp_cw61oo\Confusion Matrix.png'
2024-04-28 12:59:08,167:INFO:Visual Rendered Successfully
2024-04-28 12:59:08,293:INFO:plot_model() successfully completed......................................
2024-04-28 12:59:08,298:INFO:Initializing plot_model()
2024-04-28 12:59:08,299:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5943, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmpp_cw61oo, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F2E1DEB0>, system=False)
2024-04-28 12:59:08,299:INFO:Checking exceptions
2024-04-28 12:59:08,300:INFO:Preloading libraries
2024-04-28 12:59:08,300:INFO:Copying training dataset
2024-04-28 12:59:08,300:INFO:Plot type: feature
2024-04-28 12:59:08,331:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmpp_cw61oo\Feature Importance.png'
2024-04-28 12:59:08,446:INFO:Visual Rendered Successfully
2024-04-28 12:59:08,572:INFO:plot_model() successfully completed......................................
2024-04-28 12:59:08,577:INFO:SubProcess plot_model() end ==================================
2024-04-28 12:59:08,750:INFO:Creating Dashboard logs
2024-04-28 12:59:08,753:INFO:Model: Decision Tree Classifier
2024-04-28 12:59:08,766:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 5943, 'splitter': 'best'}
2024-04-28 12:59:08,998:INFO:_master_model_container: 2
2024-04-28 12:59:08,998:INFO:_display_container: 2
2024-04-28 12:59:08,998:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5943, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 12:59:08,998:INFO:compare_models() successfully completed......................................
2024-04-28 12:59:08,999:INFO:Initializing plot_model()
2024-04-28 12:59:08,999:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5943, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F2E1DEB0>, system=True)
2024-04-28 12:59:08,999:INFO:Checking exceptions
2024-04-28 12:59:09,002:INFO:Preloading libraries
2024-04-28 12:59:09,002:INFO:Copying training dataset
2024-04-28 12:59:09,002:INFO:Plot type: auc
2024-04-28 12:59:09,039:INFO:Fitting Model
2024-04-28 12:59:09,039:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 12:59:09,039:INFO:Scoring test/hold-out set
2024-04-28 12:59:09,054:INFO:Saving 'AUC.png'
2024-04-28 12:59:09,225:INFO:Visual Rendered Successfully
2024-04-28 12:59:09,353:INFO:plot_model() successfully completed......................................
2024-04-28 12:59:09,359:INFO:Initializing plot_model()
2024-04-28 12:59:09,359:INFO:plot_model(plot=pr, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5943, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F2E1DEB0>, system=True)
2024-04-28 12:59:09,359:INFO:Checking exceptions
2024-04-28 12:59:09,362:INFO:Preloading libraries
2024-04-28 12:59:09,363:INFO:Copying training dataset
2024-04-28 12:59:09,363:INFO:Plot type: pr
2024-04-28 12:59:09,403:INFO:Fitting Model
2024-04-28 12:59:09,403:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 12:59:09,404:INFO:Scoring test/hold-out set
2024-04-28 12:59:09,417:INFO:Saving 'Precision Recall.png'
2024-04-28 12:59:09,571:INFO:Visual Rendered Successfully
2024-04-28 12:59:09,706:INFO:plot_model() successfully completed......................................
2024-04-28 12:59:09,712:INFO:Initializing plot_model()
2024-04-28 12:59:09,712:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5943, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F2E1DEB0>, system=True)
2024-04-28 12:59:09,712:INFO:Checking exceptions
2024-04-28 12:59:09,715:INFO:Preloading libraries
2024-04-28 12:59:09,716:INFO:Copying training dataset
2024-04-28 12:59:09,716:INFO:Plot type: confusion_matrix
2024-04-28 12:59:09,753:INFO:Fitting Model
2024-04-28 12:59:09,753:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 12:59:09,754:INFO:Scoring test/hold-out set
2024-04-28 12:59:09,767:INFO:Saving 'Confusion Matrix.png'
2024-04-28 12:59:09,849:INFO:Visual Rendered Successfully
2024-04-28 12:59:09,979:INFO:plot_model() successfully completed......................................
2024-04-28 12:59:09,981:INFO:Initializing plot_model()
2024-04-28 12:59:09,981:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5943, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F2E1DEB0>, system=True)
2024-04-28 12:59:09,981:INFO:Checking exceptions
2024-04-28 12:59:09,984:INFO:Preloading libraries
2024-04-28 12:59:09,984:INFO:Copying training dataset
2024-04-28 12:59:09,985:INFO:Plot type: learning
2024-04-28 12:59:10,025:INFO:Fitting Model
2024-04-28 12:59:12,793:INFO:Saving 'Learning Curve.png'
2024-04-28 12:59:12,948:INFO:Visual Rendered Successfully
2024-04-28 12:59:13,080:INFO:plot_model() successfully completed......................................
2024-04-28 12:59:13,086:INFO:Initializing plot_model()
2024-04-28 12:59:13,087:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5943, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F2E1DEB0>, system=True)
2024-04-28 12:59:13,087:INFO:Checking exceptions
2024-04-28 12:59:13,090:INFO:Preloading libraries
2024-04-28 12:59:13,090:INFO:Copying training dataset
2024-04-28 12:59:13,090:INFO:Plot type: feature
2024-04-28 12:59:13,122:INFO:Saving 'Feature Importance.png'
2024-04-28 12:59:13,232:INFO:Visual Rendered Successfully
2024-04-28 12:59:13,362:INFO:plot_model() successfully completed......................................
2024-04-28 12:59:13,386:INFO:Initializing predict_model()
2024-04-28 12:59:13,386:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F2E1DEB0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5943, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000249EDEA49D0>)
2024-04-28 12:59:13,386:INFO:Checking exceptions
2024-04-28 12:59:13,386:INFO:Preloading libraries
2024-04-28 13:42:57,117:INFO:PyCaret ClassificationExperiment
2024-04-28 13:42:57,117:INFO:Logging name: clf-default-name
2024-04-28 13:42:57,117:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 13:42:57,117:INFO:version 3.2.0
2024-04-28 13:42:57,117:INFO:Initializing setup()
2024-04-28 13:42:57,118:INFO:self.USI: 7cc8
2024-04-28 13:42:57,118:INFO:self._variable_keys: {'exp_name_log', 'exp_id', 'target_param', 'seed', 'idx', 'X', 'X_test', 'y_test', 'html_param', 'fold_groups_param', 'X_train', 'y_train', 'gpu_param', '_available_plots', 'log_plots_param', 'USI', 'n_jobs_param', 'data', 'fold_generator', 'fix_imbalance', 'memory', 'y', '_ml_usecase', 'pipeline', 'fold_shuffle_param', 'is_multiclass', 'logging_param', 'gpu_n_jobs_param'}
2024-04-28 13:42:57,118:INFO:Checking environment
2024-04-28 13:42:57,118:INFO:python_version: 3.8.0
2024-04-28 13:42:57,118:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 13:42:57,118:INFO:machine: AMD64
2024-04-28 13:42:57,118:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 13:42:57,123:INFO:Memory: svmem(total=34301427712, available=19455135744, percent=43.3, used=14846291968, free=19455135744)
2024-04-28 13:42:57,123:INFO:Physical Core: 6
2024-04-28 13:42:57,123:INFO:Logical Core: 12
2024-04-28 13:42:57,123:INFO:Checking libraries
2024-04-28 13:42:57,123:INFO:System:
2024-04-28 13:42:57,123:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 13:42:57,123:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 13:42:57,123:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 13:42:57,123:INFO:PyCaret required dependencies:
2024-04-28 13:42:57,123:INFO:                 pip: 24.0
2024-04-28 13:42:57,123:INFO:          setuptools: 69.5.1
2024-04-28 13:42:57,123:INFO:             pycaret: 3.2.0
2024-04-28 13:42:57,123:INFO:             IPython: 8.12.3
2024-04-28 13:42:57,123:INFO:          ipywidgets: 8.1.2
2024-04-28 13:42:57,123:INFO:                tqdm: 4.66.2
2024-04-28 13:42:57,123:INFO:               numpy: 1.24.4
2024-04-28 13:42:57,123:INFO:              pandas: 1.5.3
2024-04-28 13:42:57,123:INFO:              jinja2: 3.1.3
2024-04-28 13:42:57,123:INFO:               scipy: 1.10.1
2024-04-28 13:42:57,123:INFO:              joblib: 1.3.2
2024-04-28 13:42:57,123:INFO:             sklearn: 1.2.0
2024-04-28 13:42:57,124:INFO:                pyod: 1.1.3
2024-04-28 13:42:57,124:INFO:            imblearn: 0.12.2
2024-04-28 13:42:57,124:INFO:   category_encoders: 2.6.3
2024-04-28 13:42:57,124:INFO:            lightgbm: 4.3.0
2024-04-28 13:42:57,124:INFO:               numba: 0.58.1
2024-04-28 13:42:57,124:INFO:            requests: 2.31.0
2024-04-28 13:42:57,124:INFO:          matplotlib: 3.6.0
2024-04-28 13:42:57,124:INFO:          scikitplot: 0.3.7
2024-04-28 13:42:57,124:INFO:         yellowbrick: 1.5
2024-04-28 13:42:57,124:INFO:              plotly: 5.20.0
2024-04-28 13:42:57,124:INFO:    plotly-resampler: Not installed
2024-04-28 13:42:57,124:INFO:             kaleido: 0.2.1
2024-04-28 13:42:57,124:INFO:           schemdraw: 0.15
2024-04-28 13:42:57,124:INFO:         statsmodels: 0.14.1
2024-04-28 13:42:57,124:INFO:              sktime: 0.21.1
2024-04-28 13:42:57,124:INFO:               tbats: 1.1.3
2024-04-28 13:42:57,124:INFO:            pmdarima: 2.0.4
2024-04-28 13:42:57,124:INFO:              psutil: 5.9.8
2024-04-28 13:42:57,124:INFO:          markupsafe: 2.1.5
2024-04-28 13:42:57,124:INFO:             pickle5: Not installed
2024-04-28 13:42:57,124:INFO:         cloudpickle: 3.0.0
2024-04-28 13:42:57,124:INFO:         deprecation: 2.1.0
2024-04-28 13:42:57,124:INFO:              xxhash: 3.4.1
2024-04-28 13:42:57,124:INFO:           wurlitzer: Not installed
2024-04-28 13:42:57,124:INFO:PyCaret optional dependencies:
2024-04-28 13:42:57,124:INFO:                shap: Not installed
2024-04-28 13:42:57,124:INFO:           interpret: Not installed
2024-04-28 13:42:57,124:INFO:                umap: Not installed
2024-04-28 13:42:57,124:INFO:     ydata_profiling: Not installed
2024-04-28 13:42:57,124:INFO:  explainerdashboard: Not installed
2024-04-28 13:42:57,124:INFO:             autoviz: Not installed
2024-04-28 13:42:57,124:INFO:           fairlearn: Not installed
2024-04-28 13:42:57,124:INFO:          deepchecks: Not installed
2024-04-28 13:42:57,124:INFO:             xgboost: Not installed
2024-04-28 13:42:57,124:INFO:            catboost: Not installed
2024-04-28 13:42:57,124:INFO:              kmodes: Not installed
2024-04-28 13:42:57,124:INFO:             mlxtend: Not installed
2024-04-28 13:42:57,124:INFO:       statsforecast: Not installed
2024-04-28 13:42:57,124:INFO:        tune_sklearn: Not installed
2024-04-28 13:42:57,124:INFO:                 ray: Not installed
2024-04-28 13:42:57,124:INFO:            hyperopt: Not installed
2024-04-28 13:42:57,124:INFO:              optuna: Not installed
2024-04-28 13:42:57,125:INFO:               skopt: Not installed
2024-04-28 13:42:57,125:INFO:              mlflow: 2.11.3
2024-04-28 13:42:57,125:INFO:              gradio: Not installed
2024-04-28 13:42:57,125:INFO:             fastapi: Not installed
2024-04-28 13:42:57,125:INFO:             uvicorn: Not installed
2024-04-28 13:42:57,125:INFO:              m2cgen: Not installed
2024-04-28 13:42:57,125:INFO:           evidently: Not installed
2024-04-28 13:42:57,125:INFO:               fugue: Not installed
2024-04-28 13:42:57,125:INFO:           streamlit: 1.33.0
2024-04-28 13:42:57,125:INFO:             prophet: Not installed
2024-04-28 13:42:57,125:INFO:None
2024-04-28 13:42:57,125:INFO:Set up data.
2024-04-28 13:42:57,129:INFO:Set up folding strategy.
2024-04-28 13:42:57,129:INFO:Set up train/test split.
2024-04-28 13:42:57,129:INFO:Set up data.
2024-04-28 13:42:57,132:INFO:Set up index.
2024-04-28 13:42:57,132:INFO:Assigning column types.
2024-04-28 13:42:57,135:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 13:42:57,168:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 13:42:57,169:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:42:57,190:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:42:57,190:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:42:57,224:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 13:42:57,225:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:42:57,245:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:42:57,246:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:42:57,246:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 13:42:57,281:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:42:57,303:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:42:57,304:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:42:57,338:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:42:57,359:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:42:57,359:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:42:57,359:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 13:42:57,414:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:42:57,415:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:42:57,470:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:42:57,470:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:42:57,471:INFO:Preparing preprocessing pipeline...
2024-04-28 13:42:57,472:INFO:Set up simple imputation.
2024-04-28 13:42:57,472:INFO:Set up feature normalization.
2024-04-28 13:42:57,488:INFO:Finished creating preprocessing pipeline.
2024-04-28 13:42:57,491:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-28 13:42:57,491:INFO:Creating final display dataframe.
2024-04-28 13:42:57,543:INFO:Setup _display_container:                     Description             Value
0                    Session id              2124
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              7cc8
2024-04-28 13:42:57,604:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:42:57,604:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:42:57,660:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:42:57,660:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:42:57,660:INFO:setup() successfully completed in 0.54s...............
2024-04-28 13:42:57,661:INFO:Initializing compare_models()
2024-04-28 13:42:57,661:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F03DD580>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000249F03DD580>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 13:42:57,661:INFO:Checking exceptions
2024-04-28 13:42:57,663:INFO:Preparing display monitor
2024-04-28 13:42:57,678:INFO:Initializing Logistic Regression
2024-04-28 13:42:57,678:INFO:Total runtime is 0.0 minutes
2024-04-28 13:42:57,680:INFO:SubProcess create_model() called ==================================
2024-04-28 13:42:57,680:INFO:Initializing create_model()
2024-04-28 13:42:57,680:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F03DD580>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249F463FC10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:42:57,681:INFO:Checking exceptions
2024-04-28 13:42:57,681:INFO:Importing libraries
2024-04-28 13:42:57,681:INFO:Copying training dataset
2024-04-28 13:42:57,686:INFO:Defining folds
2024-04-28 13:42:57,686:INFO:Declaring metric variables
2024-04-28 13:42:57,688:INFO:Importing untrained model
2024-04-28 13:42:57,691:INFO:Logistic Regression Imported successfully
2024-04-28 13:42:57,695:INFO:Starting cross validation
2024-04-28 13:42:57,695:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:43:00,163:INFO:Calculating mean and std
2024-04-28 13:43:00,167:INFO:Creating metrics dataframe
2024-04-28 13:43:00,172:INFO:Uploading results into container
2024-04-28 13:43:00,173:INFO:Uploading model into container now
2024-04-28 13:43:00,173:INFO:_master_model_container: 1
2024-04-28 13:43:00,173:INFO:_display_container: 2
2024-04-28 13:43:00,174:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2124, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:43:00,174:INFO:create_model() successfully completed......................................
2024-04-28 13:43:00,410:INFO:SubProcess create_model() end ==================================
2024-04-28 13:43:00,410:INFO:Creating metrics dataframe
2024-04-28 13:43:00,416:INFO:Initializing Decision Tree Classifier
2024-04-28 13:43:00,416:INFO:Total runtime is 0.04561864535013835 minutes
2024-04-28 13:43:00,419:INFO:SubProcess create_model() called ==================================
2024-04-28 13:43:00,419:INFO:Initializing create_model()
2024-04-28 13:43:00,419:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F03DD580>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249F463FC10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:43:00,419:INFO:Checking exceptions
2024-04-28 13:43:00,419:INFO:Importing libraries
2024-04-28 13:43:00,420:INFO:Copying training dataset
2024-04-28 13:43:00,424:INFO:Defining folds
2024-04-28 13:43:00,424:INFO:Declaring metric variables
2024-04-28 13:43:00,426:INFO:Importing untrained model
2024-04-28 13:43:00,428:INFO:Decision Tree Classifier Imported successfully
2024-04-28 13:43:00,432:INFO:Starting cross validation
2024-04-28 13:43:00,432:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:43:01,762:INFO:Calculating mean and std
2024-04-28 13:43:01,764:INFO:Creating metrics dataframe
2024-04-28 13:43:01,768:INFO:Uploading results into container
2024-04-28 13:43:01,769:INFO:Uploading model into container now
2024-04-28 13:43:01,769:INFO:_master_model_container: 2
2024-04-28 13:43:01,770:INFO:_display_container: 2
2024-04-28 13:43:01,770:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2124, splitter='best')
2024-04-28 13:43:01,770:INFO:create_model() successfully completed......................................
2024-04-28 13:43:01,929:INFO:SubProcess create_model() end ==================================
2024-04-28 13:43:01,929:INFO:Creating metrics dataframe
2024-04-28 13:43:01,941:INFO:Initializing create_model()
2024-04-28 13:43:01,942:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F03DD580>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2124, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:43:01,942:INFO:Checking exceptions
2024-04-28 13:43:01,943:INFO:Importing libraries
2024-04-28 13:43:01,943:INFO:Copying training dataset
2024-04-28 13:43:01,947:INFO:Defining folds
2024-04-28 13:43:01,947:INFO:Declaring metric variables
2024-04-28 13:43:01,947:INFO:Importing untrained model
2024-04-28 13:43:01,947:INFO:Declaring custom model
2024-04-28 13:43:01,947:INFO:Decision Tree Classifier Imported successfully
2024-04-28 13:43:01,948:INFO:Cross validation set to False
2024-04-28 13:43:01,948:INFO:Fitting Model
2024-04-28 13:43:01,994:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2124, splitter='best')
2024-04-28 13:43:01,994:INFO:create_model() successfully completed......................................
2024-04-28 13:43:02,137:INFO:Initializing create_model()
2024-04-28 13:43:02,137:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F03DD580>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2124, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:43:02,137:INFO:Checking exceptions
2024-04-28 13:43:02,138:INFO:Importing libraries
2024-04-28 13:43:02,139:INFO:Copying training dataset
2024-04-28 13:43:02,142:INFO:Defining folds
2024-04-28 13:43:02,142:INFO:Declaring metric variables
2024-04-28 13:43:02,142:INFO:Importing untrained model
2024-04-28 13:43:02,142:INFO:Declaring custom model
2024-04-28 13:43:02,143:INFO:Logistic Regression Imported successfully
2024-04-28 13:43:02,143:INFO:Cross validation set to False
2024-04-28 13:43:02,143:INFO:Fitting Model
2024-04-28 13:43:02,157:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2124, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:43:02,157:INFO:create_model() successfully completed......................................
2024-04-28 13:43:02,311:INFO:_master_model_container: 2
2024-04-28 13:43:02,311:INFO:_display_container: 2
2024-04-28 13:43:02,312:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2124, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2124, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-28 13:43:02,312:INFO:compare_models() successfully completed......................................
2024-04-28 13:43:02,313:INFO:Initializing plot_model()
2024-04-28 13:43:02,313:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2124, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F03DD580>, system=True)
2024-04-28 13:43:02,313:INFO:Checking exceptions
2024-04-28 13:43:02,316:INFO:Preloading libraries
2024-04-28 13:43:02,317:INFO:Copying training dataset
2024-04-28 13:43:02,317:INFO:Plot type: parameter
2024-04-28 13:43:02,320:INFO:Visual Rendered Successfully
2024-04-28 13:43:02,463:INFO:plot_model() successfully completed......................................
2024-04-28 13:43:02,482:INFO:Initializing predict_model()
2024-04-28 13:43:02,482:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F03DD580>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2124, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000249F603F1F0>)
2024-04-28 13:43:02,482:INFO:Checking exceptions
2024-04-28 13:43:02,482:INFO:Preloading libraries
2024-04-28 13:43:02,767:INFO:Initializing plot_model()
2024-04-28 13:43:02,767:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2124, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F03DD580>, system=True)
2024-04-28 13:43:02,767:INFO:Checking exceptions
2024-04-28 13:43:02,770:INFO:Preloading libraries
2024-04-28 13:43:02,770:INFO:Copying training dataset
2024-04-28 13:43:02,770:INFO:Plot type: parameter
2024-04-28 13:43:02,773:INFO:Visual Rendered Successfully
2024-04-28 13:43:02,914:INFO:plot_model() successfully completed......................................
2024-04-28 13:43:02,929:INFO:Initializing predict_model()
2024-04-28 13:43:02,929:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F03DD580>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2124, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000249F2F64040>)
2024-04-28 13:43:02,929:INFO:Checking exceptions
2024-04-28 13:43:02,929:INFO:Preloading libraries
2024-04-28 13:43:03,213:INFO:Initializing load_model()
2024-04-28 13:43:03,213:INFO:load_model(model_name=./model_kobe, platform=None, authentication=None, verbose=True)
2024-04-28 13:43:03,214:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.0', 'setuptools': '69.5.1', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.0', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.20.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.0', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.0', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.20.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.0', 'machine': 'AMD64'}}
  warnings.warn(

2024-04-28 13:43:03,266:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\mlflow\types\utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-28 13:43:05,244:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_15520\1973998042.py:83: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-28 13:43:05,329:INFO:PyCaret ClassificationExperiment
2024-04-28 13:43:05,329:INFO:Logging name: Projeto Kobe
2024-04-28 13:43:05,329:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 13:43:05,329:INFO:version 3.2.0
2024-04-28 13:43:05,329:INFO:Initializing setup()
2024-04-28 13:43:05,330:INFO:self.USI: 5a6c
2024-04-28 13:43:05,330:INFO:self._variable_keys: {'exp_name_log', 'exp_id', 'target_param', 'seed', 'idx', 'X', 'X_test', 'y_test', 'html_param', 'fold_groups_param', 'X_train', 'y_train', 'gpu_param', '_available_plots', 'log_plots_param', 'USI', 'n_jobs_param', 'data', 'fold_generator', 'fix_imbalance', 'memory', 'y', '_ml_usecase', 'pipeline', 'fold_shuffle_param', 'is_multiclass', 'logging_param', 'gpu_n_jobs_param'}
2024-04-28 13:43:05,330:INFO:Checking environment
2024-04-28 13:43:05,330:INFO:python_version: 3.8.0
2024-04-28 13:43:05,330:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 13:43:05,330:INFO:machine: AMD64
2024-04-28 13:43:05,330:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 13:43:05,336:INFO:Memory: svmem(total=34301427712, available=18037936128, percent=47.4, used=16263491584, free=18037936128)
2024-04-28 13:43:05,336:INFO:Physical Core: 6
2024-04-28 13:43:05,336:INFO:Logical Core: 12
2024-04-28 13:43:05,336:INFO:Checking libraries
2024-04-28 13:43:05,337:INFO:System:
2024-04-28 13:43:05,337:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 13:43:05,337:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 13:43:05,337:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 13:43:05,337:INFO:PyCaret required dependencies:
2024-04-28 13:43:05,337:INFO:                 pip: 24.0
2024-04-28 13:43:05,337:INFO:          setuptools: 69.5.1
2024-04-28 13:43:05,337:INFO:             pycaret: 3.2.0
2024-04-28 13:43:05,337:INFO:             IPython: 8.12.3
2024-04-28 13:43:05,337:INFO:          ipywidgets: 8.1.2
2024-04-28 13:43:05,337:INFO:                tqdm: 4.66.2
2024-04-28 13:43:05,337:INFO:               numpy: 1.24.4
2024-04-28 13:43:05,337:INFO:              pandas: 1.5.3
2024-04-28 13:43:05,337:INFO:              jinja2: 3.1.3
2024-04-28 13:43:05,337:INFO:               scipy: 1.10.1
2024-04-28 13:43:05,337:INFO:              joblib: 1.3.2
2024-04-28 13:43:05,337:INFO:             sklearn: 1.2.0
2024-04-28 13:43:05,337:INFO:                pyod: 1.1.3
2024-04-28 13:43:05,337:INFO:            imblearn: 0.12.2
2024-04-28 13:43:05,337:INFO:   category_encoders: 2.6.3
2024-04-28 13:43:05,337:INFO:            lightgbm: 4.3.0
2024-04-28 13:43:05,337:INFO:               numba: 0.58.1
2024-04-28 13:43:05,337:INFO:            requests: 2.31.0
2024-04-28 13:43:05,337:INFO:          matplotlib: 3.6.0
2024-04-28 13:43:05,337:INFO:          scikitplot: 0.3.7
2024-04-28 13:43:05,337:INFO:         yellowbrick: 1.5
2024-04-28 13:43:05,337:INFO:              plotly: 5.20.0
2024-04-28 13:43:05,337:INFO:    plotly-resampler: Not installed
2024-04-28 13:43:05,337:INFO:             kaleido: 0.2.1
2024-04-28 13:43:05,337:INFO:           schemdraw: 0.15
2024-04-28 13:43:05,337:INFO:         statsmodels: 0.14.1
2024-04-28 13:43:05,337:INFO:              sktime: 0.21.1
2024-04-28 13:43:05,337:INFO:               tbats: 1.1.3
2024-04-28 13:43:05,337:INFO:            pmdarima: 2.0.4
2024-04-28 13:43:05,337:INFO:              psutil: 5.9.8
2024-04-28 13:43:05,337:INFO:          markupsafe: 2.1.5
2024-04-28 13:43:05,338:INFO:             pickle5: Not installed
2024-04-28 13:43:05,338:INFO:         cloudpickle: 3.0.0
2024-04-28 13:43:05,338:INFO:         deprecation: 2.1.0
2024-04-28 13:43:05,338:INFO:              xxhash: 3.4.1
2024-04-28 13:43:05,338:INFO:           wurlitzer: Not installed
2024-04-28 13:43:05,338:INFO:PyCaret optional dependencies:
2024-04-28 13:43:05,338:INFO:                shap: Not installed
2024-04-28 13:43:05,338:INFO:           interpret: Not installed
2024-04-28 13:43:05,338:INFO:                umap: Not installed
2024-04-28 13:43:05,338:INFO:     ydata_profiling: Not installed
2024-04-28 13:43:05,338:INFO:  explainerdashboard: Not installed
2024-04-28 13:43:05,338:INFO:             autoviz: Not installed
2024-04-28 13:43:05,338:INFO:           fairlearn: Not installed
2024-04-28 13:43:05,338:INFO:          deepchecks: Not installed
2024-04-28 13:43:05,338:INFO:             xgboost: Not installed
2024-04-28 13:43:05,338:INFO:            catboost: Not installed
2024-04-28 13:43:05,338:INFO:              kmodes: Not installed
2024-04-28 13:43:05,338:INFO:             mlxtend: Not installed
2024-04-28 13:43:05,338:INFO:       statsforecast: Not installed
2024-04-28 13:43:05,338:INFO:        tune_sklearn: Not installed
2024-04-28 13:43:05,338:INFO:                 ray: Not installed
2024-04-28 13:43:05,338:INFO:            hyperopt: Not installed
2024-04-28 13:43:05,338:INFO:              optuna: Not installed
2024-04-28 13:43:05,338:INFO:               skopt: Not installed
2024-04-28 13:43:05,338:INFO:              mlflow: 2.11.3
2024-04-28 13:43:05,338:INFO:              gradio: Not installed
2024-04-28 13:43:05,338:INFO:             fastapi: Not installed
2024-04-28 13:43:05,338:INFO:             uvicorn: Not installed
2024-04-28 13:43:05,338:INFO:              m2cgen: Not installed
2024-04-28 13:43:05,338:INFO:           evidently: Not installed
2024-04-28 13:43:05,338:INFO:               fugue: Not installed
2024-04-28 13:43:05,338:INFO:           streamlit: 1.33.0
2024-04-28 13:43:05,338:INFO:             prophet: Not installed
2024-04-28 13:43:05,338:INFO:None
2024-04-28 13:43:05,338:INFO:Set up data.
2024-04-28 13:43:05,343:INFO:Set up folding strategy.
2024-04-28 13:43:05,343:INFO:Set up train/test split.
2024-04-28 13:43:05,350:INFO:Set up index.
2024-04-28 13:43:05,350:INFO:Assigning column types.
2024-04-28 13:43:05,353:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 13:43:05,392:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 13:43:05,393:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:43:05,415:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:43:05,415:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:43:05,449:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 13:43:05,450:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:43:05,472:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:43:05,472:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:43:05,472:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 13:43:05,507:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:43:05,528:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:43:05,529:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:43:05,563:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:43:05,589:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:43:05,589:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:43:05,589:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 13:43:05,646:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:43:05,646:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:43:05,700:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:43:05,700:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:43:05,701:INFO:Preparing preprocessing pipeline...
2024-04-28 13:43:05,702:INFO:Set up simple imputation.
2024-04-28 13:43:05,714:INFO:Finished creating preprocessing pipeline.
2024-04-28 13:43:05,716:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-04-28 13:43:05,716:INFO:Creating final display dataframe.
2024-04-28 13:43:05,754:INFO:Setup _display_container:                     Description            Value
0                    Session id             7773
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (20285, 7)
4        Transformed data shape       (20285, 7)
5   Transformed train set shape       (14199, 7)
6    Transformed test set shape        (6086, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name     Projeto Kobe
18                          USI             5a6c
2024-04-28 13:43:05,810:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:43:05,810:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:43:05,865:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:43:05,865:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:43:05,866:INFO:Logging experiment in loggers
2024-04-28 13:43:05,900:INFO:SubProcess save_model() called ==================================
2024-04-28 13:43:05,905:INFO:Initializing save_model()
2024-04-28 13:43:05,905:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), model_name=C:\Users\jpsar\AppData\Local\Temp\tmpnrz8vyk3\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-28 13:43:05,905:INFO:Adding model into prep_pipe
2024-04-28 13:43:05,905:WARNING:Only Model saved as it was a pipeline.
2024-04-28 13:43:05,906:INFO:C:\Users\jpsar\AppData\Local\Temp\tmpnrz8vyk3\Transformation Pipeline.pkl saved in current working directory
2024-04-28 13:43:05,908:INFO:Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-04-28 13:43:05,908:INFO:save_model() successfully completed......................................
2024-04-28 13:43:06,055:INFO:SubProcess save_model() end ==================================
2024-04-28 13:43:06,066:INFO:setup() successfully completed in 0.54s...............
2024-04-28 13:43:06,072:INFO:Initializing compare_models()
2024-04-28 13:43:06,072:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F0534BB0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=precision, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000249F0534BB0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'precision', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 13:43:06,072:INFO:Checking exceptions
2024-04-28 13:43:06,076:INFO:Preparing display monitor
2024-04-28 13:43:06,090:INFO:Initializing Logistic Regression
2024-04-28 13:43:06,090:INFO:Total runtime is 0.0 minutes
2024-04-28 13:43:06,092:INFO:SubProcess create_model() called ==================================
2024-04-28 13:43:06,092:INFO:Initializing create_model()
2024-04-28 13:43:06,092:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F0534BB0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249F07DD7F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:43:06,092:INFO:Checking exceptions
2024-04-28 13:43:06,092:INFO:Importing libraries
2024-04-28 13:43:06,093:INFO:Copying training dataset
2024-04-28 13:43:06,097:INFO:Defining folds
2024-04-28 13:43:06,097:INFO:Declaring metric variables
2024-04-28 13:43:06,099:INFO:Importing untrained model
2024-04-28 13:43:06,101:INFO:Logistic Regression Imported successfully
2024-04-28 13:43:06,105:INFO:Starting cross validation
2024-04-28 13:43:06,106:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:43:06,221:INFO:Calculating mean and std
2024-04-28 13:43:06,221:INFO:Creating metrics dataframe
2024-04-28 13:43:06,225:INFO:Uploading results into container
2024-04-28 13:43:06,225:INFO:Uploading model into container now
2024-04-28 13:43:06,226:INFO:_master_model_container: 1
2024-04-28 13:43:06,226:INFO:_display_container: 2
2024-04-28 13:43:06,226:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7773, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:43:06,226:INFO:create_model() successfully completed......................................
2024-04-28 13:43:06,370:INFO:SubProcess create_model() end ==================================
2024-04-28 13:43:06,371:INFO:Creating metrics dataframe
2024-04-28 13:43:06,376:INFO:Initializing Decision Tree Classifier
2024-04-28 13:43:06,376:INFO:Total runtime is 0.004764954249064128 minutes
2024-04-28 13:43:06,378:INFO:SubProcess create_model() called ==================================
2024-04-28 13:43:06,378:INFO:Initializing create_model()
2024-04-28 13:43:06,379:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F0534BB0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249F07DD7F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:43:06,379:INFO:Checking exceptions
2024-04-28 13:43:06,379:INFO:Importing libraries
2024-04-28 13:43:06,379:INFO:Copying training dataset
2024-04-28 13:43:06,382:INFO:Defining folds
2024-04-28 13:43:06,382:INFO:Declaring metric variables
2024-04-28 13:43:06,384:INFO:Importing untrained model
2024-04-28 13:43:06,387:INFO:Decision Tree Classifier Imported successfully
2024-04-28 13:43:06,391:INFO:Starting cross validation
2024-04-28 13:43:06,391:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:43:06,487:INFO:Calculating mean and std
2024-04-28 13:43:06,487:INFO:Creating metrics dataframe
2024-04-28 13:43:06,490:INFO:Uploading results into container
2024-04-28 13:43:06,490:INFO:Uploading model into container now
2024-04-28 13:43:06,490:INFO:_master_model_container: 2
2024-04-28 13:43:06,490:INFO:_display_container: 2
2024-04-28 13:43:06,490:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7773, splitter='best')
2024-04-28 13:43:06,490:INFO:create_model() successfully completed......................................
2024-04-28 13:43:06,639:INFO:SubProcess create_model() end ==================================
2024-04-28 13:43:06,639:INFO:Creating metrics dataframe
2024-04-28 13:43:06,651:INFO:Initializing create_model()
2024-04-28 13:43:06,651:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F0534BB0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7773, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:43:06,651:INFO:Checking exceptions
2024-04-28 13:43:06,652:INFO:Importing libraries
2024-04-28 13:43:06,652:INFO:Copying training dataset
2024-04-28 13:43:06,656:INFO:Defining folds
2024-04-28 13:43:06,656:INFO:Declaring metric variables
2024-04-28 13:43:06,656:INFO:Importing untrained model
2024-04-28 13:43:06,656:INFO:Declaring custom model
2024-04-28 13:43:06,657:INFO:Logistic Regression Imported successfully
2024-04-28 13:43:06,657:INFO:Cross validation set to False
2024-04-28 13:43:06,657:INFO:Fitting Model
2024-04-28 13:43:06,697:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7773, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:43:06,697:INFO:create_model() successfully completed......................................
2024-04-28 13:43:06,845:INFO:Creating Dashboard logs
2024-04-28 13:43:06,847:INFO:Model: Logistic Regression
2024-04-28 13:43:06,860:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 7773, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-04-28 13:43:06,914:INFO:Initializing predict_model()
2024-04-28 13:43:06,914:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F0534BB0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7773, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000249F65EA550>)
2024-04-28 13:43:06,915:INFO:Checking exceptions
2024-04-28 13:43:06,915:INFO:Preloading libraries
2024-04-28 13:43:07,104:INFO:SubProcess plot_model() called ==================================
2024-04-28 13:43:07,104:INFO:Initializing plot_model()
2024-04-28 13:43:07,104:INFO:plot_model(plot=auc, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7773, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmp92bol15j, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F0534BB0>, system=False)
2024-04-28 13:43:07,104:INFO:Checking exceptions
2024-04-28 13:43:07,106:INFO:Preloading libraries
2024-04-28 13:43:07,106:INFO:Copying training dataset
2024-04-28 13:43:07,106:INFO:Plot type: auc
2024-04-28 13:43:07,141:INFO:Fitting Model
2024-04-28 13:43:07,142:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 13:43:07,142:INFO:Scoring test/hold-out set
2024-04-28 13:43:07,156:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmp92bol15j\AUC.png'
2024-04-28 13:43:07,325:INFO:Visual Rendered Successfully
2024-04-28 13:43:07,467:INFO:plot_model() successfully completed......................................
2024-04-28 13:43:07,472:INFO:Initializing plot_model()
2024-04-28 13:43:07,472:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7773, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmp92bol15j, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F0534BB0>, system=False)
2024-04-28 13:43:07,472:INFO:Checking exceptions
2024-04-28 13:43:07,474:INFO:Preloading libraries
2024-04-28 13:43:07,475:INFO:Copying training dataset
2024-04-28 13:43:07,475:INFO:Plot type: confusion_matrix
2024-04-28 13:43:07,511:INFO:Fitting Model
2024-04-28 13:43:07,511:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 13:43:07,511:INFO:Scoring test/hold-out set
2024-04-28 13:43:07,524:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmp92bol15j\Confusion Matrix.png'
2024-04-28 13:43:07,606:INFO:Visual Rendered Successfully
2024-04-28 13:43:07,746:INFO:plot_model() successfully completed......................................
2024-04-28 13:43:07,751:INFO:Initializing plot_model()
2024-04-28 13:43:07,752:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7773, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmp92bol15j, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F0534BB0>, system=False)
2024-04-28 13:43:07,752:INFO:Checking exceptions
2024-04-28 13:43:07,753:INFO:Preloading libraries
2024-04-28 13:43:07,754:INFO:Copying training dataset
2024-04-28 13:43:07,754:INFO:Plot type: feature
2024-04-28 13:43:07,785:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmp92bol15j\Feature Importance.png'
2024-04-28 13:43:07,912:INFO:Visual Rendered Successfully
2024-04-28 13:43:08,066:INFO:plot_model() successfully completed......................................
2024-04-28 13:43:08,071:INFO:SubProcess plot_model() end ==================================
2024-04-28 13:43:08,261:INFO:Creating Dashboard logs
2024-04-28 13:43:08,263:INFO:Model: Decision Tree Classifier
2024-04-28 13:43:08,275:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 7773, 'splitter': 'best'}
2024-04-28 13:43:08,534:INFO:_master_model_container: 2
2024-04-28 13:43:08,534:INFO:_display_container: 2
2024-04-28 13:43:08,534:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7773, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:43:08,534:INFO:compare_models() successfully completed......................................
2024-04-28 13:43:08,535:INFO:Initializing plot_model()
2024-04-28 13:43:08,535:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7773, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F0534BB0>, system=True)
2024-04-28 13:43:08,535:INFO:Checking exceptions
2024-04-28 13:43:08,538:INFO:Preloading libraries
2024-04-28 13:43:08,538:INFO:Copying training dataset
2024-04-28 13:43:08,538:INFO:Plot type: auc
2024-04-28 13:43:08,579:INFO:Fitting Model
2024-04-28 13:43:08,580:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 13:43:08,580:INFO:Scoring test/hold-out set
2024-04-28 13:43:08,595:INFO:Saving 'AUC.png'
2024-04-28 13:43:08,767:INFO:Visual Rendered Successfully
2024-04-28 13:43:08,921:INFO:plot_model() successfully completed......................................
2024-04-28 13:43:08,922:INFO:Initializing plot_model()
2024-04-28 13:43:08,922:INFO:plot_model(plot=pr, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7773, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F0534BB0>, system=True)
2024-04-28 13:43:08,922:INFO:Checking exceptions
2024-04-28 13:43:08,926:INFO:Preloading libraries
2024-04-28 13:43:08,926:INFO:Copying training dataset
2024-04-28 13:43:08,926:INFO:Plot type: pr
2024-04-28 13:43:08,965:INFO:Fitting Model
2024-04-28 13:43:08,965:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 13:43:08,966:INFO:Scoring test/hold-out set
2024-04-28 13:43:08,979:INFO:Saving 'Precision Recall.png'
2024-04-28 13:43:09,130:INFO:Visual Rendered Successfully
2024-04-28 13:43:09,274:INFO:plot_model() successfully completed......................................
2024-04-28 13:43:09,280:INFO:Initializing plot_model()
2024-04-28 13:43:09,280:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7773, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F0534BB0>, system=True)
2024-04-28 13:43:09,280:INFO:Checking exceptions
2024-04-28 13:43:09,283:INFO:Preloading libraries
2024-04-28 13:43:09,283:INFO:Copying training dataset
2024-04-28 13:43:09,283:INFO:Plot type: confusion_matrix
2024-04-28 13:43:09,321:INFO:Fitting Model
2024-04-28 13:43:09,321:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 13:43:09,322:INFO:Scoring test/hold-out set
2024-04-28 13:43:09,336:INFO:Saving 'Confusion Matrix.png'
2024-04-28 13:43:09,418:INFO:Visual Rendered Successfully
2024-04-28 13:43:09,568:INFO:plot_model() successfully completed......................................
2024-04-28 13:43:09,574:INFO:Initializing plot_model()
2024-04-28 13:43:09,574:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7773, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F0534BB0>, system=True)
2024-04-28 13:43:09,574:INFO:Checking exceptions
2024-04-28 13:43:09,577:INFO:Preloading libraries
2024-04-28 13:43:09,578:INFO:Copying training dataset
2024-04-28 13:43:09,578:INFO:Plot type: learning
2024-04-28 13:43:09,616:INFO:Fitting Model
2024-04-28 13:43:12,297:INFO:Saving 'Learning Curve.png'
2024-04-28 13:43:12,463:INFO:Visual Rendered Successfully
2024-04-28 13:43:12,608:INFO:plot_model() successfully completed......................................
2024-04-28 13:43:12,614:INFO:Initializing plot_model()
2024-04-28 13:43:12,614:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7773, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F0534BB0>, system=True)
2024-04-28 13:43:12,614:INFO:Checking exceptions
2024-04-28 13:43:12,617:INFO:Preloading libraries
2024-04-28 13:43:12,617:INFO:Copying training dataset
2024-04-28 13:43:12,617:INFO:Plot type: feature
2024-04-28 13:43:12,649:INFO:Saving 'Feature Importance.png'
2024-04-28 13:43:12,765:INFO:Visual Rendered Successfully
2024-04-28 13:43:12,911:INFO:plot_model() successfully completed......................................
2024-04-28 13:43:12,935:INFO:Initializing predict_model()
2024-04-28 13:43:12,935:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F0534BB0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7773, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000249ED905B80>)
2024-04-28 13:43:12,935:INFO:Checking exceptions
2024-04-28 13:43:12,935:INFO:Preloading libraries
2024-04-28 13:46:04,018:INFO:PyCaret ClassificationExperiment
2024-04-28 13:46:04,018:INFO:Logging name: clf-default-name
2024-04-28 13:46:04,018:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 13:46:04,019:INFO:version 3.2.0
2024-04-28 13:46:04,019:INFO:Initializing setup()
2024-04-28 13:46:04,019:INFO:self.USI: 41c7
2024-04-28 13:46:04,019:INFO:self._variable_keys: {'exp_name_log', 'exp_id', 'target_param', 'seed', 'idx', 'X', 'X_test', 'y_test', 'html_param', 'fold_groups_param', 'X_train', 'y_train', 'gpu_param', '_available_plots', 'log_plots_param', 'USI', 'n_jobs_param', 'data', 'fold_generator', 'fix_imbalance', 'memory', 'y', '_ml_usecase', 'pipeline', 'fold_shuffle_param', 'is_multiclass', 'logging_param', 'gpu_n_jobs_param'}
2024-04-28 13:46:04,019:INFO:Checking environment
2024-04-28 13:46:04,019:INFO:python_version: 3.8.0
2024-04-28 13:46:04,019:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 13:46:04,019:INFO:machine: AMD64
2024-04-28 13:46:04,019:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 13:46:04,023:INFO:Memory: svmem(total=34301427712, available=17920184320, percent=47.8, used=16381243392, free=17920184320)
2024-04-28 13:46:04,023:INFO:Physical Core: 6
2024-04-28 13:46:04,024:INFO:Logical Core: 12
2024-04-28 13:46:04,024:INFO:Checking libraries
2024-04-28 13:46:04,024:INFO:System:
2024-04-28 13:46:04,024:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 13:46:04,024:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 13:46:04,024:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 13:46:04,024:INFO:PyCaret required dependencies:
2024-04-28 13:46:04,024:INFO:                 pip: 24.0
2024-04-28 13:46:04,024:INFO:          setuptools: 69.5.1
2024-04-28 13:46:04,024:INFO:             pycaret: 3.2.0
2024-04-28 13:46:04,024:INFO:             IPython: 8.12.3
2024-04-28 13:46:04,024:INFO:          ipywidgets: 8.1.2
2024-04-28 13:46:04,024:INFO:                tqdm: 4.66.2
2024-04-28 13:46:04,024:INFO:               numpy: 1.24.4
2024-04-28 13:46:04,024:INFO:              pandas: 1.5.3
2024-04-28 13:46:04,024:INFO:              jinja2: 3.1.3
2024-04-28 13:46:04,024:INFO:               scipy: 1.10.1
2024-04-28 13:46:04,024:INFO:              joblib: 1.3.2
2024-04-28 13:46:04,024:INFO:             sklearn: 1.2.0
2024-04-28 13:46:04,024:INFO:                pyod: 1.1.3
2024-04-28 13:46:04,024:INFO:            imblearn: 0.12.2
2024-04-28 13:46:04,024:INFO:   category_encoders: 2.6.3
2024-04-28 13:46:04,024:INFO:            lightgbm: 4.3.0
2024-04-28 13:46:04,024:INFO:               numba: 0.58.1
2024-04-28 13:46:04,024:INFO:            requests: 2.31.0
2024-04-28 13:46:04,024:INFO:          matplotlib: 3.6.0
2024-04-28 13:46:04,024:INFO:          scikitplot: 0.3.7
2024-04-28 13:46:04,024:INFO:         yellowbrick: 1.5
2024-04-28 13:46:04,024:INFO:              plotly: 5.20.0
2024-04-28 13:46:04,024:INFO:    plotly-resampler: Not installed
2024-04-28 13:46:04,025:INFO:             kaleido: 0.2.1
2024-04-28 13:46:04,025:INFO:           schemdraw: 0.15
2024-04-28 13:46:04,025:INFO:         statsmodels: 0.14.1
2024-04-28 13:46:04,025:INFO:              sktime: 0.21.1
2024-04-28 13:46:04,025:INFO:               tbats: 1.1.3
2024-04-28 13:46:04,025:INFO:            pmdarima: 2.0.4
2024-04-28 13:46:04,025:INFO:              psutil: 5.9.8
2024-04-28 13:46:04,025:INFO:          markupsafe: 2.1.5
2024-04-28 13:46:04,025:INFO:             pickle5: Not installed
2024-04-28 13:46:04,025:INFO:         cloudpickle: 3.0.0
2024-04-28 13:46:04,025:INFO:         deprecation: 2.1.0
2024-04-28 13:46:04,025:INFO:              xxhash: 3.4.1
2024-04-28 13:46:04,025:INFO:           wurlitzer: Not installed
2024-04-28 13:46:04,025:INFO:PyCaret optional dependencies:
2024-04-28 13:46:04,025:INFO:                shap: Not installed
2024-04-28 13:46:04,025:INFO:           interpret: Not installed
2024-04-28 13:46:04,025:INFO:                umap: Not installed
2024-04-28 13:46:04,025:INFO:     ydata_profiling: Not installed
2024-04-28 13:46:04,025:INFO:  explainerdashboard: Not installed
2024-04-28 13:46:04,025:INFO:             autoviz: Not installed
2024-04-28 13:46:04,025:INFO:           fairlearn: Not installed
2024-04-28 13:46:04,025:INFO:          deepchecks: Not installed
2024-04-28 13:46:04,025:INFO:             xgboost: Not installed
2024-04-28 13:46:04,025:INFO:            catboost: Not installed
2024-04-28 13:46:04,026:INFO:              kmodes: Not installed
2024-04-28 13:46:04,026:INFO:             mlxtend: Not installed
2024-04-28 13:46:04,026:INFO:       statsforecast: Not installed
2024-04-28 13:46:04,026:INFO:        tune_sklearn: Not installed
2024-04-28 13:46:04,026:INFO:                 ray: Not installed
2024-04-28 13:46:04,026:INFO:            hyperopt: Not installed
2024-04-28 13:46:04,026:INFO:              optuna: Not installed
2024-04-28 13:46:04,026:INFO:               skopt: Not installed
2024-04-28 13:46:04,026:INFO:              mlflow: 2.11.3
2024-04-28 13:46:04,026:INFO:              gradio: Not installed
2024-04-28 13:46:04,026:INFO:             fastapi: Not installed
2024-04-28 13:46:04,026:INFO:             uvicorn: Not installed
2024-04-28 13:46:04,026:INFO:              m2cgen: Not installed
2024-04-28 13:46:04,026:INFO:           evidently: Not installed
2024-04-28 13:46:04,026:INFO:               fugue: Not installed
2024-04-28 13:46:04,026:INFO:           streamlit: 1.33.0
2024-04-28 13:46:04,026:INFO:             prophet: Not installed
2024-04-28 13:46:04,026:INFO:None
2024-04-28 13:46:04,026:INFO:Set up data.
2024-04-28 13:46:04,031:INFO:Set up folding strategy.
2024-04-28 13:46:04,031:INFO:Set up train/test split.
2024-04-28 13:46:04,031:INFO:Set up data.
2024-04-28 13:46:04,034:INFO:Set up index.
2024-04-28 13:46:04,035:INFO:Assigning column types.
2024-04-28 13:46:04,037:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 13:46:04,073:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 13:46:04,074:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:46:04,095:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:04,095:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:04,129:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 13:46:04,130:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:46:04,151:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:04,151:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:04,152:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 13:46:04,187:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:46:04,208:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:04,208:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:04,245:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:46:04,265:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:04,266:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:04,266:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 13:46:04,321:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:04,321:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:04,379:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:04,379:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:04,380:INFO:Preparing preprocessing pipeline...
2024-04-28 13:46:04,381:INFO:Set up simple imputation.
2024-04-28 13:46:04,381:INFO:Set up feature normalization.
2024-04-28 13:46:04,397:INFO:Finished creating preprocessing pipeline.
2024-04-28 13:46:04,400:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-28 13:46:04,400:INFO:Creating final display dataframe.
2024-04-28 13:46:04,450:INFO:Setup _display_container:                     Description             Value
0                    Session id              5221
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              41c7
2024-04-28 13:46:04,513:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:04,513:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:04,569:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:04,569:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:04,570:INFO:setup() successfully completed in 0.55s...............
2024-04-28 13:46:04,570:INFO:Initializing compare_models()
2024-04-28 13:46:04,571:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F96478E0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000249F96478E0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 13:46:04,571:INFO:Checking exceptions
2024-04-28 13:46:04,573:INFO:Preparing display monitor
2024-04-28 13:46:04,589:INFO:Initializing Logistic Regression
2024-04-28 13:46:04,589:INFO:Total runtime is 0.0 minutes
2024-04-28 13:46:04,591:INFO:SubProcess create_model() called ==================================
2024-04-28 13:46:04,591:INFO:Initializing create_model()
2024-04-28 13:46:04,591:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F96478E0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249FA2BA460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:46:04,591:INFO:Checking exceptions
2024-04-28 13:46:04,592:INFO:Importing libraries
2024-04-28 13:46:04,592:INFO:Copying training dataset
2024-04-28 13:46:04,596:INFO:Defining folds
2024-04-28 13:46:04,596:INFO:Declaring metric variables
2024-04-28 13:46:04,598:INFO:Importing untrained model
2024-04-28 13:46:04,600:INFO:Logistic Regression Imported successfully
2024-04-28 13:46:04,604:INFO:Starting cross validation
2024-04-28 13:46:04,605:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:46:04,686:INFO:Calculating mean and std
2024-04-28 13:46:04,686:INFO:Creating metrics dataframe
2024-04-28 13:46:04,690:INFO:Uploading results into container
2024-04-28 13:46:04,690:INFO:Uploading model into container now
2024-04-28 13:46:04,691:INFO:_master_model_container: 1
2024-04-28 13:46:04,691:INFO:_display_container: 2
2024-04-28 13:46:04,691:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5221, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:46:04,691:INFO:create_model() successfully completed......................................
2024-04-28 13:46:04,862:INFO:SubProcess create_model() end ==================================
2024-04-28 13:46:04,862:INFO:Creating metrics dataframe
2024-04-28 13:46:04,867:INFO:Initializing Decision Tree Classifier
2024-04-28 13:46:04,867:INFO:Total runtime is 0.004634388287862142 minutes
2024-04-28 13:46:04,870:INFO:SubProcess create_model() called ==================================
2024-04-28 13:46:04,870:INFO:Initializing create_model()
2024-04-28 13:46:04,870:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F96478E0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249FA2BA460>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:46:04,870:INFO:Checking exceptions
2024-04-28 13:46:04,870:INFO:Importing libraries
2024-04-28 13:46:04,870:INFO:Copying training dataset
2024-04-28 13:46:04,874:INFO:Defining folds
2024-04-28 13:46:04,874:INFO:Declaring metric variables
2024-04-28 13:46:04,876:INFO:Importing untrained model
2024-04-28 13:46:04,878:INFO:Decision Tree Classifier Imported successfully
2024-04-28 13:46:04,882:INFO:Starting cross validation
2024-04-28 13:46:04,883:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:46:05,001:INFO:Calculating mean and std
2024-04-28 13:46:05,001:INFO:Creating metrics dataframe
2024-04-28 13:46:05,004:INFO:Uploading results into container
2024-04-28 13:46:05,005:INFO:Uploading model into container now
2024-04-28 13:46:05,005:INFO:_master_model_container: 2
2024-04-28 13:46:05,005:INFO:_display_container: 2
2024-04-28 13:46:05,005:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5221, splitter='best')
2024-04-28 13:46:05,005:INFO:create_model() successfully completed......................................
2024-04-28 13:46:05,168:INFO:SubProcess create_model() end ==================================
2024-04-28 13:46:05,168:INFO:Creating metrics dataframe
2024-04-28 13:46:05,180:INFO:Initializing create_model()
2024-04-28 13:46:05,180:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F96478E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5221, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:46:05,180:INFO:Checking exceptions
2024-04-28 13:46:05,181:INFO:Importing libraries
2024-04-28 13:46:05,181:INFO:Copying training dataset
2024-04-28 13:46:05,185:INFO:Defining folds
2024-04-28 13:46:05,185:INFO:Declaring metric variables
2024-04-28 13:46:05,185:INFO:Importing untrained model
2024-04-28 13:46:05,185:INFO:Declaring custom model
2024-04-28 13:46:05,185:INFO:Decision Tree Classifier Imported successfully
2024-04-28 13:46:05,186:INFO:Cross validation set to False
2024-04-28 13:46:05,186:INFO:Fitting Model
2024-04-28 13:46:05,234:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5221, splitter='best')
2024-04-28 13:46:05,234:INFO:create_model() successfully completed......................................
2024-04-28 13:46:05,385:INFO:Initializing create_model()
2024-04-28 13:46:05,385:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F96478E0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5221, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:46:05,385:INFO:Checking exceptions
2024-04-28 13:46:05,387:INFO:Importing libraries
2024-04-28 13:46:05,387:INFO:Copying training dataset
2024-04-28 13:46:05,390:INFO:Defining folds
2024-04-28 13:46:05,390:INFO:Declaring metric variables
2024-04-28 13:46:05,390:INFO:Importing untrained model
2024-04-28 13:46:05,390:INFO:Declaring custom model
2024-04-28 13:46:05,391:INFO:Logistic Regression Imported successfully
2024-04-28 13:46:05,391:INFO:Cross validation set to False
2024-04-28 13:46:05,391:INFO:Fitting Model
2024-04-28 13:46:05,407:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5221, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:46:05,407:INFO:create_model() successfully completed......................................
2024-04-28 13:46:05,571:INFO:_master_model_container: 2
2024-04-28 13:46:05,571:INFO:_display_container: 2
2024-04-28 13:46:05,571:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5221, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5221, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-28 13:46:05,572:INFO:compare_models() successfully completed......................................
2024-04-28 13:46:05,572:INFO:Initializing plot_model()
2024-04-28 13:46:05,572:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5221, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F96478E0>, system=True)
2024-04-28 13:46:05,573:INFO:Checking exceptions
2024-04-28 13:46:05,575:INFO:Preloading libraries
2024-04-28 13:46:05,576:INFO:Copying training dataset
2024-04-28 13:46:05,576:INFO:Plot type: parameter
2024-04-28 13:46:05,578:INFO:Visual Rendered Successfully
2024-04-28 13:46:05,731:INFO:plot_model() successfully completed......................................
2024-04-28 13:46:05,751:INFO:Initializing predict_model()
2024-04-28 13:46:05,751:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F96478E0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5221, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000249FA5D9F70>)
2024-04-28 13:46:05,751:INFO:Checking exceptions
2024-04-28 13:46:05,751:INFO:Preloading libraries
2024-04-28 13:46:06,066:INFO:Initializing plot_model()
2024-04-28 13:46:06,066:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5221, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F96478E0>, system=True)
2024-04-28 13:46:06,066:INFO:Checking exceptions
2024-04-28 13:46:06,069:INFO:Preloading libraries
2024-04-28 13:46:06,069:INFO:Copying training dataset
2024-04-28 13:46:06,069:INFO:Plot type: parameter
2024-04-28 13:46:06,072:INFO:Visual Rendered Successfully
2024-04-28 13:46:06,227:INFO:plot_model() successfully completed......................................
2024-04-28 13:46:06,242:INFO:Initializing predict_model()
2024-04-28 13:46:06,243:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F96478E0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5221, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000249FA5D9CA0>)
2024-04-28 13:46:06,243:INFO:Checking exceptions
2024-04-28 13:46:06,243:INFO:Preloading libraries
2024-04-28 13:46:06,547:INFO:Initializing load_model()
2024-04-28 13:46:06,547:INFO:load_model(model_name=./model_kobe, platform=None, authentication=None, verbose=True)
2024-04-28 13:46:06,549:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.0', 'setuptools': '69.5.1', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.0', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.20.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.0', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.0', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.20.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.0', 'machine': 'AMD64'}}
  warnings.warn(

2024-04-28 13:46:06,601:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\mlflow\types\utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-28 13:46:08,583:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_15520\1973998042.py:83: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-28 13:46:08,617:INFO:PyCaret ClassificationExperiment
2024-04-28 13:46:08,617:INFO:Logging name: Projeto Kobe
2024-04-28 13:46:08,618:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 13:46:08,618:INFO:version 3.2.0
2024-04-28 13:46:08,618:INFO:Initializing setup()
2024-04-28 13:46:08,618:INFO:self.USI: ae3f
2024-04-28 13:46:08,618:INFO:self._variable_keys: {'exp_name_log', 'exp_id', 'target_param', 'seed', 'idx', 'X', 'X_test', 'y_test', 'html_param', 'fold_groups_param', 'X_train', 'y_train', 'gpu_param', '_available_plots', 'log_plots_param', 'USI', 'n_jobs_param', 'data', 'fold_generator', 'fix_imbalance', 'memory', 'y', '_ml_usecase', 'pipeline', 'fold_shuffle_param', 'is_multiclass', 'logging_param', 'gpu_n_jobs_param'}
2024-04-28 13:46:08,618:INFO:Checking environment
2024-04-28 13:46:08,618:INFO:python_version: 3.8.0
2024-04-28 13:46:08,618:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 13:46:08,618:INFO:machine: AMD64
2024-04-28 13:46:08,618:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 13:46:08,624:INFO:Memory: svmem(total=34301427712, available=17963327488, percent=47.6, used=16338100224, free=17963327488)
2024-04-28 13:46:08,624:INFO:Physical Core: 6
2024-04-28 13:46:08,624:INFO:Logical Core: 12
2024-04-28 13:46:08,624:INFO:Checking libraries
2024-04-28 13:46:08,624:INFO:System:
2024-04-28 13:46:08,624:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 13:46:08,624:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 13:46:08,624:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 13:46:08,624:INFO:PyCaret required dependencies:
2024-04-28 13:46:08,624:INFO:                 pip: 24.0
2024-04-28 13:46:08,624:INFO:          setuptools: 69.5.1
2024-04-28 13:46:08,624:INFO:             pycaret: 3.2.0
2024-04-28 13:46:08,624:INFO:             IPython: 8.12.3
2024-04-28 13:46:08,624:INFO:          ipywidgets: 8.1.2
2024-04-28 13:46:08,624:INFO:                tqdm: 4.66.2
2024-04-28 13:46:08,624:INFO:               numpy: 1.24.4
2024-04-28 13:46:08,624:INFO:              pandas: 1.5.3
2024-04-28 13:46:08,624:INFO:              jinja2: 3.1.3
2024-04-28 13:46:08,624:INFO:               scipy: 1.10.1
2024-04-28 13:46:08,624:INFO:              joblib: 1.3.2
2024-04-28 13:46:08,624:INFO:             sklearn: 1.2.0
2024-04-28 13:46:08,624:INFO:                pyod: 1.1.3
2024-04-28 13:46:08,625:INFO:            imblearn: 0.12.2
2024-04-28 13:46:08,625:INFO:   category_encoders: 2.6.3
2024-04-28 13:46:08,625:INFO:            lightgbm: 4.3.0
2024-04-28 13:46:08,625:INFO:               numba: 0.58.1
2024-04-28 13:46:08,625:INFO:            requests: 2.31.0
2024-04-28 13:46:08,625:INFO:          matplotlib: 3.6.0
2024-04-28 13:46:08,625:INFO:          scikitplot: 0.3.7
2024-04-28 13:46:08,625:INFO:         yellowbrick: 1.5
2024-04-28 13:46:08,625:INFO:              plotly: 5.20.0
2024-04-28 13:46:08,625:INFO:    plotly-resampler: Not installed
2024-04-28 13:46:08,625:INFO:             kaleido: 0.2.1
2024-04-28 13:46:08,625:INFO:           schemdraw: 0.15
2024-04-28 13:46:08,625:INFO:         statsmodels: 0.14.1
2024-04-28 13:46:08,625:INFO:              sktime: 0.21.1
2024-04-28 13:46:08,625:INFO:               tbats: 1.1.3
2024-04-28 13:46:08,625:INFO:            pmdarima: 2.0.4
2024-04-28 13:46:08,625:INFO:              psutil: 5.9.8
2024-04-28 13:46:08,625:INFO:          markupsafe: 2.1.5
2024-04-28 13:46:08,625:INFO:             pickle5: Not installed
2024-04-28 13:46:08,625:INFO:         cloudpickle: 3.0.0
2024-04-28 13:46:08,625:INFO:         deprecation: 2.1.0
2024-04-28 13:46:08,625:INFO:              xxhash: 3.4.1
2024-04-28 13:46:08,625:INFO:           wurlitzer: Not installed
2024-04-28 13:46:08,625:INFO:PyCaret optional dependencies:
2024-04-28 13:46:08,625:INFO:                shap: Not installed
2024-04-28 13:46:08,625:INFO:           interpret: Not installed
2024-04-28 13:46:08,625:INFO:                umap: Not installed
2024-04-28 13:46:08,625:INFO:     ydata_profiling: Not installed
2024-04-28 13:46:08,625:INFO:  explainerdashboard: Not installed
2024-04-28 13:46:08,625:INFO:             autoviz: Not installed
2024-04-28 13:46:08,625:INFO:           fairlearn: Not installed
2024-04-28 13:46:08,625:INFO:          deepchecks: Not installed
2024-04-28 13:46:08,625:INFO:             xgboost: Not installed
2024-04-28 13:46:08,625:INFO:            catboost: Not installed
2024-04-28 13:46:08,625:INFO:              kmodes: Not installed
2024-04-28 13:46:08,625:INFO:             mlxtend: Not installed
2024-04-28 13:46:08,625:INFO:       statsforecast: Not installed
2024-04-28 13:46:08,625:INFO:        tune_sklearn: Not installed
2024-04-28 13:46:08,626:INFO:                 ray: Not installed
2024-04-28 13:46:08,626:INFO:            hyperopt: Not installed
2024-04-28 13:46:08,626:INFO:              optuna: Not installed
2024-04-28 13:46:08,626:INFO:               skopt: Not installed
2024-04-28 13:46:08,626:INFO:              mlflow: 2.11.3
2024-04-28 13:46:08,626:INFO:              gradio: Not installed
2024-04-28 13:46:08,626:INFO:             fastapi: Not installed
2024-04-28 13:46:08,626:INFO:             uvicorn: Not installed
2024-04-28 13:46:08,626:INFO:              m2cgen: Not installed
2024-04-28 13:46:08,626:INFO:           evidently: Not installed
2024-04-28 13:46:08,626:INFO:               fugue: Not installed
2024-04-28 13:46:08,626:INFO:           streamlit: 1.33.0
2024-04-28 13:46:08,626:INFO:             prophet: Not installed
2024-04-28 13:46:08,626:INFO:None
2024-04-28 13:46:08,626:INFO:Set up data.
2024-04-28 13:46:08,631:INFO:Set up folding strategy.
2024-04-28 13:46:08,631:INFO:Set up train/test split.
2024-04-28 13:46:08,638:INFO:Set up index.
2024-04-28 13:46:08,638:INFO:Assigning column types.
2024-04-28 13:46:08,641:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 13:46:08,674:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 13:46:08,675:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:46:08,696:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:08,696:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:08,730:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 13:46:08,731:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:46:08,751:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:08,752:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:08,752:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 13:46:08,785:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:46:08,807:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:08,807:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:08,842:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:46:08,864:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:08,864:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:08,864:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 13:46:08,924:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:08,925:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:08,982:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:08,982:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:08,983:INFO:Preparing preprocessing pipeline...
2024-04-28 13:46:08,984:INFO:Set up simple imputation.
2024-04-28 13:46:08,996:INFO:Finished creating preprocessing pipeline.
2024-04-28 13:46:08,999:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-04-28 13:46:08,999:INFO:Creating final display dataframe.
2024-04-28 13:46:09,037:INFO:Setup _display_container:                     Description            Value
0                    Session id             1190
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (20285, 7)
4        Transformed data shape       (20285, 7)
5   Transformed train set shape       (14199, 7)
6    Transformed test set shape        (6086, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name     Projeto Kobe
18                          USI             ae3f
2024-04-28 13:46:09,095:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:09,095:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:09,154:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:09,154:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:46:09,154:INFO:Logging experiment in loggers
2024-04-28 13:46:09,189:INFO:SubProcess save_model() called ==================================
2024-04-28 13:46:09,193:INFO:Initializing save_model()
2024-04-28 13:46:09,193:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), model_name=C:\Users\jpsar\AppData\Local\Temp\tmphodixhm3\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-28 13:46:09,193:INFO:Adding model into prep_pipe
2024-04-28 13:46:09,193:WARNING:Only Model saved as it was a pipeline.
2024-04-28 13:46:09,195:INFO:C:\Users\jpsar\AppData\Local\Temp\tmphodixhm3\Transformation Pipeline.pkl saved in current working directory
2024-04-28 13:46:09,197:INFO:Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-04-28 13:46:09,197:INFO:save_model() successfully completed......................................
2024-04-28 13:46:09,350:INFO:SubProcess save_model() end ==================================
2024-04-28 13:46:09,361:INFO:setup() successfully completed in 0.54s...............
2024-04-28 13:46:09,367:INFO:Initializing compare_models()
2024-04-28 13:46:09,367:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F64DE430>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=precision, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000249F64DE430>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'precision', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 13:46:09,367:INFO:Checking exceptions
2024-04-28 13:46:09,370:INFO:Preparing display monitor
2024-04-28 13:46:09,384:INFO:Initializing Logistic Regression
2024-04-28 13:46:09,384:INFO:Total runtime is 0.0 minutes
2024-04-28 13:46:09,386:INFO:SubProcess create_model() called ==================================
2024-04-28 13:46:09,387:INFO:Initializing create_model()
2024-04-28 13:46:09,387:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F64DE430>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249F7D6B880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:46:09,387:INFO:Checking exceptions
2024-04-28 13:46:09,387:INFO:Importing libraries
2024-04-28 13:46:09,387:INFO:Copying training dataset
2024-04-28 13:46:09,391:INFO:Defining folds
2024-04-28 13:46:09,391:INFO:Declaring metric variables
2024-04-28 13:46:09,394:INFO:Importing untrained model
2024-04-28 13:46:09,396:INFO:Logistic Regression Imported successfully
2024-04-28 13:46:09,400:INFO:Starting cross validation
2024-04-28 13:46:09,401:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:46:09,503:INFO:Calculating mean and std
2024-04-28 13:46:09,503:INFO:Creating metrics dataframe
2024-04-28 13:46:09,521:INFO:Uploading results into container
2024-04-28 13:46:09,522:INFO:Uploading model into container now
2024-04-28 13:46:09,522:INFO:_master_model_container: 1
2024-04-28 13:46:09,522:INFO:_display_container: 2
2024-04-28 13:46:09,522:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1190, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:46:09,522:INFO:create_model() successfully completed......................................
2024-04-28 13:46:09,688:INFO:SubProcess create_model() end ==================================
2024-04-28 13:46:09,688:INFO:Creating metrics dataframe
2024-04-28 13:46:09,694:INFO:Initializing Decision Tree Classifier
2024-04-28 13:46:09,694:INFO:Total runtime is 0.005167853832244873 minutes
2024-04-28 13:46:09,696:INFO:SubProcess create_model() called ==================================
2024-04-28 13:46:09,696:INFO:Initializing create_model()
2024-04-28 13:46:09,696:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F64DE430>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249F7D6B880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:46:09,696:INFO:Checking exceptions
2024-04-28 13:46:09,696:INFO:Importing libraries
2024-04-28 13:46:09,697:INFO:Copying training dataset
2024-04-28 13:46:09,700:INFO:Defining folds
2024-04-28 13:46:09,700:INFO:Declaring metric variables
2024-04-28 13:46:09,702:INFO:Importing untrained model
2024-04-28 13:46:09,704:INFO:Decision Tree Classifier Imported successfully
2024-04-28 13:46:09,708:INFO:Starting cross validation
2024-04-28 13:46:09,709:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:46:09,802:INFO:Calculating mean and std
2024-04-28 13:46:09,802:INFO:Creating metrics dataframe
2024-04-28 13:46:09,804:INFO:Uploading results into container
2024-04-28 13:46:09,805:INFO:Uploading model into container now
2024-04-28 13:46:09,805:INFO:_master_model_container: 2
2024-04-28 13:46:09,805:INFO:_display_container: 2
2024-04-28 13:46:09,805:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1190, splitter='best')
2024-04-28 13:46:09,805:INFO:create_model() successfully completed......................................
2024-04-28 13:46:09,959:INFO:SubProcess create_model() end ==================================
2024-04-28 13:46:09,959:INFO:Creating metrics dataframe
2024-04-28 13:46:09,971:INFO:Initializing create_model()
2024-04-28 13:46:09,971:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F64DE430>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1190, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:46:09,971:INFO:Checking exceptions
2024-04-28 13:46:09,972:INFO:Importing libraries
2024-04-28 13:46:09,972:INFO:Copying training dataset
2024-04-28 13:46:09,976:INFO:Defining folds
2024-04-28 13:46:09,976:INFO:Declaring metric variables
2024-04-28 13:46:09,976:INFO:Importing untrained model
2024-04-28 13:46:09,976:INFO:Declaring custom model
2024-04-28 13:46:09,976:INFO:Logistic Regression Imported successfully
2024-04-28 13:46:09,977:INFO:Cross validation set to False
2024-04-28 13:46:09,977:INFO:Fitting Model
2024-04-28 13:46:10,009:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1190, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:46:10,009:INFO:create_model() successfully completed......................................
2024-04-28 13:46:10,163:INFO:Creating Dashboard logs
2024-04-28 13:46:10,165:INFO:Model: Logistic Regression
2024-04-28 13:46:10,178:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 1190, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-04-28 13:46:10,232:INFO:Initializing predict_model()
2024-04-28 13:46:10,232:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F64DE430>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1190, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000249F0AED9D0>)
2024-04-28 13:46:10,232:INFO:Checking exceptions
2024-04-28 13:46:10,232:INFO:Preloading libraries
2024-04-28 13:46:10,432:INFO:SubProcess plot_model() called ==================================
2024-04-28 13:46:10,433:INFO:Initializing plot_model()
2024-04-28 13:46:10,433:INFO:plot_model(plot=auc, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1190, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmpnyw5z505, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F64DE430>, system=False)
2024-04-28 13:46:10,433:INFO:Checking exceptions
2024-04-28 13:46:10,434:INFO:Preloading libraries
2024-04-28 13:46:10,434:INFO:Copying training dataset
2024-04-28 13:46:10,434:INFO:Plot type: auc
2024-04-28 13:46:10,470:INFO:Fitting Model
2024-04-28 13:46:10,470:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 13:46:10,471:INFO:Scoring test/hold-out set
2024-04-28 13:46:10,485:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmpnyw5z505\AUC.png'
2024-04-28 13:46:10,660:INFO:Visual Rendered Successfully
2024-04-28 13:46:10,814:INFO:plot_model() successfully completed......................................
2024-04-28 13:46:10,820:INFO:Initializing plot_model()
2024-04-28 13:46:10,820:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1190, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmpnyw5z505, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F64DE430>, system=False)
2024-04-28 13:46:10,820:INFO:Checking exceptions
2024-04-28 13:46:10,822:INFO:Preloading libraries
2024-04-28 13:46:10,822:INFO:Copying training dataset
2024-04-28 13:46:10,822:INFO:Plot type: confusion_matrix
2024-04-28 13:46:10,860:INFO:Fitting Model
2024-04-28 13:46:10,860:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 13:46:10,860:INFO:Scoring test/hold-out set
2024-04-28 13:46:10,874:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmpnyw5z505\Confusion Matrix.png'
2024-04-28 13:46:10,956:INFO:Visual Rendered Successfully
2024-04-28 13:46:11,106:INFO:plot_model() successfully completed......................................
2024-04-28 13:46:11,111:INFO:Initializing plot_model()
2024-04-28 13:46:11,111:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1190, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmpnyw5z505, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F64DE430>, system=False)
2024-04-28 13:46:11,111:INFO:Checking exceptions
2024-04-28 13:46:11,113:INFO:Preloading libraries
2024-04-28 13:46:11,113:INFO:Copying training dataset
2024-04-28 13:46:11,113:INFO:Plot type: feature
2024-04-28 13:46:11,143:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmpnyw5z505\Feature Importance.png'
2024-04-28 13:46:11,257:INFO:Visual Rendered Successfully
2024-04-28 13:46:11,423:INFO:plot_model() successfully completed......................................
2024-04-28 13:46:11,429:INFO:SubProcess plot_model() end ==================================
2024-04-28 13:46:11,634:INFO:Creating Dashboard logs
2024-04-28 13:46:11,637:INFO:Model: Decision Tree Classifier
2024-04-28 13:46:11,649:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 1190, 'splitter': 'best'}
2024-04-28 13:46:11,919:INFO:_master_model_container: 2
2024-04-28 13:46:11,920:INFO:_display_container: 2
2024-04-28 13:46:11,920:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1190, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:46:11,920:INFO:compare_models() successfully completed......................................
2024-04-28 13:46:11,921:INFO:Initializing plot_model()
2024-04-28 13:46:11,921:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1190, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F64DE430>, system=True)
2024-04-28 13:46:11,921:INFO:Checking exceptions
2024-04-28 13:46:11,924:INFO:Preloading libraries
2024-04-28 13:46:11,924:INFO:Copying training dataset
2024-04-28 13:46:11,924:INFO:Plot type: auc
2024-04-28 13:46:11,962:INFO:Fitting Model
2024-04-28 13:46:11,963:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 13:46:11,963:INFO:Scoring test/hold-out set
2024-04-28 13:46:11,978:INFO:Saving 'AUC.png'
2024-04-28 13:46:12,146:INFO:Visual Rendered Successfully
2024-04-28 13:46:12,301:INFO:plot_model() successfully completed......................................
2024-04-28 13:46:12,303:INFO:Initializing plot_model()
2024-04-28 13:46:12,303:INFO:plot_model(plot=pr, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1190, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F64DE430>, system=True)
2024-04-28 13:46:12,303:INFO:Checking exceptions
2024-04-28 13:46:12,306:INFO:Preloading libraries
2024-04-28 13:46:12,306:INFO:Copying training dataset
2024-04-28 13:46:12,306:INFO:Plot type: pr
2024-04-28 13:46:12,344:INFO:Fitting Model
2024-04-28 13:46:12,344:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 13:46:12,345:INFO:Scoring test/hold-out set
2024-04-28 13:46:12,358:INFO:Saving 'Precision Recall.png'
2024-04-28 13:46:12,512:INFO:Visual Rendered Successfully
2024-04-28 13:46:12,675:INFO:plot_model() successfully completed......................................
2024-04-28 13:46:12,677:INFO:Initializing plot_model()
2024-04-28 13:46:12,677:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1190, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F64DE430>, system=True)
2024-04-28 13:46:12,677:INFO:Checking exceptions
2024-04-28 13:46:12,681:INFO:Preloading libraries
2024-04-28 13:46:12,681:INFO:Copying training dataset
2024-04-28 13:46:12,681:INFO:Plot type: confusion_matrix
2024-04-28 13:46:12,720:INFO:Fitting Model
2024-04-28 13:46:12,720:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 13:46:12,721:INFO:Scoring test/hold-out set
2024-04-28 13:46:12,734:INFO:Saving 'Confusion Matrix.png'
2024-04-28 13:46:12,818:INFO:Visual Rendered Successfully
2024-04-28 13:46:12,980:INFO:plot_model() successfully completed......................................
2024-04-28 13:46:12,987:INFO:Initializing plot_model()
2024-04-28 13:46:12,987:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1190, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F64DE430>, system=True)
2024-04-28 13:46:12,987:INFO:Checking exceptions
2024-04-28 13:46:12,990:INFO:Preloading libraries
2024-04-28 13:46:12,990:INFO:Copying training dataset
2024-04-28 13:46:12,990:INFO:Plot type: learning
2024-04-28 13:46:13,028:INFO:Fitting Model
2024-04-28 13:46:15,651:INFO:Saving 'Learning Curve.png'
2024-04-28 13:46:15,810:INFO:Visual Rendered Successfully
2024-04-28 13:46:15,976:INFO:plot_model() successfully completed......................................
2024-04-28 13:46:15,981:INFO:Initializing plot_model()
2024-04-28 13:46:15,981:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1190, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F64DE430>, system=True)
2024-04-28 13:46:15,981:INFO:Checking exceptions
2024-04-28 13:46:15,985:INFO:Preloading libraries
2024-04-28 13:46:15,985:INFO:Copying training dataset
2024-04-28 13:46:15,985:INFO:Plot type: feature
2024-04-28 13:46:16,016:INFO:Saving 'Feature Importance.png'
2024-04-28 13:46:16,131:INFO:Visual Rendered Successfully
2024-04-28 13:46:16,298:INFO:plot_model() successfully completed......................................
2024-04-28 13:46:16,333:INFO:Initializing predict_model()
2024-04-28 13:46:16,333:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F64DE430>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1190, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000249F83BE3A0>)
2024-04-28 13:46:16,334:INFO:Checking exceptions
2024-04-28 13:46:16,334:INFO:Preloading libraries
2024-04-28 14:07:11,344:INFO:PyCaret ClassificationExperiment
2024-04-28 14:07:11,344:INFO:Logging name: clf-default-name
2024-04-28 14:07:11,344:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 14:07:11,344:INFO:version 3.2.0
2024-04-28 14:07:11,344:INFO:Initializing setup()
2024-04-28 14:07:11,344:INFO:self.USI: d732
2024-04-28 14:07:11,344:INFO:self._variable_keys: {'exp_name_log', 'exp_id', 'target_param', 'seed', 'idx', 'X', 'X_test', 'y_test', 'html_param', 'fold_groups_param', 'X_train', 'y_train', 'gpu_param', '_available_plots', 'log_plots_param', 'USI', 'n_jobs_param', 'data', 'fold_generator', 'fix_imbalance', 'memory', 'y', '_ml_usecase', 'pipeline', 'fold_shuffle_param', 'is_multiclass', 'logging_param', 'gpu_n_jobs_param'}
2024-04-28 14:07:11,345:INFO:Checking environment
2024-04-28 14:07:11,345:INFO:python_version: 3.8.0
2024-04-28 14:07:11,345:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 14:07:11,345:INFO:machine: AMD64
2024-04-28 14:07:11,345:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 14:07:11,353:INFO:Memory: svmem(total=34301427712, available=19242278912, percent=43.9, used=15059148800, free=19242278912)
2024-04-28 14:07:11,353:INFO:Physical Core: 6
2024-04-28 14:07:11,353:INFO:Logical Core: 12
2024-04-28 14:07:11,353:INFO:Checking libraries
2024-04-28 14:07:11,353:INFO:System:
2024-04-28 14:07:11,353:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 14:07:11,353:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 14:07:11,353:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 14:07:11,353:INFO:PyCaret required dependencies:
2024-04-28 14:07:11,354:INFO:                 pip: 24.0
2024-04-28 14:07:11,354:INFO:          setuptools: 69.5.1
2024-04-28 14:07:11,354:INFO:             pycaret: 3.2.0
2024-04-28 14:07:11,354:INFO:             IPython: 8.12.3
2024-04-28 14:07:11,354:INFO:          ipywidgets: 8.1.2
2024-04-28 14:07:11,354:INFO:                tqdm: 4.66.2
2024-04-28 14:07:11,354:INFO:               numpy: 1.24.4
2024-04-28 14:07:11,354:INFO:              pandas: 1.5.3
2024-04-28 14:07:11,354:INFO:              jinja2: 3.1.3
2024-04-28 14:07:11,354:INFO:               scipy: 1.10.1
2024-04-28 14:07:11,354:INFO:              joblib: 1.3.2
2024-04-28 14:07:11,354:INFO:             sklearn: 1.2.0
2024-04-28 14:07:11,354:INFO:                pyod: 1.1.3
2024-04-28 14:07:11,354:INFO:            imblearn: 0.12.2
2024-04-28 14:07:11,354:INFO:   category_encoders: 2.6.3
2024-04-28 14:07:11,354:INFO:            lightgbm: 4.3.0
2024-04-28 14:07:11,354:INFO:               numba: 0.58.1
2024-04-28 14:07:11,354:INFO:            requests: 2.31.0
2024-04-28 14:07:11,354:INFO:          matplotlib: 3.6.0
2024-04-28 14:07:11,354:INFO:          scikitplot: 0.3.7
2024-04-28 14:07:11,354:INFO:         yellowbrick: 1.5
2024-04-28 14:07:11,354:INFO:              plotly: 5.20.0
2024-04-28 14:07:11,354:INFO:    plotly-resampler: Not installed
2024-04-28 14:07:11,355:INFO:             kaleido: 0.2.1
2024-04-28 14:07:11,355:INFO:           schemdraw: 0.15
2024-04-28 14:07:11,355:INFO:         statsmodels: 0.14.1
2024-04-28 14:07:11,355:INFO:              sktime: 0.21.1
2024-04-28 14:07:11,355:INFO:               tbats: 1.1.3
2024-04-28 14:07:11,355:INFO:            pmdarima: 2.0.4
2024-04-28 14:07:11,355:INFO:              psutil: 5.9.8
2024-04-28 14:07:11,355:INFO:          markupsafe: 2.1.5
2024-04-28 14:07:11,355:INFO:             pickle5: Not installed
2024-04-28 14:07:11,355:INFO:         cloudpickle: 3.0.0
2024-04-28 14:07:11,355:INFO:         deprecation: 2.1.0
2024-04-28 14:07:11,355:INFO:              xxhash: 3.4.1
2024-04-28 14:07:11,355:INFO:           wurlitzer: Not installed
2024-04-28 14:07:11,355:INFO:PyCaret optional dependencies:
2024-04-28 14:07:11,355:INFO:                shap: Not installed
2024-04-28 14:07:11,355:INFO:           interpret: Not installed
2024-04-28 14:07:11,355:INFO:                umap: Not installed
2024-04-28 14:07:11,355:INFO:     ydata_profiling: Not installed
2024-04-28 14:07:11,355:INFO:  explainerdashboard: Not installed
2024-04-28 14:07:11,355:INFO:             autoviz: Not installed
2024-04-28 14:07:11,355:INFO:           fairlearn: Not installed
2024-04-28 14:07:11,355:INFO:          deepchecks: Not installed
2024-04-28 14:07:11,355:INFO:             xgboost: Not installed
2024-04-28 14:07:11,355:INFO:            catboost: Not installed
2024-04-28 14:07:11,356:INFO:              kmodes: Not installed
2024-04-28 14:07:11,356:INFO:             mlxtend: Not installed
2024-04-28 14:07:11,356:INFO:       statsforecast: Not installed
2024-04-28 14:07:11,356:INFO:        tune_sklearn: Not installed
2024-04-28 14:07:11,356:INFO:                 ray: Not installed
2024-04-28 14:07:11,356:INFO:            hyperopt: Not installed
2024-04-28 14:07:11,356:INFO:              optuna: Not installed
2024-04-28 14:07:11,356:INFO:               skopt: Not installed
2024-04-28 14:07:11,356:INFO:              mlflow: 2.11.3
2024-04-28 14:07:11,356:INFO:              gradio: Not installed
2024-04-28 14:07:11,356:INFO:             fastapi: Not installed
2024-04-28 14:07:11,356:INFO:             uvicorn: Not installed
2024-04-28 14:07:11,356:INFO:              m2cgen: Not installed
2024-04-28 14:07:11,356:INFO:           evidently: Not installed
2024-04-28 14:07:11,356:INFO:               fugue: Not installed
2024-04-28 14:07:11,356:INFO:           streamlit: 1.33.0
2024-04-28 14:07:11,356:INFO:             prophet: Not installed
2024-04-28 14:07:11,356:INFO:None
2024-04-28 14:07:11,356:INFO:Set up data.
2024-04-28 14:07:11,364:INFO:Set up folding strategy.
2024-04-28 14:07:11,364:INFO:Set up train/test split.
2024-04-28 14:07:11,364:INFO:Set up data.
2024-04-28 14:07:11,369:INFO:Set up index.
2024-04-28 14:07:11,369:INFO:Assigning column types.
2024-04-28 14:07:11,373:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 14:07:11,419:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 14:07:11,420:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 14:07:11,441:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:11,441:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:11,475:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 14:07:11,476:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 14:07:11,497:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:11,497:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:11,497:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 14:07:11,530:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 14:07:11,552:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:11,552:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:11,588:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 14:07:11,609:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:11,609:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:11,609:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 14:07:11,667:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:11,667:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:11,721:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:11,721:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:11,722:INFO:Preparing preprocessing pipeline...
2024-04-28 14:07:11,723:INFO:Set up simple imputation.
2024-04-28 14:07:11,723:INFO:Set up feature normalization.
2024-04-28 14:07:11,749:INFO:Finished creating preprocessing pipeline.
2024-04-28 14:07:11,752:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-28 14:07:11,752:INFO:Creating final display dataframe.
2024-04-28 14:07:11,801:INFO:Setup _display_container:                     Description             Value
0                    Session id              2676
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              d732
2024-04-28 14:07:11,862:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:11,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:11,917:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:11,917:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:11,918:INFO:setup() successfully completed in 0.58s...............
2024-04-28 14:07:11,919:INFO:Initializing compare_models()
2024-04-28 14:07:11,919:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7CD71C0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7CD71C0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 14:07:11,919:INFO:Checking exceptions
2024-04-28 14:07:11,921:INFO:Preparing display monitor
2024-04-28 14:07:11,934:INFO:Initializing Logistic Regression
2024-04-28 14:07:11,934:INFO:Total runtime is 0.0 minutes
2024-04-28 14:07:11,936:INFO:SubProcess create_model() called ==================================
2024-04-28 14:07:11,936:INFO:Initializing create_model()
2024-04-28 14:07:11,936:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7CD71C0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249F467B850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 14:07:11,937:INFO:Checking exceptions
2024-04-28 14:07:11,937:INFO:Importing libraries
2024-04-28 14:07:11,937:INFO:Copying training dataset
2024-04-28 14:07:11,941:INFO:Defining folds
2024-04-28 14:07:11,941:INFO:Declaring metric variables
2024-04-28 14:07:11,944:INFO:Importing untrained model
2024-04-28 14:07:11,947:INFO:Logistic Regression Imported successfully
2024-04-28 14:07:11,952:INFO:Starting cross validation
2024-04-28 14:07:11,953:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 14:07:18,602:INFO:Calculating mean and std
2024-04-28 14:07:18,605:INFO:Creating metrics dataframe
2024-04-28 14:07:18,610:INFO:Uploading results into container
2024-04-28 14:07:18,611:INFO:Uploading model into container now
2024-04-28 14:07:18,611:INFO:_master_model_container: 1
2024-04-28 14:07:18,612:INFO:_display_container: 2
2024-04-28 14:07:18,612:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2676, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 14:07:18,612:INFO:create_model() successfully completed......................................
2024-04-28 14:07:18,861:INFO:SubProcess create_model() end ==================================
2024-04-28 14:07:18,861:INFO:Creating metrics dataframe
2024-04-28 14:07:18,867:INFO:Initializing Decision Tree Classifier
2024-04-28 14:07:18,867:INFO:Total runtime is 0.11555943489074708 minutes
2024-04-28 14:07:18,869:INFO:SubProcess create_model() called ==================================
2024-04-28 14:07:18,869:INFO:Initializing create_model()
2024-04-28 14:07:18,869:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7CD71C0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249F467B850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 14:07:18,869:INFO:Checking exceptions
2024-04-28 14:07:18,869:INFO:Importing libraries
2024-04-28 14:07:18,870:INFO:Copying training dataset
2024-04-28 14:07:18,874:INFO:Defining folds
2024-04-28 14:07:18,874:INFO:Declaring metric variables
2024-04-28 14:07:18,876:INFO:Importing untrained model
2024-04-28 14:07:18,879:INFO:Decision Tree Classifier Imported successfully
2024-04-28 14:07:18,883:INFO:Starting cross validation
2024-04-28 14:07:18,884:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 14:07:20,257:INFO:Calculating mean and std
2024-04-28 14:07:20,259:INFO:Creating metrics dataframe
2024-04-28 14:07:20,265:INFO:Uploading results into container
2024-04-28 14:07:20,266:INFO:Uploading model into container now
2024-04-28 14:07:20,266:INFO:_master_model_container: 2
2024-04-28 14:07:20,266:INFO:_display_container: 2
2024-04-28 14:07:20,267:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2676, splitter='best')
2024-04-28 14:07:20,267:INFO:create_model() successfully completed......................................
2024-04-28 14:07:20,462:INFO:SubProcess create_model() end ==================================
2024-04-28 14:07:20,462:INFO:Creating metrics dataframe
2024-04-28 14:07:20,475:INFO:Initializing create_model()
2024-04-28 14:07:20,475:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7CD71C0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2676, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 14:07:20,475:INFO:Checking exceptions
2024-04-28 14:07:20,476:INFO:Importing libraries
2024-04-28 14:07:20,476:INFO:Copying training dataset
2024-04-28 14:07:20,480:INFO:Defining folds
2024-04-28 14:07:20,480:INFO:Declaring metric variables
2024-04-28 14:07:20,480:INFO:Importing untrained model
2024-04-28 14:07:20,480:INFO:Declaring custom model
2024-04-28 14:07:20,480:INFO:Decision Tree Classifier Imported successfully
2024-04-28 14:07:20,481:INFO:Cross validation set to False
2024-04-28 14:07:20,481:INFO:Fitting Model
2024-04-28 14:07:20,529:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2676, splitter='best')
2024-04-28 14:07:20,530:INFO:create_model() successfully completed......................................
2024-04-28 14:07:20,692:INFO:Initializing create_model()
2024-04-28 14:07:20,692:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7CD71C0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2676, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 14:07:20,692:INFO:Checking exceptions
2024-04-28 14:07:20,694:INFO:Importing libraries
2024-04-28 14:07:20,694:INFO:Copying training dataset
2024-04-28 14:07:20,697:INFO:Defining folds
2024-04-28 14:07:20,697:INFO:Declaring metric variables
2024-04-28 14:07:20,697:INFO:Importing untrained model
2024-04-28 14:07:20,698:INFO:Declaring custom model
2024-04-28 14:07:20,698:INFO:Logistic Regression Imported successfully
2024-04-28 14:07:20,698:INFO:Cross validation set to False
2024-04-28 14:07:20,698:INFO:Fitting Model
2024-04-28 14:07:20,712:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2676, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 14:07:20,712:INFO:create_model() successfully completed......................................
2024-04-28 14:07:20,898:INFO:_master_model_container: 2
2024-04-28 14:07:20,898:INFO:_display_container: 2
2024-04-28 14:07:20,898:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2676, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2676, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-28 14:07:20,898:INFO:compare_models() successfully completed......................................
2024-04-28 14:07:20,899:INFO:Initializing plot_model()
2024-04-28 14:07:20,899:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2676, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7CD71C0>, system=True)
2024-04-28 14:07:20,899:INFO:Checking exceptions
2024-04-28 14:07:20,902:INFO:Preloading libraries
2024-04-28 14:07:20,903:INFO:Copying training dataset
2024-04-28 14:07:20,903:INFO:Plot type: parameter
2024-04-28 14:07:20,907:INFO:Visual Rendered Successfully
2024-04-28 14:07:21,075:INFO:plot_model() successfully completed......................................
2024-04-28 14:07:21,098:INFO:Initializing predict_model()
2024-04-28 14:07:21,098:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7CD71C0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2676, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000249F95074C0>)
2024-04-28 14:07:21,098:INFO:Checking exceptions
2024-04-28 14:07:21,098:INFO:Preloading libraries
2024-04-28 14:07:21,405:INFO:Initializing plot_model()
2024-04-28 14:07:21,405:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2676, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7CD71C0>, system=True)
2024-04-28 14:07:21,405:INFO:Checking exceptions
2024-04-28 14:07:21,408:INFO:Preloading libraries
2024-04-28 14:07:21,408:INFO:Copying training dataset
2024-04-28 14:07:21,408:INFO:Plot type: parameter
2024-04-28 14:07:21,410:INFO:Visual Rendered Successfully
2024-04-28 14:07:21,566:INFO:plot_model() successfully completed......................................
2024-04-28 14:07:21,581:INFO:Initializing predict_model()
2024-04-28 14:07:21,581:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7CD71C0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2676, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000249F0AED9D0>)
2024-04-28 14:07:21,581:INFO:Checking exceptions
2024-04-28 14:07:21,581:INFO:Preloading libraries
2024-04-28 14:07:21,892:INFO:Initializing load_model()
2024-04-28 14:07:21,892:INFO:load_model(model_name=./model_kobe, platform=None, authentication=None, verbose=True)
2024-04-28 14:07:21,894:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.0', 'setuptools': '69.5.1', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.0', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.20.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.0', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '19.2.3', 'setuptools': '41.2.0', 'pycaret': '3.2.0', 'IPython': '8.12.3', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.0', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.20.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.8.0', 'machine': 'AMD64'}}
  warnings.warn(

2024-04-28 14:07:21,946:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\mlflow\types\utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-28 14:07:24,126:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_15520\1973998042.py:83: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-28 14:07:24,160:INFO:PyCaret ClassificationExperiment
2024-04-28 14:07:24,160:INFO:Logging name: Projeto Kobe
2024-04-28 14:07:24,160:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 14:07:24,160:INFO:version 3.2.0
2024-04-28 14:07:24,160:INFO:Initializing setup()
2024-04-28 14:07:24,160:INFO:self.USI: bdcb
2024-04-28 14:07:24,160:INFO:self._variable_keys: {'exp_name_log', 'exp_id', 'target_param', 'seed', 'idx', 'X', 'X_test', 'y_test', 'html_param', 'fold_groups_param', 'X_train', 'y_train', 'gpu_param', '_available_plots', 'log_plots_param', 'USI', 'n_jobs_param', 'data', 'fold_generator', 'fix_imbalance', 'memory', 'y', '_ml_usecase', 'pipeline', 'fold_shuffle_param', 'is_multiclass', 'logging_param', 'gpu_n_jobs_param'}
2024-04-28 14:07:24,160:INFO:Checking environment
2024-04-28 14:07:24,160:INFO:python_version: 3.8.0
2024-04-28 14:07:24,160:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 14:07:24,160:INFO:machine: AMD64
2024-04-28 14:07:24,160:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 14:07:24,167:INFO:Memory: svmem(total=34301427712, available=17905385472, percent=47.8, used=16396042240, free=17905385472)
2024-04-28 14:07:24,167:INFO:Physical Core: 6
2024-04-28 14:07:24,167:INFO:Logical Core: 12
2024-04-28 14:07:24,167:INFO:Checking libraries
2024-04-28 14:07:24,167:INFO:System:
2024-04-28 14:07:24,167:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 14:07:24,167:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 14:07:24,167:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 14:07:24,167:INFO:PyCaret required dependencies:
2024-04-28 14:07:24,168:INFO:                 pip: 24.0
2024-04-28 14:07:24,168:INFO:          setuptools: 69.5.1
2024-04-28 14:07:24,168:INFO:             pycaret: 3.2.0
2024-04-28 14:07:24,168:INFO:             IPython: 8.12.3
2024-04-28 14:07:24,168:INFO:          ipywidgets: 8.1.2
2024-04-28 14:07:24,168:INFO:                tqdm: 4.66.2
2024-04-28 14:07:24,168:INFO:               numpy: 1.24.4
2024-04-28 14:07:24,168:INFO:              pandas: 1.5.3
2024-04-28 14:07:24,168:INFO:              jinja2: 3.1.3
2024-04-28 14:07:24,168:INFO:               scipy: 1.10.1
2024-04-28 14:07:24,168:INFO:              joblib: 1.3.2
2024-04-28 14:07:24,168:INFO:             sklearn: 1.2.0
2024-04-28 14:07:24,168:INFO:                pyod: 1.1.3
2024-04-28 14:07:24,168:INFO:            imblearn: 0.12.2
2024-04-28 14:07:24,168:INFO:   category_encoders: 2.6.3
2024-04-28 14:07:24,168:INFO:            lightgbm: 4.3.0
2024-04-28 14:07:24,168:INFO:               numba: 0.58.1
2024-04-28 14:07:24,168:INFO:            requests: 2.31.0
2024-04-28 14:07:24,168:INFO:          matplotlib: 3.6.0
2024-04-28 14:07:24,168:INFO:          scikitplot: 0.3.7
2024-04-28 14:07:24,168:INFO:         yellowbrick: 1.5
2024-04-28 14:07:24,168:INFO:              plotly: 5.20.0
2024-04-28 14:07:24,168:INFO:    plotly-resampler: Not installed
2024-04-28 14:07:24,168:INFO:             kaleido: 0.2.1
2024-04-28 14:07:24,168:INFO:           schemdraw: 0.15
2024-04-28 14:07:24,168:INFO:         statsmodels: 0.14.1
2024-04-28 14:07:24,168:INFO:              sktime: 0.21.1
2024-04-28 14:07:24,168:INFO:               tbats: 1.1.3
2024-04-28 14:07:24,169:INFO:            pmdarima: 2.0.4
2024-04-28 14:07:24,169:INFO:              psutil: 5.9.8
2024-04-28 14:07:24,169:INFO:          markupsafe: 2.1.5
2024-04-28 14:07:24,169:INFO:             pickle5: Not installed
2024-04-28 14:07:24,169:INFO:         cloudpickle: 3.0.0
2024-04-28 14:07:24,169:INFO:         deprecation: 2.1.0
2024-04-28 14:07:24,169:INFO:              xxhash: 3.4.1
2024-04-28 14:07:24,169:INFO:           wurlitzer: Not installed
2024-04-28 14:07:24,169:INFO:PyCaret optional dependencies:
2024-04-28 14:07:24,169:INFO:                shap: Not installed
2024-04-28 14:07:24,169:INFO:           interpret: Not installed
2024-04-28 14:07:24,169:INFO:                umap: Not installed
2024-04-28 14:07:24,169:INFO:     ydata_profiling: Not installed
2024-04-28 14:07:24,169:INFO:  explainerdashboard: Not installed
2024-04-28 14:07:24,169:INFO:             autoviz: Not installed
2024-04-28 14:07:24,169:INFO:           fairlearn: Not installed
2024-04-28 14:07:24,169:INFO:          deepchecks: Not installed
2024-04-28 14:07:24,169:INFO:             xgboost: Not installed
2024-04-28 14:07:24,169:INFO:            catboost: Not installed
2024-04-28 14:07:24,169:INFO:              kmodes: Not installed
2024-04-28 14:07:24,169:INFO:             mlxtend: Not installed
2024-04-28 14:07:24,169:INFO:       statsforecast: Not installed
2024-04-28 14:07:24,169:INFO:        tune_sklearn: Not installed
2024-04-28 14:07:24,169:INFO:                 ray: Not installed
2024-04-28 14:07:24,169:INFO:            hyperopt: Not installed
2024-04-28 14:07:24,169:INFO:              optuna: Not installed
2024-04-28 14:07:24,169:INFO:               skopt: Not installed
2024-04-28 14:07:24,169:INFO:              mlflow: 2.11.3
2024-04-28 14:07:24,169:INFO:              gradio: Not installed
2024-04-28 14:07:24,169:INFO:             fastapi: Not installed
2024-04-28 14:07:24,169:INFO:             uvicorn: Not installed
2024-04-28 14:07:24,169:INFO:              m2cgen: Not installed
2024-04-28 14:07:24,169:INFO:           evidently: Not installed
2024-04-28 14:07:24,169:INFO:               fugue: Not installed
2024-04-28 14:07:24,169:INFO:           streamlit: 1.33.0
2024-04-28 14:07:24,169:INFO:             prophet: Not installed
2024-04-28 14:07:24,170:INFO:None
2024-04-28 14:07:24,170:INFO:Set up data.
2024-04-28 14:07:24,175:INFO:Set up folding strategy.
2024-04-28 14:07:24,175:INFO:Set up train/test split.
2024-04-28 14:07:24,183:INFO:Set up index.
2024-04-28 14:07:24,183:INFO:Assigning column types.
2024-04-28 14:07:24,186:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 14:07:24,219:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 14:07:24,220:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 14:07:24,242:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:24,242:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:24,275:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 14:07:24,275:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 14:07:24,296:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:24,296:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:24,296:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 14:07:24,330:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 14:07:24,351:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:24,351:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:24,386:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 14:07:24,406:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:24,407:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:24,407:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 14:07:24,465:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:24,465:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:24,521:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:24,521:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:24,523:INFO:Preparing preprocessing pipeline...
2024-04-28 14:07:24,524:INFO:Set up simple imputation.
2024-04-28 14:07:24,535:INFO:Finished creating preprocessing pipeline.
2024-04-28 14:07:24,538:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-04-28 14:07:24,538:INFO:Creating final display dataframe.
2024-04-28 14:07:24,577:INFO:Setup _display_container:                     Description            Value
0                    Session id             1846
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (20285, 7)
4        Transformed data shape       (20285, 7)
5   Transformed train set shape       (14199, 7)
6    Transformed test set shape        (6086, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name     Projeto Kobe
18                          USI             bdcb
2024-04-28 14:07:24,636:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:24,637:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:24,692:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:24,692:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:07:24,693:INFO:Logging experiment in loggers
2024-04-28 14:07:24,727:INFO:SubProcess save_model() called ==================================
2024-04-28 14:07:24,732:INFO:Initializing save_model()
2024-04-28 14:07:24,732:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), model_name=C:\Users\jpsar\AppData\Local\Temp\tmpg18ojyfd\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-28 14:07:24,732:INFO:Adding model into prep_pipe
2024-04-28 14:07:24,732:WARNING:Only Model saved as it was a pipeline.
2024-04-28 14:07:24,733:INFO:C:\Users\jpsar\AppData\Local\Temp\tmpg18ojyfd\Transformation Pipeline.pkl saved in current working directory
2024-04-28 14:07:24,735:INFO:Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-04-28 14:07:24,736:INFO:save_model() successfully completed......................................
2024-04-28 14:07:24,894:INFO:SubProcess save_model() end ==================================
2024-04-28 14:07:24,905:INFO:setup() successfully completed in 0.53s...............
2024-04-28 14:07:24,911:INFO:Initializing compare_models()
2024-04-28 14:07:24,911:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F809B970>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=precision, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000249F809B970>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'precision', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 14:07:24,912:INFO:Checking exceptions
2024-04-28 14:07:24,915:INFO:Preparing display monitor
2024-04-28 14:07:24,929:INFO:Initializing Logistic Regression
2024-04-28 14:07:24,929:INFO:Total runtime is 0.0 minutes
2024-04-28 14:07:24,931:INFO:SubProcess create_model() called ==================================
2024-04-28 14:07:24,931:INFO:Initializing create_model()
2024-04-28 14:07:24,931:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F809B970>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249F9532580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 14:07:24,931:INFO:Checking exceptions
2024-04-28 14:07:24,931:INFO:Importing libraries
2024-04-28 14:07:24,931:INFO:Copying training dataset
2024-04-28 14:07:24,935:INFO:Defining folds
2024-04-28 14:07:24,935:INFO:Declaring metric variables
2024-04-28 14:07:24,938:INFO:Importing untrained model
2024-04-28 14:07:24,940:INFO:Logistic Regression Imported successfully
2024-04-28 14:07:24,944:INFO:Starting cross validation
2024-04-28 14:07:24,945:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 14:07:25,045:INFO:Calculating mean and std
2024-04-28 14:07:25,045:INFO:Creating metrics dataframe
2024-04-28 14:07:25,049:INFO:Uploading results into container
2024-04-28 14:07:25,049:INFO:Uploading model into container now
2024-04-28 14:07:25,050:INFO:_master_model_container: 1
2024-04-28 14:07:25,050:INFO:_display_container: 2
2024-04-28 14:07:25,050:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1846, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 14:07:25,050:INFO:create_model() successfully completed......................................
2024-04-28 14:07:25,222:INFO:SubProcess create_model() end ==================================
2024-04-28 14:07:25,222:INFO:Creating metrics dataframe
2024-04-28 14:07:25,228:INFO:Initializing Decision Tree Classifier
2024-04-28 14:07:25,228:INFO:Total runtime is 0.004984505971272786 minutes
2024-04-28 14:07:25,230:INFO:SubProcess create_model() called ==================================
2024-04-28 14:07:25,230:INFO:Initializing create_model()
2024-04-28 14:07:25,230:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F809B970>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249F9532580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 14:07:25,231:INFO:Checking exceptions
2024-04-28 14:07:25,231:INFO:Importing libraries
2024-04-28 14:07:25,231:INFO:Copying training dataset
2024-04-28 14:07:25,234:INFO:Defining folds
2024-04-28 14:07:25,234:INFO:Declaring metric variables
2024-04-28 14:07:25,237:INFO:Importing untrained model
2024-04-28 14:07:25,239:INFO:Decision Tree Classifier Imported successfully
2024-04-28 14:07:25,243:INFO:Starting cross validation
2024-04-28 14:07:25,244:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 14:07:25,343:INFO:Calculating mean and std
2024-04-28 14:07:25,343:INFO:Creating metrics dataframe
2024-04-28 14:07:25,345:INFO:Uploading results into container
2024-04-28 14:07:25,346:INFO:Uploading model into container now
2024-04-28 14:07:25,346:INFO:_master_model_container: 2
2024-04-28 14:07:25,346:INFO:_display_container: 2
2024-04-28 14:07:25,346:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1846, splitter='best')
2024-04-28 14:07:25,346:INFO:create_model() successfully completed......................................
2024-04-28 14:07:25,504:INFO:SubProcess create_model() end ==================================
2024-04-28 14:07:25,504:INFO:Creating metrics dataframe
2024-04-28 14:07:25,515:INFO:Initializing create_model()
2024-04-28 14:07:25,515:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F809B970>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1846, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 14:07:25,515:INFO:Checking exceptions
2024-04-28 14:07:25,516:INFO:Importing libraries
2024-04-28 14:07:25,516:INFO:Copying training dataset
2024-04-28 14:07:25,520:INFO:Defining folds
2024-04-28 14:07:25,520:INFO:Declaring metric variables
2024-04-28 14:07:25,520:INFO:Importing untrained model
2024-04-28 14:07:25,520:INFO:Declaring custom model
2024-04-28 14:07:25,520:INFO:Logistic Regression Imported successfully
2024-04-28 14:07:25,521:INFO:Cross validation set to False
2024-04-28 14:07:25,521:INFO:Fitting Model
2024-04-28 14:07:25,555:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1846, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 14:07:25,556:INFO:create_model() successfully completed......................................
2024-04-28 14:07:25,722:INFO:Creating Dashboard logs
2024-04-28 14:07:25,724:INFO:Model: Logistic Regression
2024-04-28 14:07:25,746:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 1846, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-04-28 14:07:25,816:INFO:Initializing predict_model()
2024-04-28 14:07:25,817:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F809B970>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1846, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000249F0BB1310>)
2024-04-28 14:07:25,817:INFO:Checking exceptions
2024-04-28 14:07:25,817:INFO:Preloading libraries
2024-04-28 14:07:26,023:INFO:SubProcess plot_model() called ==================================
2024-04-28 14:07:26,023:INFO:Initializing plot_model()
2024-04-28 14:07:26,023:INFO:plot_model(plot=auc, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1846, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmp0hk9z32u, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F809B970>, system=False)
2024-04-28 14:07:26,023:INFO:Checking exceptions
2024-04-28 14:07:26,025:INFO:Preloading libraries
2024-04-28 14:07:26,025:INFO:Copying training dataset
2024-04-28 14:07:26,025:INFO:Plot type: auc
2024-04-28 14:07:26,064:INFO:Fitting Model
2024-04-28 14:07:26,064:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 14:07:26,065:INFO:Scoring test/hold-out set
2024-04-28 14:07:26,080:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmp0hk9z32u\AUC.png'
2024-04-28 14:07:26,250:INFO:Visual Rendered Successfully
2024-04-28 14:07:26,411:INFO:plot_model() successfully completed......................................
2024-04-28 14:07:26,416:INFO:Initializing plot_model()
2024-04-28 14:07:26,417:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1846, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmp0hk9z32u, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F809B970>, system=False)
2024-04-28 14:07:26,417:INFO:Checking exceptions
2024-04-28 14:07:26,419:INFO:Preloading libraries
2024-04-28 14:07:26,419:INFO:Copying training dataset
2024-04-28 14:07:26,419:INFO:Plot type: confusion_matrix
2024-04-28 14:07:26,455:INFO:Fitting Model
2024-04-28 14:07:26,455:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 14:07:26,456:INFO:Scoring test/hold-out set
2024-04-28 14:07:26,469:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmp0hk9z32u\Confusion Matrix.png'
2024-04-28 14:07:26,553:INFO:Visual Rendered Successfully
2024-04-28 14:07:26,722:INFO:plot_model() successfully completed......................................
2024-04-28 14:07:26,728:INFO:Initializing plot_model()
2024-04-28 14:07:26,728:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1846, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmp0hk9z32u, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F809B970>, system=False)
2024-04-28 14:07:26,728:INFO:Checking exceptions
2024-04-28 14:07:26,730:INFO:Preloading libraries
2024-04-28 14:07:26,730:INFO:Copying training dataset
2024-04-28 14:07:26,730:INFO:Plot type: feature
2024-04-28 14:07:26,765:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmp0hk9z32u\Feature Importance.png'
2024-04-28 14:07:26,880:INFO:Visual Rendered Successfully
2024-04-28 14:07:27,037:INFO:plot_model() successfully completed......................................
2024-04-28 14:07:27,042:INFO:SubProcess plot_model() end ==================================
2024-04-28 14:07:27,252:INFO:Creating Dashboard logs
2024-04-28 14:07:27,255:INFO:Model: Decision Tree Classifier
2024-04-28 14:07:27,268:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 1846, 'splitter': 'best'}
2024-04-28 14:07:27,534:INFO:_master_model_container: 2
2024-04-28 14:07:27,534:INFO:_display_container: 2
2024-04-28 14:07:27,534:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1846, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 14:07:27,534:INFO:compare_models() successfully completed......................................
2024-04-28 14:07:27,535:INFO:Initializing plot_model()
2024-04-28 14:07:27,535:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1846, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F809B970>, system=True)
2024-04-28 14:07:27,535:INFO:Checking exceptions
2024-04-28 14:07:27,538:INFO:Preloading libraries
2024-04-28 14:07:27,538:INFO:Copying training dataset
2024-04-28 14:07:27,538:INFO:Plot type: auc
2024-04-28 14:07:27,575:INFO:Fitting Model
2024-04-28 14:07:27,575:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 14:07:27,576:INFO:Scoring test/hold-out set
2024-04-28 14:07:27,590:INFO:Saving 'AUC.png'
2024-04-28 14:07:27,768:INFO:Visual Rendered Successfully
2024-04-28 14:07:27,927:INFO:plot_model() successfully completed......................................
2024-04-28 14:07:27,933:INFO:Initializing plot_model()
2024-04-28 14:07:27,933:INFO:plot_model(plot=pr, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1846, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F809B970>, system=True)
2024-04-28 14:07:27,933:INFO:Checking exceptions
2024-04-28 14:07:27,936:INFO:Preloading libraries
2024-04-28 14:07:27,936:INFO:Copying training dataset
2024-04-28 14:07:27,936:INFO:Plot type: pr
2024-04-28 14:07:27,974:INFO:Fitting Model
2024-04-28 14:07:27,974:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 14:07:27,975:INFO:Scoring test/hold-out set
2024-04-28 14:07:27,988:INFO:Saving 'Precision Recall.png'
2024-04-28 14:07:28,143:INFO:Visual Rendered Successfully
2024-04-28 14:07:28,313:INFO:plot_model() successfully completed......................................
2024-04-28 14:07:28,315:INFO:Initializing plot_model()
2024-04-28 14:07:28,315:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1846, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F809B970>, system=True)
2024-04-28 14:07:28,315:INFO:Checking exceptions
2024-04-28 14:07:28,318:INFO:Preloading libraries
2024-04-28 14:07:28,318:INFO:Copying training dataset
2024-04-28 14:07:28,319:INFO:Plot type: confusion_matrix
2024-04-28 14:07:28,358:INFO:Fitting Model
2024-04-28 14:07:28,358:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 14:07:28,358:INFO:Scoring test/hold-out set
2024-04-28 14:07:28,372:INFO:Saving 'Confusion Matrix.png'
2024-04-28 14:07:28,457:INFO:Visual Rendered Successfully
2024-04-28 14:07:28,613:INFO:plot_model() successfully completed......................................
2024-04-28 14:07:28,619:INFO:Initializing plot_model()
2024-04-28 14:07:28,619:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1846, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F809B970>, system=True)
2024-04-28 14:07:28,619:INFO:Checking exceptions
2024-04-28 14:07:28,622:INFO:Preloading libraries
2024-04-28 14:07:28,623:INFO:Copying training dataset
2024-04-28 14:07:28,623:INFO:Plot type: learning
2024-04-28 14:07:28,660:INFO:Fitting Model
2024-04-28 14:07:31,085:INFO:Saving 'Learning Curve.png'
2024-04-28 14:07:31,240:INFO:Visual Rendered Successfully
2024-04-28 14:07:31,399:INFO:plot_model() successfully completed......................................
2024-04-28 14:07:31,404:INFO:Initializing plot_model()
2024-04-28 14:07:31,405:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1846, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F809B970>, system=True)
2024-04-28 14:07:31,405:INFO:Checking exceptions
2024-04-28 14:07:31,408:INFO:Preloading libraries
2024-04-28 14:07:31,408:INFO:Copying training dataset
2024-04-28 14:07:31,408:INFO:Plot type: feature
2024-04-28 14:07:31,440:INFO:Saving 'Feature Importance.png'
2024-04-28 14:07:31,553:INFO:Visual Rendered Successfully
2024-04-28 14:07:31,718:INFO:plot_model() successfully completed......................................
2024-04-28 14:07:31,753:INFO:Initializing predict_model()
2024-04-28 14:07:31,754:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F809B970>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1846, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000249FA6C9550>)
2024-04-28 14:07:31,754:INFO:Checking exceptions
2024-04-28 14:07:31,754:INFO:Preloading libraries
2024-04-28 14:07:31,966:INFO:Initializing save_model()
2024-04-28 14:07:31,966:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1846, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=./model_kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-28 14:07:31,967:INFO:Adding model into prep_pipe
2024-04-28 14:07:31,968:INFO:./model_kobe.pkl saved in current working directory
2024-04-28 14:07:31,971:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=1846,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-04-28 14:07:31,971:INFO:save_model() successfully completed......................................
2024-04-28 14:07:32,128:INFO:Initializing load_model()
2024-04-28 14:07:32,128:INFO:load_model(model_name=./model_kobe, platform=None, authentication=None, verbose=True)
2024-04-28 14:07:32,192:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\mlflow\types\utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-28 14:07:34,176:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_15520\2127829727.py:28: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-28 14:07:34,179:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_15520\2127829727.py:29: FutureWarning: ``mlflow.tracking.client.MlflowClient.transition_model_version_stage`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  client.transition_model_version_stage(

2024-04-28 14:58:37,187:INFO:PyCaret ClassificationExperiment
2024-04-28 14:58:37,187:INFO:Logging name: clf-default-name
2024-04-28 14:58:37,187:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 14:58:37,187:INFO:version 3.2.0
2024-04-28 14:58:37,187:INFO:Initializing setup()
2024-04-28 14:58:37,187:INFO:self.USI: 0c39
2024-04-28 14:58:37,187:INFO:self._variable_keys: {'exp_name_log', 'exp_id', 'target_param', 'seed', 'idx', 'X', 'X_test', 'y_test', 'html_param', 'fold_groups_param', 'X_train', 'y_train', 'gpu_param', '_available_plots', 'log_plots_param', 'USI', 'n_jobs_param', 'data', 'fold_generator', 'fix_imbalance', 'memory', 'y', '_ml_usecase', 'pipeline', 'fold_shuffle_param', 'is_multiclass', 'logging_param', 'gpu_n_jobs_param'}
2024-04-28 14:58:37,187:INFO:Checking environment
2024-04-28 14:58:37,187:INFO:python_version: 3.8.0
2024-04-28 14:58:37,187:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 14:58:37,187:INFO:machine: AMD64
2024-04-28 14:58:37,187:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 14:58:37,192:INFO:Memory: svmem(total=34301427712, available=18554572800, percent=45.9, used=15746854912, free=18554572800)
2024-04-28 14:58:37,192:INFO:Physical Core: 6
2024-04-28 14:58:37,192:INFO:Logical Core: 12
2024-04-28 14:58:37,193:INFO:Checking libraries
2024-04-28 14:58:37,193:INFO:System:
2024-04-28 14:58:37,193:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 14:58:37,193:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 14:58:37,193:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 14:58:37,193:INFO:PyCaret required dependencies:
2024-04-28 14:58:37,193:INFO:                 pip: 24.0
2024-04-28 14:58:37,193:INFO:          setuptools: 69.5.1
2024-04-28 14:58:37,193:INFO:             pycaret: 3.2.0
2024-04-28 14:58:37,193:INFO:             IPython: 8.12.3
2024-04-28 14:58:37,193:INFO:          ipywidgets: 8.1.2
2024-04-28 14:58:37,193:INFO:                tqdm: 4.66.2
2024-04-28 14:58:37,193:INFO:               numpy: 1.24.4
2024-04-28 14:58:37,193:INFO:              pandas: 1.5.3
2024-04-28 14:58:37,193:INFO:              jinja2: 3.1.3
2024-04-28 14:58:37,193:INFO:               scipy: 1.10.1
2024-04-28 14:58:37,193:INFO:              joblib: 1.3.2
2024-04-28 14:58:37,193:INFO:             sklearn: 1.2.0
2024-04-28 14:58:37,193:INFO:                pyod: 1.1.3
2024-04-28 14:58:37,193:INFO:            imblearn: 0.12.2
2024-04-28 14:58:37,193:INFO:   category_encoders: 2.6.3
2024-04-28 14:58:37,193:INFO:            lightgbm: 4.3.0
2024-04-28 14:58:37,193:INFO:               numba: 0.58.1
2024-04-28 14:58:37,193:INFO:            requests: 2.31.0
2024-04-28 14:58:37,193:INFO:          matplotlib: 3.6.0
2024-04-28 14:58:37,193:INFO:          scikitplot: 0.3.7
2024-04-28 14:58:37,193:INFO:         yellowbrick: 1.5
2024-04-28 14:58:37,193:INFO:              plotly: 5.20.0
2024-04-28 14:58:37,193:INFO:    plotly-resampler: Not installed
2024-04-28 14:58:37,193:INFO:             kaleido: 0.2.1
2024-04-28 14:58:37,193:INFO:           schemdraw: 0.15
2024-04-28 14:58:37,193:INFO:         statsmodels: 0.14.1
2024-04-28 14:58:37,193:INFO:              sktime: 0.21.1
2024-04-28 14:58:37,193:INFO:               tbats: 1.1.3
2024-04-28 14:58:37,193:INFO:            pmdarima: 2.0.4
2024-04-28 14:58:37,193:INFO:              psutil: 5.9.8
2024-04-28 14:58:37,193:INFO:          markupsafe: 2.1.5
2024-04-28 14:58:37,194:INFO:             pickle5: Not installed
2024-04-28 14:58:37,194:INFO:         cloudpickle: 3.0.0
2024-04-28 14:58:37,194:INFO:         deprecation: 2.1.0
2024-04-28 14:58:37,194:INFO:              xxhash: 3.4.1
2024-04-28 14:58:37,194:INFO:           wurlitzer: Not installed
2024-04-28 14:58:37,194:INFO:PyCaret optional dependencies:
2024-04-28 14:58:37,194:INFO:                shap: Not installed
2024-04-28 14:58:37,194:INFO:           interpret: Not installed
2024-04-28 14:58:37,194:INFO:                umap: Not installed
2024-04-28 14:58:37,194:INFO:     ydata_profiling: Not installed
2024-04-28 14:58:37,194:INFO:  explainerdashboard: Not installed
2024-04-28 14:58:37,194:INFO:             autoviz: Not installed
2024-04-28 14:58:37,194:INFO:           fairlearn: Not installed
2024-04-28 14:58:37,194:INFO:          deepchecks: Not installed
2024-04-28 14:58:37,194:INFO:             xgboost: Not installed
2024-04-28 14:58:37,194:INFO:            catboost: Not installed
2024-04-28 14:58:37,194:INFO:              kmodes: Not installed
2024-04-28 14:58:37,194:INFO:             mlxtend: Not installed
2024-04-28 14:58:37,194:INFO:       statsforecast: Not installed
2024-04-28 14:58:37,194:INFO:        tune_sklearn: Not installed
2024-04-28 14:58:37,194:INFO:                 ray: Not installed
2024-04-28 14:58:37,194:INFO:            hyperopt: Not installed
2024-04-28 14:58:37,194:INFO:              optuna: Not installed
2024-04-28 14:58:37,194:INFO:               skopt: Not installed
2024-04-28 14:58:37,194:INFO:              mlflow: 2.11.3
2024-04-28 14:58:37,194:INFO:              gradio: Not installed
2024-04-28 14:58:37,194:INFO:             fastapi: Not installed
2024-04-28 14:58:37,194:INFO:             uvicorn: Not installed
2024-04-28 14:58:37,194:INFO:              m2cgen: Not installed
2024-04-28 14:58:37,194:INFO:           evidently: Not installed
2024-04-28 14:58:37,194:INFO:               fugue: Not installed
2024-04-28 14:58:37,194:INFO:           streamlit: 1.33.0
2024-04-28 14:58:37,194:INFO:             prophet: Not installed
2024-04-28 14:58:37,194:INFO:None
2024-04-28 14:58:37,194:INFO:Set up data.
2024-04-28 14:58:37,199:INFO:Set up folding strategy.
2024-04-28 14:58:37,199:INFO:Set up train/test split.
2024-04-28 14:58:37,199:INFO:Set up data.
2024-04-28 14:58:37,202:INFO:Set up index.
2024-04-28 14:58:37,203:INFO:Assigning column types.
2024-04-28 14:58:37,205:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 14:58:37,239:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 14:58:37,240:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 14:58:37,261:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:37,262:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:37,296:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 14:58:37,296:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 14:58:37,317:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:37,318:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:37,318:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 14:58:37,353:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 14:58:37,375:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:37,375:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:37,409:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 14:58:37,429:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:37,430:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:37,430:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 14:58:37,483:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:37,484:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:37,537:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:37,538:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:37,538:INFO:Preparing preprocessing pipeline...
2024-04-28 14:58:37,539:INFO:Set up simple imputation.
2024-04-28 14:58:37,539:INFO:Set up feature normalization.
2024-04-28 14:58:37,554:INFO:Finished creating preprocessing pipeline.
2024-04-28 14:58:37,557:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-28 14:58:37,557:INFO:Creating final display dataframe.
2024-04-28 14:58:37,605:INFO:Setup _display_container:                     Description             Value
0                    Session id              8276
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              0c39
2024-04-28 14:58:37,666:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:37,666:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:37,720:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:37,720:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:37,721:INFO:setup() successfully completed in 0.53s...............
2024-04-28 14:58:37,722:INFO:Initializing compare_models()
2024-04-28 14:58:37,722:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7CD78B0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7CD78B0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 14:58:37,722:INFO:Checking exceptions
2024-04-28 14:58:37,724:INFO:Preparing display monitor
2024-04-28 14:58:37,738:INFO:Initializing Logistic Regression
2024-04-28 14:58:37,738:INFO:Total runtime is 0.0 minutes
2024-04-28 14:58:37,740:INFO:SubProcess create_model() called ==================================
2024-04-28 14:58:37,740:INFO:Initializing create_model()
2024-04-28 14:58:37,740:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7CD78B0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249F8315AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 14:58:37,740:INFO:Checking exceptions
2024-04-28 14:58:37,740:INFO:Importing libraries
2024-04-28 14:58:37,741:INFO:Copying training dataset
2024-04-28 14:58:37,745:INFO:Defining folds
2024-04-28 14:58:37,745:INFO:Declaring metric variables
2024-04-28 14:58:37,747:INFO:Importing untrained model
2024-04-28 14:58:37,749:INFO:Logistic Regression Imported successfully
2024-04-28 14:58:37,753:INFO:Starting cross validation
2024-04-28 14:58:37,754:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 14:58:40,170:INFO:Calculating mean and std
2024-04-28 14:58:40,173:INFO:Creating metrics dataframe
2024-04-28 14:58:40,179:INFO:Uploading results into container
2024-04-28 14:58:40,180:INFO:Uploading model into container now
2024-04-28 14:58:40,180:INFO:_master_model_container: 1
2024-04-28 14:58:40,181:INFO:_display_container: 2
2024-04-28 14:58:40,181:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8276, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 14:58:40,181:INFO:create_model() successfully completed......................................
2024-04-28 14:58:40,438:INFO:SubProcess create_model() end ==================================
2024-04-28 14:58:40,438:INFO:Creating metrics dataframe
2024-04-28 14:58:40,446:INFO:Initializing Decision Tree Classifier
2024-04-28 14:58:40,446:INFO:Total runtime is 0.04512830177942912 minutes
2024-04-28 14:58:40,448:INFO:SubProcess create_model() called ==================================
2024-04-28 14:58:40,449:INFO:Initializing create_model()
2024-04-28 14:58:40,449:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7CD78B0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249F8315AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 14:58:40,449:INFO:Checking exceptions
2024-04-28 14:58:40,449:INFO:Importing libraries
2024-04-28 14:58:40,449:INFO:Copying training dataset
2024-04-28 14:58:40,453:INFO:Defining folds
2024-04-28 14:58:40,453:INFO:Declaring metric variables
2024-04-28 14:58:40,456:INFO:Importing untrained model
2024-04-28 14:58:40,458:INFO:Decision Tree Classifier Imported successfully
2024-04-28 14:58:40,462:INFO:Starting cross validation
2024-04-28 14:58:40,462:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 14:58:41,762:INFO:Calculating mean and std
2024-04-28 14:58:41,764:INFO:Creating metrics dataframe
2024-04-28 14:58:41,769:INFO:Uploading results into container
2024-04-28 14:58:41,770:INFO:Uploading model into container now
2024-04-28 14:58:41,770:INFO:_master_model_container: 2
2024-04-28 14:58:41,770:INFO:_display_container: 2
2024-04-28 14:58:41,770:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8276, splitter='best')
2024-04-28 14:58:41,771:INFO:create_model() successfully completed......................................
2024-04-28 14:58:41,936:INFO:SubProcess create_model() end ==================================
2024-04-28 14:58:41,936:INFO:Creating metrics dataframe
2024-04-28 14:58:41,948:INFO:Initializing create_model()
2024-04-28 14:58:41,948:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7CD78B0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8276, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 14:58:41,948:INFO:Checking exceptions
2024-04-28 14:58:41,949:INFO:Importing libraries
2024-04-28 14:58:41,949:INFO:Copying training dataset
2024-04-28 14:58:41,953:INFO:Defining folds
2024-04-28 14:58:41,953:INFO:Declaring metric variables
2024-04-28 14:58:41,953:INFO:Importing untrained model
2024-04-28 14:58:41,953:INFO:Declaring custom model
2024-04-28 14:58:41,954:INFO:Decision Tree Classifier Imported successfully
2024-04-28 14:58:41,954:INFO:Cross validation set to False
2024-04-28 14:58:41,954:INFO:Fitting Model
2024-04-28 14:58:42,002:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8276, splitter='best')
2024-04-28 14:58:42,003:INFO:create_model() successfully completed......................................
2024-04-28 14:58:42,156:INFO:Initializing create_model()
2024-04-28 14:58:42,157:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7CD78B0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8276, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 14:58:42,157:INFO:Checking exceptions
2024-04-28 14:58:42,158:INFO:Importing libraries
2024-04-28 14:58:42,158:INFO:Copying training dataset
2024-04-28 14:58:42,162:INFO:Defining folds
2024-04-28 14:58:42,162:INFO:Declaring metric variables
2024-04-28 14:58:42,162:INFO:Importing untrained model
2024-04-28 14:58:42,162:INFO:Declaring custom model
2024-04-28 14:58:42,162:INFO:Logistic Regression Imported successfully
2024-04-28 14:58:42,163:INFO:Cross validation set to False
2024-04-28 14:58:42,163:INFO:Fitting Model
2024-04-28 14:58:42,177:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8276, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 14:58:42,177:INFO:create_model() successfully completed......................................
2024-04-28 14:58:42,346:INFO:_master_model_container: 2
2024-04-28 14:58:42,346:INFO:_display_container: 2
2024-04-28 14:58:42,347:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8276, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8276, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-28 14:58:42,347:INFO:compare_models() successfully completed......................................
2024-04-28 14:58:42,348:INFO:Initializing plot_model()
2024-04-28 14:58:42,348:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8276, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7CD78B0>, system=True)
2024-04-28 14:58:42,348:INFO:Checking exceptions
2024-04-28 14:58:42,353:INFO:Preloading libraries
2024-04-28 14:58:42,354:INFO:Copying training dataset
2024-04-28 14:58:42,354:INFO:Plot type: parameter
2024-04-28 14:58:42,357:INFO:Visual Rendered Successfully
2024-04-28 14:58:42,521:INFO:plot_model() successfully completed......................................
2024-04-28 14:58:42,540:INFO:Initializing predict_model()
2024-04-28 14:58:42,540:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7CD78B0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8276, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000249F2E28F70>)
2024-04-28 14:58:42,540:INFO:Checking exceptions
2024-04-28 14:58:42,540:INFO:Preloading libraries
2024-04-28 14:58:42,836:INFO:Initializing plot_model()
2024-04-28 14:58:42,836:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8276, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7CD78B0>, system=True)
2024-04-28 14:58:42,836:INFO:Checking exceptions
2024-04-28 14:58:42,839:INFO:Preloading libraries
2024-04-28 14:58:42,839:INFO:Copying training dataset
2024-04-28 14:58:42,839:INFO:Plot type: parameter
2024-04-28 14:58:42,841:INFO:Visual Rendered Successfully
2024-04-28 14:58:42,995:INFO:plot_model() successfully completed......................................
2024-04-28 14:58:43,010:INFO:Initializing predict_model()
2024-04-28 14:58:43,010:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7CD78B0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8276, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000249F0040040>)
2024-04-28 14:58:43,010:INFO:Checking exceptions
2024-04-28 14:58:43,010:INFO:Preloading libraries
2024-04-28 14:58:43,296:INFO:Initializing load_model()
2024-04-28 14:58:43,296:INFO:load_model(model_name=./model_kobe, platform=None, authentication=None, verbose=True)
2024-04-28 14:58:43,345:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\mlflow\types\utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-28 14:58:45,299:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_15520\1973998042.py:83: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-28 14:58:45,327:INFO:PyCaret ClassificationExperiment
2024-04-28 14:58:45,327:INFO:Logging name: Projeto Kobe
2024-04-28 14:58:45,327:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 14:58:45,327:INFO:version 3.2.0
2024-04-28 14:58:45,327:INFO:Initializing setup()
2024-04-28 14:58:45,327:INFO:self.USI: 6813
2024-04-28 14:58:45,327:INFO:self._variable_keys: {'exp_name_log', 'exp_id', 'target_param', 'seed', 'idx', 'X', 'X_test', 'y_test', 'html_param', 'fold_groups_param', 'X_train', 'y_train', 'gpu_param', '_available_plots', 'log_plots_param', 'USI', 'n_jobs_param', 'data', 'fold_generator', 'fix_imbalance', 'memory', 'y', '_ml_usecase', 'pipeline', 'fold_shuffle_param', 'is_multiclass', 'logging_param', 'gpu_n_jobs_param'}
2024-04-28 14:58:45,327:INFO:Checking environment
2024-04-28 14:58:45,327:INFO:python_version: 3.8.0
2024-04-28 14:58:45,327:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 14:58:45,327:INFO:machine: AMD64
2024-04-28 14:58:45,327:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 14:58:45,334:INFO:Memory: svmem(total=34301427712, available=17140596736, percent=50.0, used=17160830976, free=17140596736)
2024-04-28 14:58:45,334:INFO:Physical Core: 6
2024-04-28 14:58:45,334:INFO:Logical Core: 12
2024-04-28 14:58:45,334:INFO:Checking libraries
2024-04-28 14:58:45,334:INFO:System:
2024-04-28 14:58:45,335:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 14:58:45,335:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 14:58:45,335:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 14:58:45,335:INFO:PyCaret required dependencies:
2024-04-28 14:58:45,335:INFO:                 pip: 24.0
2024-04-28 14:58:45,335:INFO:          setuptools: 69.5.1
2024-04-28 14:58:45,335:INFO:             pycaret: 3.2.0
2024-04-28 14:58:45,335:INFO:             IPython: 8.12.3
2024-04-28 14:58:45,335:INFO:          ipywidgets: 8.1.2
2024-04-28 14:58:45,335:INFO:                tqdm: 4.66.2
2024-04-28 14:58:45,335:INFO:               numpy: 1.24.4
2024-04-28 14:58:45,335:INFO:              pandas: 1.5.3
2024-04-28 14:58:45,335:INFO:              jinja2: 3.1.3
2024-04-28 14:58:45,335:INFO:               scipy: 1.10.1
2024-04-28 14:58:45,335:INFO:              joblib: 1.3.2
2024-04-28 14:58:45,335:INFO:             sklearn: 1.2.0
2024-04-28 14:58:45,335:INFO:                pyod: 1.1.3
2024-04-28 14:58:45,335:INFO:            imblearn: 0.12.2
2024-04-28 14:58:45,335:INFO:   category_encoders: 2.6.3
2024-04-28 14:58:45,335:INFO:            lightgbm: 4.3.0
2024-04-28 14:58:45,335:INFO:               numba: 0.58.1
2024-04-28 14:58:45,335:INFO:            requests: 2.31.0
2024-04-28 14:58:45,335:INFO:          matplotlib: 3.6.0
2024-04-28 14:58:45,335:INFO:          scikitplot: 0.3.7
2024-04-28 14:58:45,335:INFO:         yellowbrick: 1.5
2024-04-28 14:58:45,335:INFO:              plotly: 5.20.0
2024-04-28 14:58:45,335:INFO:    plotly-resampler: Not installed
2024-04-28 14:58:45,335:INFO:             kaleido: 0.2.1
2024-04-28 14:58:45,335:INFO:           schemdraw: 0.15
2024-04-28 14:58:45,335:INFO:         statsmodels: 0.14.1
2024-04-28 14:58:45,335:INFO:              sktime: 0.21.1
2024-04-28 14:58:45,335:INFO:               tbats: 1.1.3
2024-04-28 14:58:45,335:INFO:            pmdarima: 2.0.4
2024-04-28 14:58:45,335:INFO:              psutil: 5.9.8
2024-04-28 14:58:45,335:INFO:          markupsafe: 2.1.5
2024-04-28 14:58:45,335:INFO:             pickle5: Not installed
2024-04-28 14:58:45,335:INFO:         cloudpickle: 3.0.0
2024-04-28 14:58:45,335:INFO:         deprecation: 2.1.0
2024-04-28 14:58:45,335:INFO:              xxhash: 3.4.1
2024-04-28 14:58:45,336:INFO:           wurlitzer: Not installed
2024-04-28 14:58:45,336:INFO:PyCaret optional dependencies:
2024-04-28 14:58:45,336:INFO:                shap: Not installed
2024-04-28 14:58:45,336:INFO:           interpret: Not installed
2024-04-28 14:58:45,336:INFO:                umap: Not installed
2024-04-28 14:58:45,336:INFO:     ydata_profiling: Not installed
2024-04-28 14:58:45,336:INFO:  explainerdashboard: Not installed
2024-04-28 14:58:45,336:INFO:             autoviz: Not installed
2024-04-28 14:58:45,336:INFO:           fairlearn: Not installed
2024-04-28 14:58:45,336:INFO:          deepchecks: Not installed
2024-04-28 14:58:45,336:INFO:             xgboost: Not installed
2024-04-28 14:58:45,336:INFO:            catboost: Not installed
2024-04-28 14:58:45,336:INFO:              kmodes: Not installed
2024-04-28 14:58:45,336:INFO:             mlxtend: Not installed
2024-04-28 14:58:45,336:INFO:       statsforecast: Not installed
2024-04-28 14:58:45,336:INFO:        tune_sklearn: Not installed
2024-04-28 14:58:45,336:INFO:                 ray: Not installed
2024-04-28 14:58:45,336:INFO:            hyperopt: Not installed
2024-04-28 14:58:45,336:INFO:              optuna: Not installed
2024-04-28 14:58:45,336:INFO:               skopt: Not installed
2024-04-28 14:58:45,336:INFO:              mlflow: 2.11.3
2024-04-28 14:58:45,336:INFO:              gradio: Not installed
2024-04-28 14:58:45,336:INFO:             fastapi: Not installed
2024-04-28 14:58:45,336:INFO:             uvicorn: Not installed
2024-04-28 14:58:45,336:INFO:              m2cgen: Not installed
2024-04-28 14:58:45,336:INFO:           evidently: Not installed
2024-04-28 14:58:45,336:INFO:               fugue: Not installed
2024-04-28 14:58:45,336:INFO:           streamlit: 1.33.0
2024-04-28 14:58:45,336:INFO:             prophet: Not installed
2024-04-28 14:58:45,336:INFO:None
2024-04-28 14:58:45,336:INFO:Set up data.
2024-04-28 14:58:45,341:INFO:Set up folding strategy.
2024-04-28 14:58:45,341:INFO:Set up train/test split.
2024-04-28 14:58:45,348:INFO:Set up index.
2024-04-28 14:58:45,348:INFO:Assigning column types.
2024-04-28 14:58:45,351:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 14:58:45,386:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 14:58:45,387:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 14:58:45,407:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:45,407:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:45,441:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 14:58:45,441:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 14:58:45,462:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:45,463:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:45,463:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 14:58:45,497:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 14:58:45,518:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:45,519:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:45,552:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 14:58:45,572:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:45,573:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:45,573:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 14:58:45,628:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:45,628:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:45,682:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:45,682:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:45,683:INFO:Preparing preprocessing pipeline...
2024-04-28 14:58:45,684:INFO:Set up simple imputation.
2024-04-28 14:58:45,696:INFO:Finished creating preprocessing pipeline.
2024-04-28 14:58:45,698:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-04-28 14:58:45,698:INFO:Creating final display dataframe.
2024-04-28 14:58:45,736:INFO:Setup _display_container:                     Description            Value
0                    Session id             7091
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (20285, 7)
4        Transformed data shape       (20285, 7)
5   Transformed train set shape       (14199, 7)
6    Transformed test set shape        (6086, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name     Projeto Kobe
18                          USI             6813
2024-04-28 14:58:45,791:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:45,792:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:45,845:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:45,846:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 14:58:45,846:INFO:Logging experiment in loggers
2024-04-28 14:58:45,882:INFO:SubProcess save_model() called ==================================
2024-04-28 14:58:45,886:INFO:Initializing save_model()
2024-04-28 14:58:45,886:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), model_name=C:\Users\jpsar\AppData\Local\Temp\tmp_lqlpvrt\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-28 14:58:45,886:INFO:Adding model into prep_pipe
2024-04-28 14:58:45,886:WARNING:Only Model saved as it was a pipeline.
2024-04-28 14:58:45,888:INFO:C:\Users\jpsar\AppData\Local\Temp\tmp_lqlpvrt\Transformation Pipeline.pkl saved in current working directory
2024-04-28 14:58:45,890:INFO:Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-04-28 14:58:45,890:INFO:save_model() successfully completed......................................
2024-04-28 14:58:46,078:INFO:SubProcess save_model() end ==================================
2024-04-28 14:58:46,097:INFO:setup() successfully completed in 0.52s...............
2024-04-28 14:58:46,109:INFO:Initializing compare_models()
2024-04-28 14:58:46,109:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F6714760>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=precision, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000249F6714760>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'precision', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 14:58:46,110:INFO:Checking exceptions
2024-04-28 14:58:46,115:INFO:Preparing display monitor
2024-04-28 14:58:46,133:INFO:Initializing Logistic Regression
2024-04-28 14:58:46,133:INFO:Total runtime is 0.0 minutes
2024-04-28 14:58:46,136:INFO:SubProcess create_model() called ==================================
2024-04-28 14:58:46,136:INFO:Initializing create_model()
2024-04-28 14:58:46,137:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F6714760>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249F9566FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 14:58:46,137:INFO:Checking exceptions
2024-04-28 14:58:46,137:INFO:Importing libraries
2024-04-28 14:58:46,137:INFO:Copying training dataset
2024-04-28 14:58:46,143:INFO:Defining folds
2024-04-28 14:58:46,144:INFO:Declaring metric variables
2024-04-28 14:58:46,146:INFO:Importing untrained model
2024-04-28 14:58:46,149:INFO:Logistic Regression Imported successfully
2024-04-28 14:58:46,153:INFO:Starting cross validation
2024-04-28 14:58:46,154:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 14:58:46,254:INFO:Calculating mean and std
2024-04-28 14:58:46,254:INFO:Creating metrics dataframe
2024-04-28 14:58:46,258:INFO:Uploading results into container
2024-04-28 14:58:46,258:INFO:Uploading model into container now
2024-04-28 14:58:46,258:INFO:_master_model_container: 1
2024-04-28 14:58:46,258:INFO:_display_container: 2
2024-04-28 14:58:46,259:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 14:58:46,259:INFO:create_model() successfully completed......................................
2024-04-28 14:58:46,419:INFO:SubProcess create_model() end ==================================
2024-04-28 14:58:46,419:INFO:Creating metrics dataframe
2024-04-28 14:58:46,425:INFO:Initializing Decision Tree Classifier
2024-04-28 14:58:46,425:INFO:Total runtime is 0.004867764314015707 minutes
2024-04-28 14:58:46,427:INFO:SubProcess create_model() called ==================================
2024-04-28 14:58:46,427:INFO:Initializing create_model()
2024-04-28 14:58:46,427:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F6714760>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249F9566FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 14:58:46,428:INFO:Checking exceptions
2024-04-28 14:58:46,428:INFO:Importing libraries
2024-04-28 14:58:46,428:INFO:Copying training dataset
2024-04-28 14:58:46,431:INFO:Defining folds
2024-04-28 14:58:46,431:INFO:Declaring metric variables
2024-04-28 14:58:46,434:INFO:Importing untrained model
2024-04-28 14:58:46,436:INFO:Decision Tree Classifier Imported successfully
2024-04-28 14:58:46,440:INFO:Starting cross validation
2024-04-28 14:58:46,441:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 14:58:46,540:INFO:Calculating mean and std
2024-04-28 14:58:46,540:INFO:Creating metrics dataframe
2024-04-28 14:58:46,543:INFO:Uploading results into container
2024-04-28 14:58:46,543:INFO:Uploading model into container now
2024-04-28 14:58:46,543:INFO:_master_model_container: 2
2024-04-28 14:58:46,543:INFO:_display_container: 2
2024-04-28 14:58:46,543:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7091, splitter='best')
2024-04-28 14:58:46,544:INFO:create_model() successfully completed......................................
2024-04-28 14:58:46,699:INFO:SubProcess create_model() end ==================================
2024-04-28 14:58:46,700:INFO:Creating metrics dataframe
2024-04-28 14:58:46,711:INFO:Initializing create_model()
2024-04-28 14:58:46,712:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F6714760>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 14:58:46,712:INFO:Checking exceptions
2024-04-28 14:58:46,714:INFO:Importing libraries
2024-04-28 14:58:46,714:INFO:Copying training dataset
2024-04-28 14:58:46,720:INFO:Defining folds
2024-04-28 14:58:46,720:INFO:Declaring metric variables
2024-04-28 14:58:46,720:INFO:Importing untrained model
2024-04-28 14:58:46,720:INFO:Declaring custom model
2024-04-28 14:58:46,721:INFO:Logistic Regression Imported successfully
2024-04-28 14:58:46,721:INFO:Cross validation set to False
2024-04-28 14:58:46,722:INFO:Fitting Model
2024-04-28 14:58:46,764:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 14:58:46,764:INFO:create_model() successfully completed......................................
2024-04-28 14:58:46,935:INFO:Creating Dashboard logs
2024-04-28 14:58:46,937:INFO:Model: Logistic Regression
2024-04-28 14:58:46,950:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 7091, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-04-28 14:58:47,008:INFO:Initializing predict_model()
2024-04-28 14:58:47,008:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F6714760>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000249F0A17AF0>)
2024-04-28 14:58:47,008:INFO:Checking exceptions
2024-04-28 14:58:47,008:INFO:Preloading libraries
2024-04-28 14:58:47,210:INFO:SubProcess plot_model() called ==================================
2024-04-28 14:58:47,210:INFO:Initializing plot_model()
2024-04-28 14:58:47,210:INFO:plot_model(plot=auc, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmpopsue93q, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F6714760>, system=False)
2024-04-28 14:58:47,210:INFO:Checking exceptions
2024-04-28 14:58:47,212:INFO:Preloading libraries
2024-04-28 14:58:47,212:INFO:Copying training dataset
2024-04-28 14:58:47,212:INFO:Plot type: auc
2024-04-28 14:58:47,249:INFO:Fitting Model
2024-04-28 14:58:47,250:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 14:58:47,250:INFO:Scoring test/hold-out set
2024-04-28 14:58:47,265:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmpopsue93q\AUC.png'
2024-04-28 14:58:47,444:INFO:Visual Rendered Successfully
2024-04-28 14:58:47,601:INFO:plot_model() successfully completed......................................
2024-04-28 14:58:47,607:INFO:Initializing plot_model()
2024-04-28 14:58:47,607:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmpopsue93q, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F6714760>, system=False)
2024-04-28 14:58:47,607:INFO:Checking exceptions
2024-04-28 14:58:47,609:INFO:Preloading libraries
2024-04-28 14:58:47,609:INFO:Copying training dataset
2024-04-28 14:58:47,609:INFO:Plot type: confusion_matrix
2024-04-28 14:58:47,644:INFO:Fitting Model
2024-04-28 14:58:47,644:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 14:58:47,645:INFO:Scoring test/hold-out set
2024-04-28 14:58:47,657:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmpopsue93q\Confusion Matrix.png'
2024-04-28 14:58:47,739:INFO:Visual Rendered Successfully
2024-04-28 14:58:47,900:INFO:plot_model() successfully completed......................................
2024-04-28 14:58:47,906:INFO:Initializing plot_model()
2024-04-28 14:58:47,906:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmpopsue93q, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F6714760>, system=False)
2024-04-28 14:58:47,906:INFO:Checking exceptions
2024-04-28 14:58:47,908:INFO:Preloading libraries
2024-04-28 14:58:47,908:INFO:Copying training dataset
2024-04-28 14:58:47,908:INFO:Plot type: feature
2024-04-28 14:58:47,942:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmpopsue93q\Feature Importance.png'
2024-04-28 14:58:48,056:INFO:Visual Rendered Successfully
2024-04-28 14:58:48,210:INFO:plot_model() successfully completed......................................
2024-04-28 14:58:48,215:INFO:SubProcess plot_model() end ==================================
2024-04-28 14:58:48,417:INFO:Creating Dashboard logs
2024-04-28 14:58:48,420:INFO:Model: Decision Tree Classifier
2024-04-28 14:58:48,432:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 7091, 'splitter': 'best'}
2024-04-28 14:58:48,709:INFO:_master_model_container: 2
2024-04-28 14:58:48,709:INFO:_display_container: 2
2024-04-28 14:58:48,709:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 14:58:48,709:INFO:compare_models() successfully completed......................................
2024-04-28 14:58:48,710:INFO:Initializing plot_model()
2024-04-28 14:58:48,710:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F6714760>, system=True)
2024-04-28 14:58:48,710:INFO:Checking exceptions
2024-04-28 14:58:48,713:INFO:Preloading libraries
2024-04-28 14:58:48,713:INFO:Copying training dataset
2024-04-28 14:58:48,714:INFO:Plot type: auc
2024-04-28 14:58:48,750:INFO:Fitting Model
2024-04-28 14:58:48,751:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 14:58:48,751:INFO:Scoring test/hold-out set
2024-04-28 14:58:48,766:INFO:Saving 'AUC.png'
2024-04-28 14:58:48,944:INFO:Visual Rendered Successfully
2024-04-28 14:58:49,136:INFO:plot_model() successfully completed......................................
2024-04-28 14:58:49,143:INFO:Initializing plot_model()
2024-04-28 14:58:49,143:INFO:plot_model(plot=pr, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F6714760>, system=True)
2024-04-28 14:58:49,143:INFO:Checking exceptions
2024-04-28 14:58:49,146:INFO:Preloading libraries
2024-04-28 14:58:49,147:INFO:Copying training dataset
2024-04-28 14:58:49,147:INFO:Plot type: pr
2024-04-28 14:58:49,199:INFO:Fitting Model
2024-04-28 14:58:49,200:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 14:58:49,201:INFO:Scoring test/hold-out set
2024-04-28 14:58:49,218:INFO:Saving 'Precision Recall.png'
2024-04-28 14:58:49,405:INFO:Visual Rendered Successfully
2024-04-28 14:58:49,580:INFO:plot_model() successfully completed......................................
2024-04-28 14:58:49,582:INFO:Initializing plot_model()
2024-04-28 14:58:49,582:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F6714760>, system=True)
2024-04-28 14:58:49,582:INFO:Checking exceptions
2024-04-28 14:58:49,585:INFO:Preloading libraries
2024-04-28 14:58:49,585:INFO:Copying training dataset
2024-04-28 14:58:49,586:INFO:Plot type: confusion_matrix
2024-04-28 14:58:49,627:INFO:Fitting Model
2024-04-28 14:58:49,627:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 14:58:49,627:INFO:Scoring test/hold-out set
2024-04-28 14:58:49,641:INFO:Saving 'Confusion Matrix.png'
2024-04-28 14:58:49,724:INFO:Visual Rendered Successfully
2024-04-28 14:58:49,879:INFO:plot_model() successfully completed......................................
2024-04-28 14:58:49,884:INFO:Initializing plot_model()
2024-04-28 14:58:49,884:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F6714760>, system=True)
2024-04-28 14:58:49,884:INFO:Checking exceptions
2024-04-28 14:58:49,887:INFO:Preloading libraries
2024-04-28 14:58:49,887:INFO:Copying training dataset
2024-04-28 14:58:49,888:INFO:Plot type: learning
2024-04-28 14:58:49,927:INFO:Fitting Model
2024-04-28 14:58:52,261:INFO:Saving 'Learning Curve.png'
2024-04-28 14:58:52,416:INFO:Visual Rendered Successfully
2024-04-28 14:58:52,568:INFO:plot_model() successfully completed......................................
2024-04-28 14:58:52,573:INFO:Initializing plot_model()
2024-04-28 14:58:52,573:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F6714760>, system=True)
2024-04-28 14:58:52,573:INFO:Checking exceptions
2024-04-28 14:58:52,576:INFO:Preloading libraries
2024-04-28 14:58:52,577:INFO:Copying training dataset
2024-04-28 14:58:52,577:INFO:Plot type: feature
2024-04-28 14:58:52,608:INFO:Saving 'Feature Importance.png'
2024-04-28 14:58:52,724:INFO:Visual Rendered Successfully
2024-04-28 14:58:52,871:INFO:plot_model() successfully completed......................................
2024-04-28 14:58:52,893:INFO:Initializing predict_model()
2024-04-28 14:58:52,894:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F6714760>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000249F8085310>)
2024-04-28 14:58:52,894:INFO:Checking exceptions
2024-04-28 14:58:52,894:INFO:Preloading libraries
2024-04-28 14:58:53,098:INFO:Initializing save_model()
2024-04-28 14:58:53,098:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7091, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=./model_kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-28 14:58:53,098:INFO:Adding model into prep_pipe
2024-04-28 14:58:53,100:INFO:./model_kobe.pkl saved in current working directory
2024-04-28 14:58:53,102:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=7091,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-04-28 14:58:53,102:INFO:save_model() successfully completed......................................
2024-04-28 14:58:53,259:INFO:Initializing load_model()
2024-04-28 14:58:53,259:INFO:load_model(model_name=./model_kobe, platform=None, authentication=None, verbose=True)
2024-04-28 14:58:53,321:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\mlflow\types\utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-28 14:58:55,249:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_15520\2127829727.py:28: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-28 14:58:55,252:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_15520\2127829727.py:29: FutureWarning: ``mlflow.tracking.client.MlflowClient.transition_model_version_stage`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  client.transition_model_version_stage(

2024-04-28 15:17:48,468:INFO:PyCaret ClassificationExperiment
2024-04-28 15:17:48,468:INFO:Logging name: clf-default-name
2024-04-28 15:17:48,468:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 15:17:48,468:INFO:version 3.2.0
2024-04-28 15:17:48,468:INFO:Initializing setup()
2024-04-28 15:17:48,468:INFO:self.USI: 3933
2024-04-28 15:17:48,468:INFO:self._variable_keys: {'exp_name_log', 'exp_id', 'target_param', 'seed', 'idx', 'X', 'X_test', 'y_test', 'html_param', 'fold_groups_param', 'X_train', 'y_train', 'gpu_param', '_available_plots', 'log_plots_param', 'USI', 'n_jobs_param', 'data', 'fold_generator', 'fix_imbalance', 'memory', 'y', '_ml_usecase', 'pipeline', 'fold_shuffle_param', 'is_multiclass', 'logging_param', 'gpu_n_jobs_param'}
2024-04-28 15:17:48,468:INFO:Checking environment
2024-04-28 15:17:48,468:INFO:python_version: 3.8.0
2024-04-28 15:17:48,468:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 15:17:48,468:INFO:machine: AMD64
2024-04-28 15:17:48,468:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 15:17:48,472:INFO:Memory: svmem(total=34301427712, available=21209284608, percent=38.2, used=13092143104, free=21209284608)
2024-04-28 15:17:48,473:INFO:Physical Core: 6
2024-04-28 15:17:48,473:INFO:Logical Core: 12
2024-04-28 15:17:48,473:INFO:Checking libraries
2024-04-28 15:17:48,473:INFO:System:
2024-04-28 15:17:48,473:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 15:17:48,473:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 15:17:48,473:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 15:17:48,473:INFO:PyCaret required dependencies:
2024-04-28 15:17:48,473:INFO:                 pip: 24.0
2024-04-28 15:17:48,473:INFO:          setuptools: 69.5.1
2024-04-28 15:17:48,473:INFO:             pycaret: 3.2.0
2024-04-28 15:17:48,473:INFO:             IPython: 8.12.3
2024-04-28 15:17:48,473:INFO:          ipywidgets: 8.1.2
2024-04-28 15:17:48,473:INFO:                tqdm: 4.66.2
2024-04-28 15:17:48,473:INFO:               numpy: 1.24.4
2024-04-28 15:17:48,473:INFO:              pandas: 1.5.3
2024-04-28 15:17:48,473:INFO:              jinja2: 3.1.3
2024-04-28 15:17:48,473:INFO:               scipy: 1.10.1
2024-04-28 15:17:48,473:INFO:              joblib: 1.3.2
2024-04-28 15:17:48,473:INFO:             sklearn: 1.2.0
2024-04-28 15:17:48,473:INFO:                pyod: 1.1.3
2024-04-28 15:17:48,473:INFO:            imblearn: 0.12.2
2024-04-28 15:17:48,473:INFO:   category_encoders: 2.6.3
2024-04-28 15:17:48,473:INFO:            lightgbm: 4.3.0
2024-04-28 15:17:48,473:INFO:               numba: 0.58.1
2024-04-28 15:17:48,473:INFO:            requests: 2.31.0
2024-04-28 15:17:48,473:INFO:          matplotlib: 3.6.0
2024-04-28 15:17:48,473:INFO:          scikitplot: 0.3.7
2024-04-28 15:17:48,473:INFO:         yellowbrick: 1.5
2024-04-28 15:17:48,473:INFO:              plotly: 5.20.0
2024-04-28 15:17:48,473:INFO:    plotly-resampler: Not installed
2024-04-28 15:17:48,473:INFO:             kaleido: 0.2.1
2024-04-28 15:17:48,473:INFO:           schemdraw: 0.15
2024-04-28 15:17:48,473:INFO:         statsmodels: 0.14.1
2024-04-28 15:17:48,473:INFO:              sktime: 0.21.1
2024-04-28 15:17:48,474:INFO:               tbats: 1.1.3
2024-04-28 15:17:48,474:INFO:            pmdarima: 2.0.4
2024-04-28 15:17:48,474:INFO:              psutil: 5.9.8
2024-04-28 15:17:48,474:INFO:          markupsafe: 2.1.5
2024-04-28 15:17:48,474:INFO:             pickle5: Not installed
2024-04-28 15:17:48,474:INFO:         cloudpickle: 3.0.0
2024-04-28 15:17:48,474:INFO:         deprecation: 2.1.0
2024-04-28 15:17:48,474:INFO:              xxhash: 3.4.1
2024-04-28 15:17:48,474:INFO:           wurlitzer: Not installed
2024-04-28 15:17:48,474:INFO:PyCaret optional dependencies:
2024-04-28 15:17:48,474:INFO:                shap: Not installed
2024-04-28 15:17:48,474:INFO:           interpret: Not installed
2024-04-28 15:17:48,474:INFO:                umap: Not installed
2024-04-28 15:17:48,474:INFO:     ydata_profiling: Not installed
2024-04-28 15:17:48,474:INFO:  explainerdashboard: Not installed
2024-04-28 15:17:48,474:INFO:             autoviz: Not installed
2024-04-28 15:17:48,474:INFO:           fairlearn: Not installed
2024-04-28 15:17:48,474:INFO:          deepchecks: Not installed
2024-04-28 15:17:48,474:INFO:             xgboost: Not installed
2024-04-28 15:17:48,474:INFO:            catboost: Not installed
2024-04-28 15:17:48,474:INFO:              kmodes: Not installed
2024-04-28 15:17:48,474:INFO:             mlxtend: Not installed
2024-04-28 15:17:48,474:INFO:       statsforecast: Not installed
2024-04-28 15:17:48,474:INFO:        tune_sklearn: Not installed
2024-04-28 15:17:48,474:INFO:                 ray: Not installed
2024-04-28 15:17:48,474:INFO:            hyperopt: Not installed
2024-04-28 15:17:48,474:INFO:              optuna: Not installed
2024-04-28 15:17:48,474:INFO:               skopt: Not installed
2024-04-28 15:17:48,474:INFO:              mlflow: 2.11.3
2024-04-28 15:17:48,474:INFO:              gradio: Not installed
2024-04-28 15:17:48,474:INFO:             fastapi: Not installed
2024-04-28 15:17:48,474:INFO:             uvicorn: Not installed
2024-04-28 15:17:48,474:INFO:              m2cgen: Not installed
2024-04-28 15:17:48,474:INFO:           evidently: Not installed
2024-04-28 15:17:48,474:INFO:               fugue: Not installed
2024-04-28 15:17:48,474:INFO:           streamlit: 1.33.0
2024-04-28 15:17:48,474:INFO:             prophet: Not installed
2024-04-28 15:17:48,474:INFO:None
2024-04-28 15:17:48,474:INFO:Set up data.
2024-04-28 15:17:48,478:INFO:Set up folding strategy.
2024-04-28 15:17:48,478:INFO:Set up train/test split.
2024-04-28 15:17:48,479:INFO:Set up data.
2024-04-28 15:17:48,481:INFO:Set up index.
2024-04-28 15:17:48,481:INFO:Assigning column types.
2024-04-28 15:17:48,483:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 15:17:48,517:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 15:17:48,517:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:17:48,538:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:48,538:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:48,572:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 15:17:48,572:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:17:48,593:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:48,593:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:48,593:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 15:17:48,627:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:17:48,648:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:48,648:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:48,682:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:17:48,703:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:48,703:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:48,703:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 15:17:48,759:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:48,759:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:48,813:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:48,813:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:48,814:INFO:Preparing preprocessing pipeline...
2024-04-28 15:17:48,816:INFO:Set up simple imputation.
2024-04-28 15:17:48,816:INFO:Set up feature normalization.
2024-04-28 15:17:48,831:INFO:Finished creating preprocessing pipeline.
2024-04-28 15:17:48,834:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-28 15:17:48,834:INFO:Creating final display dataframe.
2024-04-28 15:17:48,883:INFO:Setup _display_container:                     Description             Value
0                    Session id               618
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              3933
2024-04-28 15:17:48,941:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:48,942:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:48,996:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:48,997:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:48,997:INFO:setup() successfully completed in 0.53s...............
2024-04-28 15:17:48,998:INFO:Initializing compare_models()
2024-04-28 15:17:48,998:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7A8F340>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7A8F340>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 15:17:48,998:INFO:Checking exceptions
2024-04-28 15:17:49,001:INFO:Preparing display monitor
2024-04-28 15:17:49,016:INFO:Initializing Logistic Regression
2024-04-28 15:17:49,016:INFO:Total runtime is 0.0 minutes
2024-04-28 15:17:49,019:INFO:SubProcess create_model() called ==================================
2024-04-28 15:17:49,019:INFO:Initializing create_model()
2024-04-28 15:17:49,019:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7A8F340>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249F64CF2B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 15:17:49,019:INFO:Checking exceptions
2024-04-28 15:17:49,019:INFO:Importing libraries
2024-04-28 15:17:49,019:INFO:Copying training dataset
2024-04-28 15:17:49,024:INFO:Defining folds
2024-04-28 15:17:49,024:INFO:Declaring metric variables
2024-04-28 15:17:49,026:INFO:Importing untrained model
2024-04-28 15:17:49,029:INFO:Logistic Regression Imported successfully
2024-04-28 15:17:49,033:INFO:Starting cross validation
2024-04-28 15:17:49,034:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 15:17:51,505:INFO:Calculating mean and std
2024-04-28 15:17:51,509:INFO:Creating metrics dataframe
2024-04-28 15:17:51,515:INFO:Uploading results into container
2024-04-28 15:17:51,516:INFO:Uploading model into container now
2024-04-28 15:17:51,517:INFO:_master_model_container: 1
2024-04-28 15:17:51,517:INFO:_display_container: 2
2024-04-28 15:17:51,518:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=618, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 15:17:51,518:INFO:create_model() successfully completed......................................
2024-04-28 15:17:51,781:INFO:SubProcess create_model() end ==================================
2024-04-28 15:17:51,781:INFO:Creating metrics dataframe
2024-04-28 15:17:51,786:INFO:Initializing Decision Tree Classifier
2024-04-28 15:17:51,787:INFO:Total runtime is 0.04618579149246216 minutes
2024-04-28 15:17:51,789:INFO:SubProcess create_model() called ==================================
2024-04-28 15:17:51,789:INFO:Initializing create_model()
2024-04-28 15:17:51,789:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7A8F340>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249F64CF2B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 15:17:51,789:INFO:Checking exceptions
2024-04-28 15:17:51,789:INFO:Importing libraries
2024-04-28 15:17:51,789:INFO:Copying training dataset
2024-04-28 15:17:51,793:INFO:Defining folds
2024-04-28 15:17:51,793:INFO:Declaring metric variables
2024-04-28 15:17:51,795:INFO:Importing untrained model
2024-04-28 15:17:51,797:INFO:Decision Tree Classifier Imported successfully
2024-04-28 15:17:51,801:INFO:Starting cross validation
2024-04-28 15:17:51,802:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 15:17:53,144:INFO:Calculating mean and std
2024-04-28 15:17:53,147:INFO:Creating metrics dataframe
2024-04-28 15:17:53,152:INFO:Uploading results into container
2024-04-28 15:17:53,152:INFO:Uploading model into container now
2024-04-28 15:17:53,153:INFO:_master_model_container: 2
2024-04-28 15:17:53,153:INFO:_display_container: 2
2024-04-28 15:17:53,154:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=618, splitter='best')
2024-04-28 15:17:53,154:INFO:create_model() successfully completed......................................
2024-04-28 15:17:53,352:INFO:SubProcess create_model() end ==================================
2024-04-28 15:17:53,352:INFO:Creating metrics dataframe
2024-04-28 15:17:53,365:INFO:Initializing create_model()
2024-04-28 15:17:53,365:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7A8F340>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=618, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 15:17:53,365:INFO:Checking exceptions
2024-04-28 15:17:53,366:INFO:Importing libraries
2024-04-28 15:17:53,367:INFO:Copying training dataset
2024-04-28 15:17:53,370:INFO:Defining folds
2024-04-28 15:17:53,370:INFO:Declaring metric variables
2024-04-28 15:17:53,370:INFO:Importing untrained model
2024-04-28 15:17:53,370:INFO:Declaring custom model
2024-04-28 15:17:53,371:INFO:Decision Tree Classifier Imported successfully
2024-04-28 15:17:53,371:INFO:Cross validation set to False
2024-04-28 15:17:53,371:INFO:Fitting Model
2024-04-28 15:17:53,423:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=618, splitter='best')
2024-04-28 15:17:53,423:INFO:create_model() successfully completed......................................
2024-04-28 15:17:53,587:INFO:Initializing create_model()
2024-04-28 15:17:53,587:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7A8F340>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=618, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 15:17:53,587:INFO:Checking exceptions
2024-04-28 15:17:53,588:INFO:Importing libraries
2024-04-28 15:17:53,588:INFO:Copying training dataset
2024-04-28 15:17:53,592:INFO:Defining folds
2024-04-28 15:17:53,592:INFO:Declaring metric variables
2024-04-28 15:17:53,592:INFO:Importing untrained model
2024-04-28 15:17:53,592:INFO:Declaring custom model
2024-04-28 15:17:53,592:INFO:Logistic Regression Imported successfully
2024-04-28 15:17:53,593:INFO:Cross validation set to False
2024-04-28 15:17:53,593:INFO:Fitting Model
2024-04-28 15:17:53,607:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=618, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 15:17:53,607:INFO:create_model() successfully completed......................................
2024-04-28 15:17:53,780:INFO:_master_model_container: 2
2024-04-28 15:17:53,780:INFO:_display_container: 2
2024-04-28 15:17:53,780:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=618, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=618, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-28 15:17:53,780:INFO:compare_models() successfully completed......................................
2024-04-28 15:17:53,782:INFO:Initializing plot_model()
2024-04-28 15:17:53,782:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=618, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7A8F340>, system=True)
2024-04-28 15:17:53,782:INFO:Checking exceptions
2024-04-28 15:17:53,785:INFO:Preloading libraries
2024-04-28 15:17:53,786:INFO:Copying training dataset
2024-04-28 15:17:53,786:INFO:Plot type: parameter
2024-04-28 15:17:53,788:INFO:Visual Rendered Successfully
2024-04-28 15:17:53,952:INFO:plot_model() successfully completed......................................
2024-04-28 15:17:53,971:INFO:Initializing predict_model()
2024-04-28 15:17:53,971:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7A8F340>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=618, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000249F7BA7EE0>)
2024-04-28 15:17:53,972:INFO:Checking exceptions
2024-04-28 15:17:53,972:INFO:Preloading libraries
2024-04-28 15:17:54,281:INFO:Initializing plot_model()
2024-04-28 15:17:54,281:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=618, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7A8F340>, system=True)
2024-04-28 15:17:54,281:INFO:Checking exceptions
2024-04-28 15:17:54,285:INFO:Preloading libraries
2024-04-28 15:17:54,285:INFO:Copying training dataset
2024-04-28 15:17:54,285:INFO:Plot type: parameter
2024-04-28 15:17:54,288:INFO:Visual Rendered Successfully
2024-04-28 15:17:54,452:INFO:plot_model() successfully completed......................................
2024-04-28 15:17:54,469:INFO:Initializing predict_model()
2024-04-28 15:17:54,469:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F7A8F340>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=618, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000249F951F820>)
2024-04-28 15:17:54,469:INFO:Checking exceptions
2024-04-28 15:17:54,469:INFO:Preloading libraries
2024-04-28 15:17:54,776:INFO:Initializing load_model()
2024-04-28 15:17:54,776:INFO:load_model(model_name=./model_kobe, platform=None, authentication=None, verbose=True)
2024-04-28 15:17:54,826:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\mlflow\types\utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-28 15:17:56,886:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_15520\1973998042.py:83: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-28 15:17:56,924:INFO:PyCaret ClassificationExperiment
2024-04-28 15:17:56,924:INFO:Logging name: Projeto Kobe
2024-04-28 15:17:56,924:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 15:17:56,924:INFO:version 3.2.0
2024-04-28 15:17:56,924:INFO:Initializing setup()
2024-04-28 15:17:56,924:INFO:self.USI: a282
2024-04-28 15:17:56,924:INFO:self._variable_keys: {'exp_name_log', 'exp_id', 'target_param', 'seed', 'idx', 'X', 'X_test', 'y_test', 'html_param', 'fold_groups_param', 'X_train', 'y_train', 'gpu_param', '_available_plots', 'log_plots_param', 'USI', 'n_jobs_param', 'data', 'fold_generator', 'fix_imbalance', 'memory', 'y', '_ml_usecase', 'pipeline', 'fold_shuffle_param', 'is_multiclass', 'logging_param', 'gpu_n_jobs_param'}
2024-04-28 15:17:56,924:INFO:Checking environment
2024-04-28 15:17:56,925:INFO:python_version: 3.8.0
2024-04-28 15:17:56,925:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 15:17:56,925:INFO:machine: AMD64
2024-04-28 15:17:56,925:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 15:17:56,930:INFO:Memory: svmem(total=34301427712, available=19793338368, percent=42.3, used=14508089344, free=19793338368)
2024-04-28 15:17:56,930:INFO:Physical Core: 6
2024-04-28 15:17:56,930:INFO:Logical Core: 12
2024-04-28 15:17:56,930:INFO:Checking libraries
2024-04-28 15:17:56,930:INFO:System:
2024-04-28 15:17:56,930:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 15:17:56,930:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 15:17:56,930:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 15:17:56,930:INFO:PyCaret required dependencies:
2024-04-28 15:17:56,930:INFO:                 pip: 24.0
2024-04-28 15:17:56,931:INFO:          setuptools: 69.5.1
2024-04-28 15:17:56,931:INFO:             pycaret: 3.2.0
2024-04-28 15:17:56,931:INFO:             IPython: 8.12.3
2024-04-28 15:17:56,931:INFO:          ipywidgets: 8.1.2
2024-04-28 15:17:56,931:INFO:                tqdm: 4.66.2
2024-04-28 15:17:56,931:INFO:               numpy: 1.24.4
2024-04-28 15:17:56,931:INFO:              pandas: 1.5.3
2024-04-28 15:17:56,931:INFO:              jinja2: 3.1.3
2024-04-28 15:17:56,931:INFO:               scipy: 1.10.1
2024-04-28 15:17:56,931:INFO:              joblib: 1.3.2
2024-04-28 15:17:56,931:INFO:             sklearn: 1.2.0
2024-04-28 15:17:56,931:INFO:                pyod: 1.1.3
2024-04-28 15:17:56,931:INFO:            imblearn: 0.12.2
2024-04-28 15:17:56,931:INFO:   category_encoders: 2.6.3
2024-04-28 15:17:56,931:INFO:            lightgbm: 4.3.0
2024-04-28 15:17:56,931:INFO:               numba: 0.58.1
2024-04-28 15:17:56,931:INFO:            requests: 2.31.0
2024-04-28 15:17:56,931:INFO:          matplotlib: 3.6.0
2024-04-28 15:17:56,931:INFO:          scikitplot: 0.3.7
2024-04-28 15:17:56,931:INFO:         yellowbrick: 1.5
2024-04-28 15:17:56,931:INFO:              plotly: 5.20.0
2024-04-28 15:17:56,931:INFO:    plotly-resampler: Not installed
2024-04-28 15:17:56,931:INFO:             kaleido: 0.2.1
2024-04-28 15:17:56,931:INFO:           schemdraw: 0.15
2024-04-28 15:17:56,931:INFO:         statsmodels: 0.14.1
2024-04-28 15:17:56,931:INFO:              sktime: 0.21.1
2024-04-28 15:17:56,931:INFO:               tbats: 1.1.3
2024-04-28 15:17:56,931:INFO:            pmdarima: 2.0.4
2024-04-28 15:17:56,931:INFO:              psutil: 5.9.8
2024-04-28 15:17:56,931:INFO:          markupsafe: 2.1.5
2024-04-28 15:17:56,931:INFO:             pickle5: Not installed
2024-04-28 15:17:56,931:INFO:         cloudpickle: 3.0.0
2024-04-28 15:17:56,931:INFO:         deprecation: 2.1.0
2024-04-28 15:17:56,931:INFO:              xxhash: 3.4.1
2024-04-28 15:17:56,931:INFO:           wurlitzer: Not installed
2024-04-28 15:17:56,931:INFO:PyCaret optional dependencies:
2024-04-28 15:17:56,931:INFO:                shap: Not installed
2024-04-28 15:17:56,932:INFO:           interpret: Not installed
2024-04-28 15:17:56,932:INFO:                umap: Not installed
2024-04-28 15:17:56,932:INFO:     ydata_profiling: Not installed
2024-04-28 15:17:56,932:INFO:  explainerdashboard: Not installed
2024-04-28 15:17:56,932:INFO:             autoviz: Not installed
2024-04-28 15:17:56,932:INFO:           fairlearn: Not installed
2024-04-28 15:17:56,932:INFO:          deepchecks: Not installed
2024-04-28 15:17:56,932:INFO:             xgboost: Not installed
2024-04-28 15:17:56,932:INFO:            catboost: Not installed
2024-04-28 15:17:56,932:INFO:              kmodes: Not installed
2024-04-28 15:17:56,932:INFO:             mlxtend: Not installed
2024-04-28 15:17:56,932:INFO:       statsforecast: Not installed
2024-04-28 15:17:56,932:INFO:        tune_sklearn: Not installed
2024-04-28 15:17:56,932:INFO:                 ray: Not installed
2024-04-28 15:17:56,932:INFO:            hyperopt: Not installed
2024-04-28 15:17:56,932:INFO:              optuna: Not installed
2024-04-28 15:17:56,932:INFO:               skopt: Not installed
2024-04-28 15:17:56,932:INFO:              mlflow: 2.11.3
2024-04-28 15:17:56,932:INFO:              gradio: Not installed
2024-04-28 15:17:56,932:INFO:             fastapi: Not installed
2024-04-28 15:17:56,932:INFO:             uvicorn: Not installed
2024-04-28 15:17:56,932:INFO:              m2cgen: Not installed
2024-04-28 15:17:56,932:INFO:           evidently: Not installed
2024-04-28 15:17:56,932:INFO:               fugue: Not installed
2024-04-28 15:17:56,932:INFO:           streamlit: 1.33.0
2024-04-28 15:17:56,932:INFO:             prophet: Not installed
2024-04-28 15:17:56,932:INFO:None
2024-04-28 15:17:56,932:INFO:Set up data.
2024-04-28 15:17:56,937:INFO:Set up folding strategy.
2024-04-28 15:17:56,938:INFO:Set up train/test split.
2024-04-28 15:17:56,944:INFO:Set up index.
2024-04-28 15:17:56,944:INFO:Assigning column types.
2024-04-28 15:17:56,947:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 15:17:56,983:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 15:17:56,984:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:17:57,005:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:57,005:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:57,039:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 15:17:57,039:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:17:57,060:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:57,060:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:57,060:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 15:17:57,094:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:17:57,115:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:57,115:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:57,148:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:17:57,169:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:57,169:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:57,170:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 15:17:57,226:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:57,226:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:57,281:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:57,281:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:57,282:INFO:Preparing preprocessing pipeline...
2024-04-28 15:17:57,283:INFO:Set up simple imputation.
2024-04-28 15:17:57,295:INFO:Finished creating preprocessing pipeline.
2024-04-28 15:17:57,297:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-04-28 15:17:57,297:INFO:Creating final display dataframe.
2024-04-28 15:17:57,335:INFO:Setup _display_container:                     Description            Value
0                    Session id             6161
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (20285, 7)
4        Transformed data shape       (20285, 7)
5   Transformed train set shape       (14199, 7)
6    Transformed test set shape        (6086, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name     Projeto Kobe
18                          USI             a282
2024-04-28 15:17:57,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:57,391:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:57,447:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:57,447:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:17:57,448:INFO:Logging experiment in loggers
2024-04-28 15:17:57,485:INFO:SubProcess save_model() called ==================================
2024-04-28 15:17:57,489:INFO:Initializing save_model()
2024-04-28 15:17:57,489:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), model_name=C:\Users\jpsar\AppData\Local\Temp\tmps1vg6cgi\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-28 15:17:57,489:INFO:Adding model into prep_pipe
2024-04-28 15:17:57,489:WARNING:Only Model saved as it was a pipeline.
2024-04-28 15:17:57,491:INFO:C:\Users\jpsar\AppData\Local\Temp\tmps1vg6cgi\Transformation Pipeline.pkl saved in current working directory
2024-04-28 15:17:57,493:INFO:Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-04-28 15:17:57,493:INFO:save_model() successfully completed......................................
2024-04-28 15:17:57,656:INFO:SubProcess save_model() end ==================================
2024-04-28 15:17:57,667:INFO:setup() successfully completed in 0.53s...............
2024-04-28 15:17:57,673:INFO:Initializing compare_models()
2024-04-28 15:17:57,673:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F96F7760>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=precision, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000249F96F7760>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'precision', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 15:17:57,673:INFO:Checking exceptions
2024-04-28 15:17:57,677:INFO:Preparing display monitor
2024-04-28 15:17:57,691:INFO:Initializing Logistic Regression
2024-04-28 15:17:57,691:INFO:Total runtime is 0.0 minutes
2024-04-28 15:17:57,693:INFO:SubProcess create_model() called ==================================
2024-04-28 15:17:57,693:INFO:Initializing create_model()
2024-04-28 15:17:57,694:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F96F7760>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249F953F490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 15:17:57,694:INFO:Checking exceptions
2024-04-28 15:17:57,694:INFO:Importing libraries
2024-04-28 15:17:57,694:INFO:Copying training dataset
2024-04-28 15:17:57,698:INFO:Defining folds
2024-04-28 15:17:57,698:INFO:Declaring metric variables
2024-04-28 15:17:57,700:INFO:Importing untrained model
2024-04-28 15:17:57,702:INFO:Logistic Regression Imported successfully
2024-04-28 15:17:57,706:INFO:Starting cross validation
2024-04-28 15:17:57,706:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 15:17:57,809:INFO:Calculating mean and std
2024-04-28 15:17:57,809:INFO:Creating metrics dataframe
2024-04-28 15:17:57,813:INFO:Uploading results into container
2024-04-28 15:17:57,814:INFO:Uploading model into container now
2024-04-28 15:17:57,814:INFO:_master_model_container: 1
2024-04-28 15:17:57,814:INFO:_display_container: 2
2024-04-28 15:17:57,814:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6161, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 15:17:57,814:INFO:create_model() successfully completed......................................
2024-04-28 15:17:57,990:INFO:SubProcess create_model() end ==================================
2024-04-28 15:17:57,990:INFO:Creating metrics dataframe
2024-04-28 15:17:57,996:INFO:Initializing Decision Tree Classifier
2024-04-28 15:17:57,996:INFO:Total runtime is 0.005082746346791585 minutes
2024-04-28 15:17:57,998:INFO:SubProcess create_model() called ==================================
2024-04-28 15:17:57,999:INFO:Initializing create_model()
2024-04-28 15:17:57,999:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F96F7760>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249F953F490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 15:17:57,999:INFO:Checking exceptions
2024-04-28 15:17:57,999:INFO:Importing libraries
2024-04-28 15:17:57,999:INFO:Copying training dataset
2024-04-28 15:17:58,003:INFO:Defining folds
2024-04-28 15:17:58,003:INFO:Declaring metric variables
2024-04-28 15:17:58,005:INFO:Importing untrained model
2024-04-28 15:17:58,008:INFO:Decision Tree Classifier Imported successfully
2024-04-28 15:17:58,012:INFO:Starting cross validation
2024-04-28 15:17:58,013:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 15:17:58,110:INFO:Calculating mean and std
2024-04-28 15:17:58,110:INFO:Creating metrics dataframe
2024-04-28 15:17:58,113:INFO:Uploading results into container
2024-04-28 15:17:58,113:INFO:Uploading model into container now
2024-04-28 15:17:58,113:INFO:_master_model_container: 2
2024-04-28 15:17:58,114:INFO:_display_container: 2
2024-04-28 15:17:58,114:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6161, splitter='best')
2024-04-28 15:17:58,114:INFO:create_model() successfully completed......................................
2024-04-28 15:17:58,275:INFO:SubProcess create_model() end ==================================
2024-04-28 15:17:58,275:INFO:Creating metrics dataframe
2024-04-28 15:17:58,288:INFO:Initializing create_model()
2024-04-28 15:17:58,288:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F96F7760>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6161, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 15:17:58,288:INFO:Checking exceptions
2024-04-28 15:17:58,289:INFO:Importing libraries
2024-04-28 15:17:58,289:INFO:Copying training dataset
2024-04-28 15:17:58,293:INFO:Defining folds
2024-04-28 15:17:58,293:INFO:Declaring metric variables
2024-04-28 15:17:58,293:INFO:Importing untrained model
2024-04-28 15:17:58,293:INFO:Declaring custom model
2024-04-28 15:17:58,293:INFO:Logistic Regression Imported successfully
2024-04-28 15:17:58,294:INFO:Cross validation set to False
2024-04-28 15:17:58,294:INFO:Fitting Model
2024-04-28 15:17:58,333:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6161, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 15:17:58,333:INFO:create_model() successfully completed......................................
2024-04-28 15:17:58,519:INFO:Creating Dashboard logs
2024-04-28 15:17:58,521:INFO:Model: Logistic Regression
2024-04-28 15:17:58,534:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 6161, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-04-28 15:17:58,591:INFO:Initializing predict_model()
2024-04-28 15:17:58,591:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F96F7760>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6161, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000249F9632AF0>)
2024-04-28 15:17:58,591:INFO:Checking exceptions
2024-04-28 15:17:58,591:INFO:Preloading libraries
2024-04-28 15:17:58,800:INFO:SubProcess plot_model() called ==================================
2024-04-28 15:17:58,800:INFO:Initializing plot_model()
2024-04-28 15:17:58,800:INFO:plot_model(plot=auc, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6161, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmpsssuan8l, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F96F7760>, system=False)
2024-04-28 15:17:58,800:INFO:Checking exceptions
2024-04-28 15:17:58,802:INFO:Preloading libraries
2024-04-28 15:17:58,802:INFO:Copying training dataset
2024-04-28 15:17:58,802:INFO:Plot type: auc
2024-04-28 15:17:58,840:INFO:Fitting Model
2024-04-28 15:17:58,840:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 15:17:58,840:INFO:Scoring test/hold-out set
2024-04-28 15:17:58,856:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmpsssuan8l\AUC.png'
2024-04-28 15:17:59,030:INFO:Visual Rendered Successfully
2024-04-28 15:17:59,187:INFO:plot_model() successfully completed......................................
2024-04-28 15:17:59,192:INFO:Initializing plot_model()
2024-04-28 15:17:59,192:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6161, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmpsssuan8l, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F96F7760>, system=False)
2024-04-28 15:17:59,192:INFO:Checking exceptions
2024-04-28 15:17:59,194:INFO:Preloading libraries
2024-04-28 15:17:59,194:INFO:Copying training dataset
2024-04-28 15:17:59,194:INFO:Plot type: confusion_matrix
2024-04-28 15:17:59,230:INFO:Fitting Model
2024-04-28 15:17:59,230:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 15:17:59,231:INFO:Scoring test/hold-out set
2024-04-28 15:17:59,244:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmpsssuan8l\Confusion Matrix.png'
2024-04-28 15:17:59,329:INFO:Visual Rendered Successfully
2024-04-28 15:17:59,495:INFO:plot_model() successfully completed......................................
2024-04-28 15:17:59,500:INFO:Initializing plot_model()
2024-04-28 15:17:59,500:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6161, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmpsssuan8l, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F96F7760>, system=False)
2024-04-28 15:17:59,500:INFO:Checking exceptions
2024-04-28 15:17:59,502:INFO:Preloading libraries
2024-04-28 15:17:59,502:INFO:Copying training dataset
2024-04-28 15:17:59,502:INFO:Plot type: feature
2024-04-28 15:17:59,533:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmpsssuan8l\Feature Importance.png'
2024-04-28 15:17:59,681:INFO:Visual Rendered Successfully
2024-04-28 15:17:59,840:INFO:plot_model() successfully completed......................................
2024-04-28 15:17:59,845:INFO:SubProcess plot_model() end ==================================
2024-04-28 15:18:00,067:INFO:Creating Dashboard logs
2024-04-28 15:18:00,070:INFO:Model: Decision Tree Classifier
2024-04-28 15:18:00,083:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 6161, 'splitter': 'best'}
2024-04-28 15:18:00,344:INFO:_master_model_container: 2
2024-04-28 15:18:00,344:INFO:_display_container: 2
2024-04-28 15:18:00,345:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6161, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 15:18:00,345:INFO:compare_models() successfully completed......................................
2024-04-28 15:18:00,345:INFO:Initializing plot_model()
2024-04-28 15:18:00,346:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6161, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F96F7760>, system=True)
2024-04-28 15:18:00,346:INFO:Checking exceptions
2024-04-28 15:18:00,349:INFO:Preloading libraries
2024-04-28 15:18:00,349:INFO:Copying training dataset
2024-04-28 15:18:00,349:INFO:Plot type: auc
2024-04-28 15:18:00,386:INFO:Fitting Model
2024-04-28 15:18:00,387:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 15:18:00,387:INFO:Scoring test/hold-out set
2024-04-28 15:18:00,402:INFO:Saving 'AUC.png'
2024-04-28 15:18:00,577:INFO:Visual Rendered Successfully
2024-04-28 15:18:00,736:INFO:plot_model() successfully completed......................................
2024-04-28 15:18:00,742:INFO:Initializing plot_model()
2024-04-28 15:18:00,742:INFO:plot_model(plot=pr, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6161, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F96F7760>, system=True)
2024-04-28 15:18:00,742:INFO:Checking exceptions
2024-04-28 15:18:00,746:INFO:Preloading libraries
2024-04-28 15:18:00,746:INFO:Copying training dataset
2024-04-28 15:18:00,746:INFO:Plot type: pr
2024-04-28 15:18:00,783:INFO:Fitting Model
2024-04-28 15:18:00,783:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 15:18:00,783:INFO:Scoring test/hold-out set
2024-04-28 15:18:00,796:INFO:Saving 'Precision Recall.png'
2024-04-28 15:18:00,948:INFO:Visual Rendered Successfully
2024-04-28 15:18:01,122:INFO:plot_model() successfully completed......................................
2024-04-28 15:18:01,124:INFO:Initializing plot_model()
2024-04-28 15:18:01,124:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6161, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F96F7760>, system=True)
2024-04-28 15:18:01,124:INFO:Checking exceptions
2024-04-28 15:18:01,127:INFO:Preloading libraries
2024-04-28 15:18:01,128:INFO:Copying training dataset
2024-04-28 15:18:01,128:INFO:Plot type: confusion_matrix
2024-04-28 15:18:01,166:INFO:Fitting Model
2024-04-28 15:18:01,167:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 15:18:01,167:INFO:Scoring test/hold-out set
2024-04-28 15:18:01,180:INFO:Saving 'Confusion Matrix.png'
2024-04-28 15:18:01,260:INFO:Visual Rendered Successfully
2024-04-28 15:18:01,418:INFO:plot_model() successfully completed......................................
2024-04-28 15:18:01,424:INFO:Initializing plot_model()
2024-04-28 15:18:01,424:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6161, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F96F7760>, system=True)
2024-04-28 15:18:01,424:INFO:Checking exceptions
2024-04-28 15:18:01,427:INFO:Preloading libraries
2024-04-28 15:18:01,427:INFO:Copying training dataset
2024-04-28 15:18:01,428:INFO:Plot type: learning
2024-04-28 15:18:01,468:INFO:Fitting Model
2024-04-28 15:18:04,107:INFO:Saving 'Learning Curve.png'
2024-04-28 15:18:04,262:INFO:Visual Rendered Successfully
2024-04-28 15:18:04,424:INFO:plot_model() successfully completed......................................
2024-04-28 15:18:04,430:INFO:Initializing plot_model()
2024-04-28 15:18:04,430:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6161, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F96F7760>, system=True)
2024-04-28 15:18:04,430:INFO:Checking exceptions
2024-04-28 15:18:04,434:INFO:Preloading libraries
2024-04-28 15:18:04,434:INFO:Copying training dataset
2024-04-28 15:18:04,434:INFO:Plot type: feature
2024-04-28 15:18:04,469:INFO:Saving 'Feature Importance.png'
2024-04-28 15:18:04,584:INFO:Visual Rendered Successfully
2024-04-28 15:18:04,745:INFO:plot_model() successfully completed......................................
2024-04-28 15:18:04,771:INFO:Initializing predict_model()
2024-04-28 15:18:04,771:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F96F7760>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6161, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000249F80855E0>)
2024-04-28 15:18:04,771:INFO:Checking exceptions
2024-04-28 15:18:04,771:INFO:Preloading libraries
2024-04-28 15:18:04,992:INFO:Initializing save_model()
2024-04-28 15:18:04,992:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6161, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=./model_kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-28 15:18:04,992:INFO:Adding model into prep_pipe
2024-04-28 15:18:04,994:INFO:./model_kobe.pkl saved in current working directory
2024-04-28 15:18:04,997:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=6161,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-04-28 15:18:04,997:INFO:save_model() successfully completed......................................
2024-04-28 15:18:05,160:INFO:Initializing load_model()
2024-04-28 15:18:05,161:INFO:load_model(model_name=./model_kobe, platform=None, authentication=None, verbose=True)
2024-04-28 15:18:05,231:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\mlflow\types\utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-28 15:18:07,258:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_15520\2127829727.py:28: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-28 15:18:07,260:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_15520\2127829727.py:29: FutureWarning: ``mlflow.tracking.client.MlflowClient.transition_model_version_stage`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  client.transition_model_version_stage(

2024-04-28 15:24:09,951:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\mlflow\store\artifact\utils\models.py:32: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-04-28 15:24:28,549:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_15520\2120704362.py:6: DeprecationWarning: In a future version, `df.iloc[:, i] = newvals` will attempt to set the values inplace instead of always setting a new array. To retain the old behavior, use either `df[df.columns[i]] = newvals` or, if columns are non-unique, `df.isetitem(i, newvals)`
  xtest.loc[:, 'operation_label'] = loaded_model.predict(http_data)

2024-04-28 15:31:34,573:INFO:PyCaret ClassificationExperiment
2024-04-28 15:31:34,573:INFO:Logging name: clf-default-name
2024-04-28 15:31:34,573:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 15:31:34,573:INFO:version 3.2.0
2024-04-28 15:31:34,573:INFO:Initializing setup()
2024-04-28 15:31:34,573:INFO:self.USI: c80f
2024-04-28 15:31:34,573:INFO:self._variable_keys: {'exp_name_log', 'exp_id', 'target_param', 'seed', 'idx', 'X', 'X_test', 'y_test', 'html_param', 'fold_groups_param', 'X_train', 'y_train', 'gpu_param', '_available_plots', 'log_plots_param', 'USI', 'n_jobs_param', 'data', 'fold_generator', 'fix_imbalance', 'memory', 'y', '_ml_usecase', 'pipeline', 'fold_shuffle_param', 'is_multiclass', 'logging_param', 'gpu_n_jobs_param'}
2024-04-28 15:31:34,573:INFO:Checking environment
2024-04-28 15:31:34,573:INFO:python_version: 3.8.0
2024-04-28 15:31:34,573:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 15:31:34,573:INFO:machine: AMD64
2024-04-28 15:31:34,573:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 15:31:34,578:INFO:Memory: svmem(total=34301427712, available=21079437312, percent=38.5, used=13221990400, free=21079437312)
2024-04-28 15:31:34,578:INFO:Physical Core: 6
2024-04-28 15:31:34,578:INFO:Logical Core: 12
2024-04-28 15:31:34,578:INFO:Checking libraries
2024-04-28 15:31:34,578:INFO:System:
2024-04-28 15:31:34,578:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 15:31:34,578:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 15:31:34,578:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 15:31:34,578:INFO:PyCaret required dependencies:
2024-04-28 15:31:34,579:INFO:                 pip: 24.0
2024-04-28 15:31:34,579:INFO:          setuptools: 69.5.1
2024-04-28 15:31:34,579:INFO:             pycaret: 3.2.0
2024-04-28 15:31:34,579:INFO:             IPython: 8.12.3
2024-04-28 15:31:34,579:INFO:          ipywidgets: 8.1.2
2024-04-28 15:31:34,579:INFO:                tqdm: 4.66.2
2024-04-28 15:31:34,579:INFO:               numpy: 1.24.4
2024-04-28 15:31:34,579:INFO:              pandas: 1.5.3
2024-04-28 15:31:34,579:INFO:              jinja2: 3.1.3
2024-04-28 15:31:34,579:INFO:               scipy: 1.10.1
2024-04-28 15:31:34,579:INFO:              joblib: 1.3.2
2024-04-28 15:31:34,579:INFO:             sklearn: 1.2.0
2024-04-28 15:31:34,579:INFO:                pyod: 1.1.3
2024-04-28 15:31:34,579:INFO:            imblearn: 0.12.2
2024-04-28 15:31:34,579:INFO:   category_encoders: 2.6.3
2024-04-28 15:31:34,579:INFO:            lightgbm: 4.3.0
2024-04-28 15:31:34,579:INFO:               numba: 0.58.1
2024-04-28 15:31:34,579:INFO:            requests: 2.31.0
2024-04-28 15:31:34,579:INFO:          matplotlib: 3.6.0
2024-04-28 15:31:34,579:INFO:          scikitplot: 0.3.7
2024-04-28 15:31:34,579:INFO:         yellowbrick: 1.5
2024-04-28 15:31:34,579:INFO:              plotly: 5.20.0
2024-04-28 15:31:34,579:INFO:    plotly-resampler: Not installed
2024-04-28 15:31:34,579:INFO:             kaleido: 0.2.1
2024-04-28 15:31:34,579:INFO:           schemdraw: 0.15
2024-04-28 15:31:34,579:INFO:         statsmodels: 0.14.1
2024-04-28 15:31:34,579:INFO:              sktime: 0.21.1
2024-04-28 15:31:34,579:INFO:               tbats: 1.1.3
2024-04-28 15:31:34,579:INFO:            pmdarima: 2.0.4
2024-04-28 15:31:34,579:INFO:              psutil: 5.9.8
2024-04-28 15:31:34,579:INFO:          markupsafe: 2.1.5
2024-04-28 15:31:34,579:INFO:             pickle5: Not installed
2024-04-28 15:31:34,579:INFO:         cloudpickle: 3.0.0
2024-04-28 15:31:34,579:INFO:         deprecation: 2.1.0
2024-04-28 15:31:34,579:INFO:              xxhash: 3.4.1
2024-04-28 15:31:34,579:INFO:           wurlitzer: Not installed
2024-04-28 15:31:34,579:INFO:PyCaret optional dependencies:
2024-04-28 15:31:34,579:INFO:                shap: Not installed
2024-04-28 15:31:34,579:INFO:           interpret: Not installed
2024-04-28 15:31:34,579:INFO:                umap: Not installed
2024-04-28 15:31:34,580:INFO:     ydata_profiling: Not installed
2024-04-28 15:31:34,580:INFO:  explainerdashboard: Not installed
2024-04-28 15:31:34,580:INFO:             autoviz: Not installed
2024-04-28 15:31:34,580:INFO:           fairlearn: Not installed
2024-04-28 15:31:34,580:INFO:          deepchecks: Not installed
2024-04-28 15:31:34,580:INFO:             xgboost: Not installed
2024-04-28 15:31:34,580:INFO:            catboost: Not installed
2024-04-28 15:31:34,580:INFO:              kmodes: Not installed
2024-04-28 15:31:34,580:INFO:             mlxtend: Not installed
2024-04-28 15:31:34,580:INFO:       statsforecast: Not installed
2024-04-28 15:31:34,580:INFO:        tune_sklearn: Not installed
2024-04-28 15:31:34,580:INFO:                 ray: Not installed
2024-04-28 15:31:34,580:INFO:            hyperopt: Not installed
2024-04-28 15:31:34,580:INFO:              optuna: Not installed
2024-04-28 15:31:34,580:INFO:               skopt: Not installed
2024-04-28 15:31:34,580:INFO:              mlflow: 2.11.3
2024-04-28 15:31:34,580:INFO:              gradio: Not installed
2024-04-28 15:31:34,580:INFO:             fastapi: Not installed
2024-04-28 15:31:34,580:INFO:             uvicorn: Not installed
2024-04-28 15:31:34,580:INFO:              m2cgen: Not installed
2024-04-28 15:31:34,580:INFO:           evidently: Not installed
2024-04-28 15:31:34,580:INFO:               fugue: Not installed
2024-04-28 15:31:34,580:INFO:           streamlit: 1.33.0
2024-04-28 15:31:34,580:INFO:             prophet: Not installed
2024-04-28 15:31:34,580:INFO:None
2024-04-28 15:31:34,580:INFO:Set up data.
2024-04-28 15:31:34,585:INFO:Set up folding strategy.
2024-04-28 15:31:34,585:INFO:Set up train/test split.
2024-04-28 15:31:34,585:INFO:Set up data.
2024-04-28 15:31:34,588:INFO:Set up index.
2024-04-28 15:31:34,588:INFO:Assigning column types.
2024-04-28 15:31:34,591:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 15:31:34,624:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 15:31:34,625:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:31:34,646:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:34,646:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:34,685:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 15:31:34,686:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:31:34,707:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:34,707:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:34,708:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 15:31:34,746:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:31:34,767:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:34,767:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:34,802:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:31:34,823:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:34,823:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:34,823:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 15:31:34,879:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:34,880:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:34,936:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:34,936:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:34,937:INFO:Preparing preprocessing pipeline...
2024-04-28 15:31:34,938:INFO:Set up simple imputation.
2024-04-28 15:31:34,938:INFO:Set up feature normalization.
2024-04-28 15:31:34,954:INFO:Finished creating preprocessing pipeline.
2024-04-28 15:31:34,957:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-28 15:31:34,957:INFO:Creating final display dataframe.
2024-04-28 15:31:35,007:INFO:Setup _display_container:                     Description             Value
0                    Session id              7831
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              c80f
2024-04-28 15:31:35,066:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:35,066:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:35,122:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:35,122:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:35,123:INFO:setup() successfully completed in 0.55s...............
2024-04-28 15:31:35,124:INFO:Initializing compare_models()
2024-04-28 15:31:35,124:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F0C7B0A0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000249F0C7B0A0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 15:31:35,124:INFO:Checking exceptions
2024-04-28 15:31:35,127:INFO:Preparing display monitor
2024-04-28 15:31:35,141:INFO:Initializing Logistic Regression
2024-04-28 15:31:35,141:INFO:Total runtime is 0.0 minutes
2024-04-28 15:31:35,144:INFO:SubProcess create_model() called ==================================
2024-04-28 15:31:35,144:INFO:Initializing create_model()
2024-04-28 15:31:35,144:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F0C7B0A0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249F7C5E100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 15:31:35,144:INFO:Checking exceptions
2024-04-28 15:31:35,144:INFO:Importing libraries
2024-04-28 15:31:35,145:INFO:Copying training dataset
2024-04-28 15:31:35,149:INFO:Defining folds
2024-04-28 15:31:35,149:INFO:Declaring metric variables
2024-04-28 15:31:35,152:INFO:Importing untrained model
2024-04-28 15:31:35,154:INFO:Logistic Regression Imported successfully
2024-04-28 15:31:35,158:INFO:Starting cross validation
2024-04-28 15:31:35,159:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 15:31:37,696:INFO:Calculating mean and std
2024-04-28 15:31:37,704:INFO:Creating metrics dataframe
2024-04-28 15:31:37,712:INFO:Uploading results into container
2024-04-28 15:31:37,714:INFO:Uploading model into container now
2024-04-28 15:31:37,715:INFO:_master_model_container: 1
2024-04-28 15:31:37,716:INFO:_display_container: 2
2024-04-28 15:31:37,716:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7831, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 15:31:37,717:INFO:create_model() successfully completed......................................
2024-04-28 15:31:37,962:INFO:SubProcess create_model() end ==================================
2024-04-28 15:31:37,962:INFO:Creating metrics dataframe
2024-04-28 15:31:37,968:INFO:Initializing Decision Tree Classifier
2024-04-28 15:31:37,968:INFO:Total runtime is 0.04711064100265503 minutes
2024-04-28 15:31:37,970:INFO:SubProcess create_model() called ==================================
2024-04-28 15:31:37,970:INFO:Initializing create_model()
2024-04-28 15:31:37,970:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F0C7B0A0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249F7C5E100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 15:31:37,970:INFO:Checking exceptions
2024-04-28 15:31:37,970:INFO:Importing libraries
2024-04-28 15:31:37,971:INFO:Copying training dataset
2024-04-28 15:31:37,975:INFO:Defining folds
2024-04-28 15:31:37,975:INFO:Declaring metric variables
2024-04-28 15:31:37,977:INFO:Importing untrained model
2024-04-28 15:31:37,979:INFO:Decision Tree Classifier Imported successfully
2024-04-28 15:31:37,983:INFO:Starting cross validation
2024-04-28 15:31:37,983:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 15:31:51,957:INFO:PyCaret ClassificationExperiment
2024-04-28 15:31:51,957:INFO:Logging name: clf-default-name
2024-04-28 15:31:51,957:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 15:31:51,957:INFO:version 3.2.0
2024-04-28 15:31:51,957:INFO:Initializing setup()
2024-04-28 15:31:51,957:INFO:self.USI: 51fe
2024-04-28 15:31:51,957:INFO:self._variable_keys: {'exp_name_log', 'exp_id', 'target_param', 'seed', 'idx', 'X', 'X_test', 'y_test', 'html_param', 'fold_groups_param', 'X_train', 'y_train', 'gpu_param', '_available_plots', 'log_plots_param', 'USI', 'n_jobs_param', 'data', 'fold_generator', 'fix_imbalance', 'memory', 'y', '_ml_usecase', 'pipeline', 'fold_shuffle_param', 'is_multiclass', 'logging_param', 'gpu_n_jobs_param'}
2024-04-28 15:31:51,957:INFO:Checking environment
2024-04-28 15:31:51,957:INFO:python_version: 3.8.0
2024-04-28 15:31:51,957:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 15:31:51,957:INFO:machine: AMD64
2024-04-28 15:31:51,957:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 15:31:51,961:INFO:Memory: svmem(total=34301427712, available=21016850432, percent=38.7, used=13284577280, free=21016850432)
2024-04-28 15:31:51,962:INFO:Physical Core: 6
2024-04-28 15:31:51,962:INFO:Logical Core: 12
2024-04-28 15:31:51,962:INFO:Checking libraries
2024-04-28 15:31:51,962:INFO:System:
2024-04-28 15:31:51,962:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 15:31:51,962:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 15:31:51,962:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 15:31:51,962:INFO:PyCaret required dependencies:
2024-04-28 15:31:51,962:INFO:                 pip: 24.0
2024-04-28 15:31:51,962:INFO:          setuptools: 69.5.1
2024-04-28 15:31:51,962:INFO:             pycaret: 3.2.0
2024-04-28 15:31:51,962:INFO:             IPython: 8.12.3
2024-04-28 15:31:51,962:INFO:          ipywidgets: 8.1.2
2024-04-28 15:31:51,962:INFO:                tqdm: 4.66.2
2024-04-28 15:31:51,962:INFO:               numpy: 1.24.4
2024-04-28 15:31:51,962:INFO:              pandas: 1.5.3
2024-04-28 15:31:51,962:INFO:              jinja2: 3.1.3
2024-04-28 15:31:51,962:INFO:               scipy: 1.10.1
2024-04-28 15:31:51,962:INFO:              joblib: 1.3.2
2024-04-28 15:31:51,962:INFO:             sklearn: 1.2.0
2024-04-28 15:31:51,962:INFO:                pyod: 1.1.3
2024-04-28 15:31:51,962:INFO:            imblearn: 0.12.2
2024-04-28 15:31:51,962:INFO:   category_encoders: 2.6.3
2024-04-28 15:31:51,962:INFO:            lightgbm: 4.3.0
2024-04-28 15:31:51,963:INFO:               numba: 0.58.1
2024-04-28 15:31:51,963:INFO:            requests: 2.31.0
2024-04-28 15:31:51,963:INFO:          matplotlib: 3.6.0
2024-04-28 15:31:51,963:INFO:          scikitplot: 0.3.7
2024-04-28 15:31:51,963:INFO:         yellowbrick: 1.5
2024-04-28 15:31:51,963:INFO:              plotly: 5.20.0
2024-04-28 15:31:51,963:INFO:    plotly-resampler: Not installed
2024-04-28 15:31:51,963:INFO:             kaleido: 0.2.1
2024-04-28 15:31:51,963:INFO:           schemdraw: 0.15
2024-04-28 15:31:51,963:INFO:         statsmodels: 0.14.1
2024-04-28 15:31:51,963:INFO:              sktime: 0.21.1
2024-04-28 15:31:51,963:INFO:               tbats: 1.1.3
2024-04-28 15:31:51,963:INFO:            pmdarima: 2.0.4
2024-04-28 15:31:51,963:INFO:              psutil: 5.9.8
2024-04-28 15:31:51,963:INFO:          markupsafe: 2.1.5
2024-04-28 15:31:51,963:INFO:             pickle5: Not installed
2024-04-28 15:31:51,963:INFO:         cloudpickle: 3.0.0
2024-04-28 15:31:51,963:INFO:         deprecation: 2.1.0
2024-04-28 15:31:51,963:INFO:              xxhash: 3.4.1
2024-04-28 15:31:51,963:INFO:           wurlitzer: Not installed
2024-04-28 15:31:51,963:INFO:PyCaret optional dependencies:
2024-04-28 15:31:51,963:INFO:                shap: Not installed
2024-04-28 15:31:51,963:INFO:           interpret: Not installed
2024-04-28 15:31:51,963:INFO:                umap: Not installed
2024-04-28 15:31:51,963:INFO:     ydata_profiling: Not installed
2024-04-28 15:31:51,963:INFO:  explainerdashboard: Not installed
2024-04-28 15:31:51,963:INFO:             autoviz: Not installed
2024-04-28 15:31:51,963:INFO:           fairlearn: Not installed
2024-04-28 15:31:51,963:INFO:          deepchecks: Not installed
2024-04-28 15:31:51,963:INFO:             xgboost: Not installed
2024-04-28 15:31:51,963:INFO:            catboost: Not installed
2024-04-28 15:31:51,963:INFO:              kmodes: Not installed
2024-04-28 15:31:51,963:INFO:             mlxtend: Not installed
2024-04-28 15:31:51,963:INFO:       statsforecast: Not installed
2024-04-28 15:31:51,963:INFO:        tune_sklearn: Not installed
2024-04-28 15:31:51,963:INFO:                 ray: Not installed
2024-04-28 15:31:51,963:INFO:            hyperopt: Not installed
2024-04-28 15:31:51,963:INFO:              optuna: Not installed
2024-04-28 15:31:51,963:INFO:               skopt: Not installed
2024-04-28 15:31:51,964:INFO:              mlflow: 2.11.3
2024-04-28 15:31:51,964:INFO:              gradio: Not installed
2024-04-28 15:31:51,964:INFO:             fastapi: Not installed
2024-04-28 15:31:51,964:INFO:             uvicorn: Not installed
2024-04-28 15:31:51,964:INFO:              m2cgen: Not installed
2024-04-28 15:31:51,964:INFO:           evidently: Not installed
2024-04-28 15:31:51,964:INFO:               fugue: Not installed
2024-04-28 15:31:51,964:INFO:           streamlit: 1.33.0
2024-04-28 15:31:51,964:INFO:             prophet: Not installed
2024-04-28 15:31:51,964:INFO:None
2024-04-28 15:31:51,964:INFO:Set up data.
2024-04-28 15:31:51,967:INFO:Set up folding strategy.
2024-04-28 15:31:51,967:INFO:Set up train/test split.
2024-04-28 15:31:51,967:INFO:Set up data.
2024-04-28 15:31:51,970:INFO:Set up index.
2024-04-28 15:31:51,970:INFO:Assigning column types.
2024-04-28 15:31:51,973:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 15:31:52,007:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 15:31:52,008:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:31:52,029:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:52,029:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:52,062:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 15:31:52,063:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:31:52,085:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:52,085:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:52,085:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 15:31:52,120:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:31:52,141:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:52,141:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:52,174:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:31:52,195:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:52,195:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:52,195:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 15:31:52,250:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:52,250:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:52,304:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:52,304:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:52,305:INFO:Preparing preprocessing pipeline...
2024-04-28 15:31:52,306:INFO:Set up simple imputation.
2024-04-28 15:31:52,306:INFO:Set up feature normalization.
2024-04-28 15:31:52,321:INFO:Finished creating preprocessing pipeline.
2024-04-28 15:31:52,324:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-28 15:31:52,324:INFO:Creating final display dataframe.
2024-04-28 15:31:52,373:INFO:Setup _display_container:                     Description             Value
0                    Session id              3111
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              51fe
2024-04-28 15:31:52,432:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:52,432:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:52,492:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:52,492:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:31:52,493:INFO:setup() successfully completed in 0.54s...............
2024-04-28 15:31:52,493:INFO:Initializing compare_models()
2024-04-28 15:31:52,493:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F475CCD0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000249F475CCD0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 15:31:52,493:INFO:Checking exceptions
2024-04-28 15:31:52,496:INFO:Preparing display monitor
2024-04-28 15:31:52,511:INFO:Initializing Logistic Regression
2024-04-28 15:31:52,511:INFO:Total runtime is 0.0 minutes
2024-04-28 15:31:52,514:INFO:SubProcess create_model() called ==================================
2024-04-28 15:31:52,514:INFO:Initializing create_model()
2024-04-28 15:31:52,514:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F475CCD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249817D2EB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 15:31:52,514:INFO:Checking exceptions
2024-04-28 15:31:52,514:INFO:Importing libraries
2024-04-28 15:31:52,515:INFO:Copying training dataset
2024-04-28 15:31:52,519:INFO:Defining folds
2024-04-28 15:31:52,519:INFO:Declaring metric variables
2024-04-28 15:31:52,521:INFO:Importing untrained model
2024-04-28 15:31:52,523:INFO:Logistic Regression Imported successfully
2024-04-28 15:31:52,527:INFO:Starting cross validation
2024-04-28 15:31:52,528:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 15:31:55,006:INFO:Calculating mean and std
2024-04-28 15:31:55,009:INFO:Creating metrics dataframe
2024-04-28 15:31:55,026:INFO:Uploading results into container
2024-04-28 15:31:55,027:INFO:Uploading model into container now
2024-04-28 15:31:55,028:INFO:_master_model_container: 1
2024-04-28 15:31:55,028:INFO:_display_container: 2
2024-04-28 15:31:55,029:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3111, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 15:31:55,029:INFO:create_model() successfully completed......................................
2024-04-28 15:31:55,299:INFO:SubProcess create_model() end ==================================
2024-04-28 15:31:55,299:INFO:Creating metrics dataframe
2024-04-28 15:31:55,305:INFO:Initializing Decision Tree Classifier
2024-04-28 15:31:55,305:INFO:Total runtime is 0.046568612257639565 minutes
2024-04-28 15:31:55,307:INFO:SubProcess create_model() called ==================================
2024-04-28 15:31:55,307:INFO:Initializing create_model()
2024-04-28 15:31:55,308:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F475CCD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249817D2EB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 15:31:55,308:INFO:Checking exceptions
2024-04-28 15:31:55,308:INFO:Importing libraries
2024-04-28 15:31:55,308:INFO:Copying training dataset
2024-04-28 15:31:55,312:INFO:Defining folds
2024-04-28 15:31:55,312:INFO:Declaring metric variables
2024-04-28 15:31:55,314:INFO:Importing untrained model
2024-04-28 15:31:55,316:INFO:Decision Tree Classifier Imported successfully
2024-04-28 15:31:55,321:INFO:Starting cross validation
2024-04-28 15:31:55,321:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 15:31:56,672:INFO:Calculating mean and std
2024-04-28 15:31:56,674:INFO:Creating metrics dataframe
2024-04-28 15:31:56,677:INFO:Uploading results into container
2024-04-28 15:31:56,678:INFO:Uploading model into container now
2024-04-28 15:31:56,678:INFO:_master_model_container: 2
2024-04-28 15:31:56,679:INFO:_display_container: 2
2024-04-28 15:31:56,679:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3111, splitter='best')
2024-04-28 15:31:56,679:INFO:create_model() successfully completed......................................
2024-04-28 15:31:56,885:INFO:SubProcess create_model() end ==================================
2024-04-28 15:31:56,885:INFO:Creating metrics dataframe
2024-04-28 15:31:56,897:INFO:Initializing create_model()
2024-04-28 15:31:56,897:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F475CCD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3111, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 15:31:56,897:INFO:Checking exceptions
2024-04-28 15:31:56,898:INFO:Importing libraries
2024-04-28 15:31:56,898:INFO:Copying training dataset
2024-04-28 15:31:56,902:INFO:Defining folds
2024-04-28 15:31:56,902:INFO:Declaring metric variables
2024-04-28 15:31:56,902:INFO:Importing untrained model
2024-04-28 15:31:56,902:INFO:Declaring custom model
2024-04-28 15:31:56,903:INFO:Decision Tree Classifier Imported successfully
2024-04-28 15:31:56,903:INFO:Cross validation set to False
2024-04-28 15:31:56,903:INFO:Fitting Model
2024-04-28 15:31:56,954:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3111, splitter='best')
2024-04-28 15:31:56,954:INFO:create_model() successfully completed......................................
2024-04-28 15:31:57,148:INFO:Initializing create_model()
2024-04-28 15:31:57,149:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F475CCD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3111, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 15:31:57,149:INFO:Checking exceptions
2024-04-28 15:31:57,150:INFO:Importing libraries
2024-04-28 15:31:57,150:INFO:Copying training dataset
2024-04-28 15:31:57,154:INFO:Defining folds
2024-04-28 15:31:57,154:INFO:Declaring metric variables
2024-04-28 15:31:57,154:INFO:Importing untrained model
2024-04-28 15:31:57,154:INFO:Declaring custom model
2024-04-28 15:31:57,154:INFO:Logistic Regression Imported successfully
2024-04-28 15:31:57,155:INFO:Cross validation set to False
2024-04-28 15:31:57,155:INFO:Fitting Model
2024-04-28 15:31:57,169:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3111, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 15:31:57,169:INFO:create_model() successfully completed......................................
2024-04-28 15:31:57,361:INFO:_master_model_container: 2
2024-04-28 15:31:57,361:INFO:_display_container: 2
2024-04-28 15:31:57,362:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3111, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3111, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-28 15:31:57,362:INFO:compare_models() successfully completed......................................
2024-04-28 15:31:57,362:INFO:Initializing plot_model()
2024-04-28 15:31:57,363:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3111, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F475CCD0>, system=True)
2024-04-28 15:31:57,363:INFO:Checking exceptions
2024-04-28 15:31:57,366:INFO:Preloading libraries
2024-04-28 15:31:57,367:INFO:Copying training dataset
2024-04-28 15:31:57,367:INFO:Plot type: parameter
2024-04-28 15:31:57,369:INFO:Visual Rendered Successfully
2024-04-28 15:31:57,548:INFO:plot_model() successfully completed......................................
2024-04-28 15:31:57,567:INFO:Initializing predict_model()
2024-04-28 15:31:57,567:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F475CCD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3111, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000249806275E0>)
2024-04-28 15:31:57,567:INFO:Checking exceptions
2024-04-28 15:31:57,567:INFO:Preloading libraries
2024-04-28 15:31:57,897:INFO:Initializing plot_model()
2024-04-28 15:31:57,897:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3111, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F475CCD0>, system=True)
2024-04-28 15:31:57,897:INFO:Checking exceptions
2024-04-28 15:31:57,900:INFO:Preloading libraries
2024-04-28 15:31:57,900:INFO:Copying training dataset
2024-04-28 15:31:57,901:INFO:Plot type: parameter
2024-04-28 15:31:57,903:INFO:Visual Rendered Successfully
2024-04-28 15:31:58,095:INFO:plot_model() successfully completed......................................
2024-04-28 15:31:58,111:INFO:Initializing predict_model()
2024-04-28 15:31:58,111:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249F475CCD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3111, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000249803434C0>)
2024-04-28 15:31:58,111:INFO:Checking exceptions
2024-04-28 15:31:58,111:INFO:Preloading libraries
2024-04-28 15:31:58,439:INFO:Initializing load_model()
2024-04-28 15:31:58,439:INFO:load_model(model_name=./model_kobe, platform=None, authentication=None, verbose=True)
2024-04-28 15:31:58,489:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\mlflow\types\utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-28 15:32:00,565:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_15520\1973998042.py:83: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-28 15:32:00,596:INFO:PyCaret ClassificationExperiment
2024-04-28 15:32:00,596:INFO:Logging name: Projeto Kobe
2024-04-28 15:32:00,596:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 15:32:00,596:INFO:version 3.2.0
2024-04-28 15:32:00,596:INFO:Initializing setup()
2024-04-28 15:32:00,596:INFO:self.USI: 2c54
2024-04-28 15:32:00,596:INFO:self._variable_keys: {'exp_name_log', 'exp_id', 'target_param', 'seed', 'idx', 'X', 'X_test', 'y_test', 'html_param', 'fold_groups_param', 'X_train', 'y_train', 'gpu_param', '_available_plots', 'log_plots_param', 'USI', 'n_jobs_param', 'data', 'fold_generator', 'fix_imbalance', 'memory', 'y', '_ml_usecase', 'pipeline', 'fold_shuffle_param', 'is_multiclass', 'logging_param', 'gpu_n_jobs_param'}
2024-04-28 15:32:00,596:INFO:Checking environment
2024-04-28 15:32:00,596:INFO:python_version: 3.8.0
2024-04-28 15:32:00,597:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 15:32:00,597:INFO:machine: AMD64
2024-04-28 15:32:00,597:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 15:32:00,602:INFO:Memory: svmem(total=34301427712, available=19619786752, percent=42.8, used=14681640960, free=19619786752)
2024-04-28 15:32:00,603:INFO:Physical Core: 6
2024-04-28 15:32:00,603:INFO:Logical Core: 12
2024-04-28 15:32:00,603:INFO:Checking libraries
2024-04-28 15:32:00,603:INFO:System:
2024-04-28 15:32:00,603:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 15:32:00,603:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 15:32:00,603:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 15:32:00,603:INFO:PyCaret required dependencies:
2024-04-28 15:32:00,603:INFO:                 pip: 24.0
2024-04-28 15:32:00,603:INFO:          setuptools: 69.5.1
2024-04-28 15:32:00,603:INFO:             pycaret: 3.2.0
2024-04-28 15:32:00,603:INFO:             IPython: 8.12.3
2024-04-28 15:32:00,603:INFO:          ipywidgets: 8.1.2
2024-04-28 15:32:00,603:INFO:                tqdm: 4.66.2
2024-04-28 15:32:00,603:INFO:               numpy: 1.24.4
2024-04-28 15:32:00,603:INFO:              pandas: 1.5.3
2024-04-28 15:32:00,603:INFO:              jinja2: 3.1.3
2024-04-28 15:32:00,603:INFO:               scipy: 1.10.1
2024-04-28 15:32:00,603:INFO:              joblib: 1.3.2
2024-04-28 15:32:00,603:INFO:             sklearn: 1.2.0
2024-04-28 15:32:00,603:INFO:                pyod: 1.1.3
2024-04-28 15:32:00,603:INFO:            imblearn: 0.12.2
2024-04-28 15:32:00,603:INFO:   category_encoders: 2.6.3
2024-04-28 15:32:00,603:INFO:            lightgbm: 4.3.0
2024-04-28 15:32:00,603:INFO:               numba: 0.58.1
2024-04-28 15:32:00,603:INFO:            requests: 2.31.0
2024-04-28 15:32:00,603:INFO:          matplotlib: 3.6.0
2024-04-28 15:32:00,603:INFO:          scikitplot: 0.3.7
2024-04-28 15:32:00,603:INFO:         yellowbrick: 1.5
2024-04-28 15:32:00,603:INFO:              plotly: 5.20.0
2024-04-28 15:32:00,604:INFO:    plotly-resampler: Not installed
2024-04-28 15:32:00,604:INFO:             kaleido: 0.2.1
2024-04-28 15:32:00,604:INFO:           schemdraw: 0.15
2024-04-28 15:32:00,604:INFO:         statsmodels: 0.14.1
2024-04-28 15:32:00,604:INFO:              sktime: 0.21.1
2024-04-28 15:32:00,604:INFO:               tbats: 1.1.3
2024-04-28 15:32:00,604:INFO:            pmdarima: 2.0.4
2024-04-28 15:32:00,604:INFO:              psutil: 5.9.8
2024-04-28 15:32:00,604:INFO:          markupsafe: 2.1.5
2024-04-28 15:32:00,604:INFO:             pickle5: Not installed
2024-04-28 15:32:00,604:INFO:         cloudpickle: 3.0.0
2024-04-28 15:32:00,604:INFO:         deprecation: 2.1.0
2024-04-28 15:32:00,604:INFO:              xxhash: 3.4.1
2024-04-28 15:32:00,604:INFO:           wurlitzer: Not installed
2024-04-28 15:32:00,604:INFO:PyCaret optional dependencies:
2024-04-28 15:32:00,604:INFO:                shap: Not installed
2024-04-28 15:32:00,604:INFO:           interpret: Not installed
2024-04-28 15:32:00,604:INFO:                umap: Not installed
2024-04-28 15:32:00,604:INFO:     ydata_profiling: Not installed
2024-04-28 15:32:00,604:INFO:  explainerdashboard: Not installed
2024-04-28 15:32:00,604:INFO:             autoviz: Not installed
2024-04-28 15:32:00,604:INFO:           fairlearn: Not installed
2024-04-28 15:32:00,604:INFO:          deepchecks: Not installed
2024-04-28 15:32:00,604:INFO:             xgboost: Not installed
2024-04-28 15:32:00,604:INFO:            catboost: Not installed
2024-04-28 15:32:00,604:INFO:              kmodes: Not installed
2024-04-28 15:32:00,604:INFO:             mlxtend: Not installed
2024-04-28 15:32:00,604:INFO:       statsforecast: Not installed
2024-04-28 15:32:00,604:INFO:        tune_sklearn: Not installed
2024-04-28 15:32:00,604:INFO:                 ray: Not installed
2024-04-28 15:32:00,604:INFO:            hyperopt: Not installed
2024-04-28 15:32:00,604:INFO:              optuna: Not installed
2024-04-28 15:32:00,604:INFO:               skopt: Not installed
2024-04-28 15:32:00,604:INFO:              mlflow: 2.11.3
2024-04-28 15:32:00,604:INFO:              gradio: Not installed
2024-04-28 15:32:00,604:INFO:             fastapi: Not installed
2024-04-28 15:32:00,604:INFO:             uvicorn: Not installed
2024-04-28 15:32:00,604:INFO:              m2cgen: Not installed
2024-04-28 15:32:00,605:INFO:           evidently: Not installed
2024-04-28 15:32:00,605:INFO:               fugue: Not installed
2024-04-28 15:32:00,605:INFO:           streamlit: 1.33.0
2024-04-28 15:32:00,605:INFO:             prophet: Not installed
2024-04-28 15:32:00,605:INFO:None
2024-04-28 15:32:00,605:INFO:Set up data.
2024-04-28 15:32:00,609:INFO:Set up folding strategy.
2024-04-28 15:32:00,609:INFO:Set up train/test split.
2024-04-28 15:32:00,616:INFO:Set up index.
2024-04-28 15:32:00,616:INFO:Assigning column types.
2024-04-28 15:32:00,618:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 15:32:00,652:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 15:32:00,652:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:32:00,673:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:32:00,673:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:32:00,707:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 15:32:00,708:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:32:00,729:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:32:00,729:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:32:00,730:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 15:32:00,764:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:32:00,785:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:32:00,785:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:32:00,819:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:32:00,841:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:32:00,841:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:32:00,841:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 15:32:00,897:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:32:00,897:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:32:00,952:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:32:00,952:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:32:00,953:INFO:Preparing preprocessing pipeline...
2024-04-28 15:32:00,954:INFO:Set up simple imputation.
2024-04-28 15:32:00,967:INFO:Finished creating preprocessing pipeline.
2024-04-28 15:32:00,969:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-04-28 15:32:00,969:INFO:Creating final display dataframe.
2024-04-28 15:32:01,008:INFO:Setup _display_container:                     Description            Value
0                    Session id             3873
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (20285, 7)
4        Transformed data shape       (20285, 7)
5   Transformed train set shape       (14199, 7)
6    Transformed test set shape        (6086, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name     Projeto Kobe
18                          USI             2c54
2024-04-28 15:32:01,062:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:32:01,062:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:32:01,118:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:32:01,118:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:32:01,119:INFO:Logging experiment in loggers
2024-04-28 15:32:01,155:INFO:SubProcess save_model() called ==================================
2024-04-28 15:32:01,159:INFO:Initializing save_model()
2024-04-28 15:32:01,159:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), model_name=C:\Users\jpsar\AppData\Local\Temp\tmpn66s2jbg\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-28 15:32:01,159:INFO:Adding model into prep_pipe
2024-04-28 15:32:01,159:WARNING:Only Model saved as it was a pipeline.
2024-04-28 15:32:01,161:INFO:C:\Users\jpsar\AppData\Local\Temp\tmpn66s2jbg\Transformation Pipeline.pkl saved in current working directory
2024-04-28 15:32:01,164:INFO:Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-04-28 15:32:01,164:INFO:save_model() successfully completed......................................
2024-04-28 15:32:01,384:INFO:SubProcess save_model() end ==================================
2024-04-28 15:32:01,396:INFO:setup() successfully completed in 0.52s...............
2024-04-28 15:32:01,401:INFO:Initializing compare_models()
2024-04-28 15:32:01,401:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002498057F670>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=precision, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002498057F670>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'precision', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 15:32:01,401:INFO:Checking exceptions
2024-04-28 15:32:01,404:INFO:Preparing display monitor
2024-04-28 15:32:01,419:INFO:Initializing Logistic Regression
2024-04-28 15:32:01,419:INFO:Total runtime is 0.0 minutes
2024-04-28 15:32:01,421:INFO:SubProcess create_model() called ==================================
2024-04-28 15:32:01,421:INFO:Initializing create_model()
2024-04-28 15:32:01,421:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002498057F670>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249F07095B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 15:32:01,421:INFO:Checking exceptions
2024-04-28 15:32:01,421:INFO:Importing libraries
2024-04-28 15:32:01,421:INFO:Copying training dataset
2024-04-28 15:32:01,425:INFO:Defining folds
2024-04-28 15:32:01,426:INFO:Declaring metric variables
2024-04-28 15:32:01,428:INFO:Importing untrained model
2024-04-28 15:32:01,430:INFO:Logistic Regression Imported successfully
2024-04-28 15:32:01,433:INFO:Starting cross validation
2024-04-28 15:32:01,434:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 15:32:01,533:INFO:Calculating mean and std
2024-04-28 15:32:01,533:INFO:Creating metrics dataframe
2024-04-28 15:32:01,537:INFO:Uploading results into container
2024-04-28 15:32:01,537:INFO:Uploading model into container now
2024-04-28 15:32:01,537:INFO:_master_model_container: 1
2024-04-28 15:32:01,537:INFO:_display_container: 2
2024-04-28 15:32:01,538:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3873, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 15:32:01,538:INFO:create_model() successfully completed......................................
2024-04-28 15:32:01,733:INFO:SubProcess create_model() end ==================================
2024-04-28 15:32:01,733:INFO:Creating metrics dataframe
2024-04-28 15:32:01,740:INFO:Initializing Decision Tree Classifier
2024-04-28 15:32:01,740:INFO:Total runtime is 0.005351209640502929 minutes
2024-04-28 15:32:01,743:INFO:SubProcess create_model() called ==================================
2024-04-28 15:32:01,743:INFO:Initializing create_model()
2024-04-28 15:32:01,743:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002498057F670>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000249F07095B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 15:32:01,743:INFO:Checking exceptions
2024-04-28 15:32:01,743:INFO:Importing libraries
2024-04-28 15:32:01,743:INFO:Copying training dataset
2024-04-28 15:32:01,748:INFO:Defining folds
2024-04-28 15:32:01,748:INFO:Declaring metric variables
2024-04-28 15:32:01,750:INFO:Importing untrained model
2024-04-28 15:32:01,753:INFO:Decision Tree Classifier Imported successfully
2024-04-28 15:32:01,757:INFO:Starting cross validation
2024-04-28 15:32:01,758:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 15:32:01,864:INFO:Calculating mean and std
2024-04-28 15:32:01,864:INFO:Creating metrics dataframe
2024-04-28 15:32:01,867:INFO:Uploading results into container
2024-04-28 15:32:01,867:INFO:Uploading model into container now
2024-04-28 15:32:01,867:INFO:_master_model_container: 2
2024-04-28 15:32:01,867:INFO:_display_container: 2
2024-04-28 15:32:01,867:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3873, splitter='best')
2024-04-28 15:32:01,867:INFO:create_model() successfully completed......................................
2024-04-28 15:32:02,048:INFO:SubProcess create_model() end ==================================
2024-04-28 15:32:02,049:INFO:Creating metrics dataframe
2024-04-28 15:32:02,060:INFO:Initializing create_model()
2024-04-28 15:32:02,060:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002498057F670>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3873, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 15:32:02,060:INFO:Checking exceptions
2024-04-28 15:32:02,061:INFO:Importing libraries
2024-04-28 15:32:02,062:INFO:Copying training dataset
2024-04-28 15:32:02,065:INFO:Defining folds
2024-04-28 15:32:02,065:INFO:Declaring metric variables
2024-04-28 15:32:02,065:INFO:Importing untrained model
2024-04-28 15:32:02,065:INFO:Declaring custom model
2024-04-28 15:32:02,066:INFO:Logistic Regression Imported successfully
2024-04-28 15:32:02,066:INFO:Cross validation set to False
2024-04-28 15:32:02,066:INFO:Fitting Model
2024-04-28 15:32:02,102:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3873, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 15:32:02,102:INFO:create_model() successfully completed......................................
2024-04-28 15:32:02,298:INFO:Creating Dashboard logs
2024-04-28 15:32:02,300:INFO:Model: Logistic Regression
2024-04-28 15:32:02,313:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 3873, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-04-28 15:32:02,367:INFO:Initializing predict_model()
2024-04-28 15:32:02,368:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002498057F670>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3873, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000249F461D160>)
2024-04-28 15:32:02,368:INFO:Checking exceptions
2024-04-28 15:32:02,368:INFO:Preloading libraries
2024-04-28 15:32:02,602:INFO:SubProcess plot_model() called ==================================
2024-04-28 15:32:02,602:INFO:Initializing plot_model()
2024-04-28 15:32:02,602:INFO:plot_model(plot=auc, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3873, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmpgoa2c5pd, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002498057F670>, system=False)
2024-04-28 15:32:02,602:INFO:Checking exceptions
2024-04-28 15:32:02,604:INFO:Preloading libraries
2024-04-28 15:32:02,604:INFO:Copying training dataset
2024-04-28 15:32:02,604:INFO:Plot type: auc
2024-04-28 15:32:02,643:INFO:Fitting Model
2024-04-28 15:32:02,643:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 15:32:02,643:INFO:Scoring test/hold-out set
2024-04-28 15:32:02,659:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmpgoa2c5pd\AUC.png'
2024-04-28 15:32:02,824:INFO:Visual Rendered Successfully
2024-04-28 15:32:03,003:INFO:plot_model() successfully completed......................................
2024-04-28 15:32:03,008:INFO:Initializing plot_model()
2024-04-28 15:32:03,008:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3873, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmpgoa2c5pd, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002498057F670>, system=False)
2024-04-28 15:32:03,008:INFO:Checking exceptions
2024-04-28 15:32:03,010:INFO:Preloading libraries
2024-04-28 15:32:03,010:INFO:Copying training dataset
2024-04-28 15:32:03,010:INFO:Plot type: confusion_matrix
2024-04-28 15:32:03,049:INFO:Fitting Model
2024-04-28 15:32:03,049:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 15:32:03,049:INFO:Scoring test/hold-out set
2024-04-28 15:32:03,062:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmpgoa2c5pd\Confusion Matrix.png'
2024-04-28 15:32:03,145:INFO:Visual Rendered Successfully
2024-04-28 15:32:03,338:INFO:plot_model() successfully completed......................................
2024-04-28 15:32:03,344:INFO:Initializing plot_model()
2024-04-28 15:32:03,344:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3873, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmpgoa2c5pd, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002498057F670>, system=False)
2024-04-28 15:32:03,344:INFO:Checking exceptions
2024-04-28 15:32:03,349:INFO:Preloading libraries
2024-04-28 15:32:03,349:INFO:Copying training dataset
2024-04-28 15:32:03,349:INFO:Plot type: feature
2024-04-28 15:32:03,412:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmpgoa2c5pd\Feature Importance.png'
2024-04-28 15:32:03,532:INFO:Visual Rendered Successfully
2024-04-28 15:32:03,715:INFO:plot_model() successfully completed......................................
2024-04-28 15:32:03,721:INFO:SubProcess plot_model() end ==================================
2024-04-28 15:32:03,942:INFO:Creating Dashboard logs
2024-04-28 15:32:03,945:INFO:Model: Decision Tree Classifier
2024-04-28 15:32:03,957:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 3873, 'splitter': 'best'}
2024-04-28 15:32:04,247:INFO:_master_model_container: 2
2024-04-28 15:32:04,247:INFO:_display_container: 2
2024-04-28 15:32:04,248:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3873, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 15:32:04,248:INFO:compare_models() successfully completed......................................
2024-04-28 15:32:04,249:INFO:Initializing plot_model()
2024-04-28 15:32:04,249:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3873, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002498057F670>, system=True)
2024-04-28 15:32:04,249:INFO:Checking exceptions
2024-04-28 15:32:04,252:INFO:Preloading libraries
2024-04-28 15:32:04,252:INFO:Copying training dataset
2024-04-28 15:32:04,252:INFO:Plot type: auc
2024-04-28 15:32:04,289:INFO:Fitting Model
2024-04-28 15:32:04,289:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 15:32:04,290:INFO:Scoring test/hold-out set
2024-04-28 15:32:04,305:INFO:Saving 'AUC.png'
2024-04-28 15:32:04,469:INFO:Visual Rendered Successfully
2024-04-28 15:32:04,668:INFO:plot_model() successfully completed......................................
2024-04-28 15:32:04,673:INFO:Initializing plot_model()
2024-04-28 15:32:04,673:INFO:plot_model(plot=pr, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3873, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002498057F670>, system=True)
2024-04-28 15:32:04,673:INFO:Checking exceptions
2024-04-28 15:32:04,677:INFO:Preloading libraries
2024-04-28 15:32:04,677:INFO:Copying training dataset
2024-04-28 15:32:04,677:INFO:Plot type: pr
2024-04-28 15:32:04,715:INFO:Fitting Model
2024-04-28 15:32:04,716:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 15:32:04,716:INFO:Scoring test/hold-out set
2024-04-28 15:32:04,729:INFO:Saving 'Precision Recall.png'
2024-04-28 15:32:04,894:INFO:Visual Rendered Successfully
2024-04-28 15:32:05,079:INFO:plot_model() successfully completed......................................
2024-04-28 15:32:05,085:INFO:Initializing plot_model()
2024-04-28 15:32:05,085:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3873, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002498057F670>, system=True)
2024-04-28 15:32:05,085:INFO:Checking exceptions
2024-04-28 15:32:05,088:INFO:Preloading libraries
2024-04-28 15:32:05,088:INFO:Copying training dataset
2024-04-28 15:32:05,088:INFO:Plot type: confusion_matrix
2024-04-28 15:32:05,125:INFO:Fitting Model
2024-04-28 15:32:05,125:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 15:32:05,125:INFO:Scoring test/hold-out set
2024-04-28 15:32:05,138:INFO:Saving 'Confusion Matrix.png'
2024-04-28 15:32:05,218:INFO:Visual Rendered Successfully
2024-04-28 15:32:05,414:INFO:plot_model() successfully completed......................................
2024-04-28 15:32:05,416:INFO:Initializing plot_model()
2024-04-28 15:32:05,416:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3873, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002498057F670>, system=True)
2024-04-28 15:32:05,416:INFO:Checking exceptions
2024-04-28 15:32:05,419:INFO:Preloading libraries
2024-04-28 15:32:05,419:INFO:Copying training dataset
2024-04-28 15:32:05,419:INFO:Plot type: learning
2024-04-28 15:32:05,459:INFO:Fitting Model
2024-04-28 15:32:08,063:INFO:Saving 'Learning Curve.png'
2024-04-28 15:32:08,215:INFO:Visual Rendered Successfully
2024-04-28 15:32:08,404:INFO:plot_model() successfully completed......................................
2024-04-28 15:32:08,410:INFO:Initializing plot_model()
2024-04-28 15:32:08,410:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3873, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002498057F670>, system=True)
2024-04-28 15:32:08,410:INFO:Checking exceptions
2024-04-28 15:32:08,414:INFO:Preloading libraries
2024-04-28 15:32:08,414:INFO:Copying training dataset
2024-04-28 15:32:08,414:INFO:Plot type: feature
2024-04-28 15:32:08,446:INFO:Saving 'Feature Importance.png'
2024-04-28 15:32:08,556:INFO:Visual Rendered Successfully
2024-04-28 15:32:08,737:INFO:plot_model() successfully completed......................................
2024-04-28 15:32:08,764:INFO:Initializing predict_model()
2024-04-28 15:32:08,765:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002498057F670>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3873, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024980362940>)
2024-04-28 15:32:08,765:INFO:Checking exceptions
2024-04-28 15:32:08,765:INFO:Preloading libraries
2024-04-28 15:32:09,004:INFO:Initializing save_model()
2024-04-28 15:32:09,004:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3873, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=./model_kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-28 15:32:09,005:INFO:Adding model into prep_pipe
2024-04-28 15:32:09,006:INFO:./model_kobe.pkl saved in current working directory
2024-04-28 15:32:09,009:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=3873,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-04-28 15:32:09,009:INFO:save_model() successfully completed......................................
2024-04-28 15:32:09,193:INFO:Initializing load_model()
2024-04-28 15:32:09,193:INFO:load_model(model_name=./model_kobe, platform=None, authentication=None, verbose=True)
2024-04-28 15:32:09,256:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\mlflow\types\utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-28 15:32:11,243:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_15520\2127829727.py:28: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-28 15:32:11,246:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_15520\2127829727.py:29: FutureWarning: ``mlflow.tracking.client.MlflowClient.transition_model_version_stage`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  client.transition_model_version_stage(

2024-04-28 15:32:13,356:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\mlflow\store\artifact\utils\models.py:32: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-04-28 15:33:34,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-28 15:33:34,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-28 15:33:34,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-28 15:33:34,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-28 15:33:37,200:INFO:PyCaret ClassificationExperiment
2024-04-28 15:33:37,200:INFO:Logging name: clf-default-name
2024-04-28 15:33:37,200:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 15:33:37,200:INFO:version 3.2.0
2024-04-28 15:33:37,200:INFO:Initializing setup()
2024-04-28 15:33:37,200:INFO:self.USI: e30b
2024-04-28 15:33:37,200:INFO:self._variable_keys: {'X_test', 'fold_shuffle_param', 'logging_param', 'log_plots_param', 'memory', 'target_param', 'X_train', 'fix_imbalance', 'gpu_param', 'pipeline', 'fold_generator', 'is_multiclass', 'fold_groups_param', 'seed', 'n_jobs_param', 'USI', 'exp_id', 'y_train', 'data', '_ml_usecase', 'idx', '_available_plots', 'html_param', 'gpu_n_jobs_param', 'y_test', 'exp_name_log', 'y', 'X'}
2024-04-28 15:33:37,200:INFO:Checking environment
2024-04-28 15:33:37,200:INFO:python_version: 3.8.0
2024-04-28 15:33:37,200:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 15:33:37,200:INFO:machine: AMD64
2024-04-28 15:33:37,200:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 15:33:37,205:INFO:Memory: svmem(total=34301427712, available=20919488512, percent=39.0, used=13381939200, free=20919488512)
2024-04-28 15:33:37,206:INFO:Physical Core: 6
2024-04-28 15:33:37,206:INFO:Logical Core: 12
2024-04-28 15:33:37,206:INFO:Checking libraries
2024-04-28 15:33:37,206:INFO:System:
2024-04-28 15:33:37,206:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 15:33:37,206:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 15:33:37,206:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 15:33:37,206:INFO:PyCaret required dependencies:
2024-04-28 15:33:37,220:INFO:                 pip: 24.0
2024-04-28 15:33:37,220:INFO:          setuptools: 69.5.1
2024-04-28 15:33:37,220:INFO:             pycaret: 3.2.0
2024-04-28 15:33:37,220:INFO:             IPython: 8.12.3
2024-04-28 15:33:37,220:INFO:          ipywidgets: 8.1.2
2024-04-28 15:33:37,220:INFO:                tqdm: 4.66.2
2024-04-28 15:33:37,220:INFO:               numpy: 1.24.4
2024-04-28 15:33:37,220:INFO:              pandas: 1.5.3
2024-04-28 15:33:37,220:INFO:              jinja2: 3.1.3
2024-04-28 15:33:37,220:INFO:               scipy: 1.10.1
2024-04-28 15:33:37,220:INFO:              joblib: 1.3.2
2024-04-28 15:33:37,220:INFO:             sklearn: 1.2.0
2024-04-28 15:33:37,220:INFO:                pyod: 1.1.3
2024-04-28 15:33:37,220:INFO:            imblearn: 0.12.2
2024-04-28 15:33:37,220:INFO:   category_encoders: 2.6.3
2024-04-28 15:33:37,220:INFO:            lightgbm: 4.3.0
2024-04-28 15:33:37,220:INFO:               numba: 0.58.1
2024-04-28 15:33:37,220:INFO:            requests: 2.31.0
2024-04-28 15:33:37,220:INFO:          matplotlib: 3.6.0
2024-04-28 15:33:37,220:INFO:          scikitplot: 0.3.7
2024-04-28 15:33:37,220:INFO:         yellowbrick: 1.5
2024-04-28 15:33:37,220:INFO:              plotly: 5.20.0
2024-04-28 15:33:37,220:INFO:    plotly-resampler: Not installed
2024-04-28 15:33:37,220:INFO:             kaleido: 0.2.1
2024-04-28 15:33:37,220:INFO:           schemdraw: 0.15
2024-04-28 15:33:37,220:INFO:         statsmodels: 0.14.1
2024-04-28 15:33:37,220:INFO:              sktime: 0.21.1
2024-04-28 15:33:37,220:INFO:               tbats: 1.1.3
2024-04-28 15:33:37,220:INFO:            pmdarima: 2.0.4
2024-04-28 15:33:37,220:INFO:              psutil: 5.9.8
2024-04-28 15:33:37,220:INFO:          markupsafe: 2.1.5
2024-04-28 15:33:37,221:INFO:             pickle5: Not installed
2024-04-28 15:33:37,221:INFO:         cloudpickle: 3.0.0
2024-04-28 15:33:37,221:INFO:         deprecation: 2.1.0
2024-04-28 15:33:37,221:INFO:              xxhash: 3.4.1
2024-04-28 15:33:37,221:INFO:           wurlitzer: Not installed
2024-04-28 15:33:37,221:INFO:PyCaret optional dependencies:
2024-04-28 15:33:37,228:INFO:                shap: Not installed
2024-04-28 15:33:37,228:INFO:           interpret: Not installed
2024-04-28 15:33:37,228:INFO:                umap: Not installed
2024-04-28 15:33:37,228:INFO:     ydata_profiling: Not installed
2024-04-28 15:33:37,228:INFO:  explainerdashboard: Not installed
2024-04-28 15:33:37,228:INFO:             autoviz: Not installed
2024-04-28 15:33:37,228:INFO:           fairlearn: Not installed
2024-04-28 15:33:37,228:INFO:          deepchecks: Not installed
2024-04-28 15:33:37,228:INFO:             xgboost: Not installed
2024-04-28 15:33:37,228:INFO:            catboost: Not installed
2024-04-28 15:33:37,228:INFO:              kmodes: Not installed
2024-04-28 15:33:37,228:INFO:             mlxtend: Not installed
2024-04-28 15:33:37,228:INFO:       statsforecast: Not installed
2024-04-28 15:33:37,228:INFO:        tune_sklearn: Not installed
2024-04-28 15:33:37,228:INFO:                 ray: Not installed
2024-04-28 15:33:37,228:INFO:            hyperopt: Not installed
2024-04-28 15:33:37,229:INFO:              optuna: Not installed
2024-04-28 15:33:37,229:INFO:               skopt: Not installed
2024-04-28 15:33:37,229:INFO:              mlflow: 2.11.3
2024-04-28 15:33:37,229:INFO:              gradio: Not installed
2024-04-28 15:33:37,229:INFO:             fastapi: Not installed
2024-04-28 15:33:37,229:INFO:             uvicorn: Not installed
2024-04-28 15:33:37,229:INFO:              m2cgen: Not installed
2024-04-28 15:33:37,229:INFO:           evidently: Not installed
2024-04-28 15:33:37,229:INFO:               fugue: Not installed
2024-04-28 15:33:37,229:INFO:           streamlit: 1.33.0
2024-04-28 15:33:37,229:INFO:             prophet: Not installed
2024-04-28 15:33:37,229:INFO:None
2024-04-28 15:33:37,229:INFO:Set up data.
2024-04-28 15:33:37,234:INFO:Set up folding strategy.
2024-04-28 15:33:37,234:INFO:Set up train/test split.
2024-04-28 15:33:37,234:INFO:Set up data.
2024-04-28 15:33:37,237:INFO:Set up index.
2024-04-28 15:33:37,237:INFO:Assigning column types.
2024-04-28 15:33:37,240:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 15:33:37,275:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 15:33:37,276:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:33:37,301:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:37,301:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:37,334:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 15:33:37,335:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:33:37,356:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:37,356:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:37,357:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 15:33:37,393:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:33:37,414:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:37,415:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:37,449:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:33:37,473:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:37,473:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:37,473:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 15:33:37,527:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:37,527:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:37,582:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:37,582:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:37,584:INFO:Preparing preprocessing pipeline...
2024-04-28 15:33:37,585:INFO:Set up simple imputation.
2024-04-28 15:33:37,585:INFO:Set up feature normalization.
2024-04-28 15:33:37,603:INFO:Finished creating preprocessing pipeline.
2024-04-28 15:33:37,607:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-28 15:33:37,607:INFO:Creating final display dataframe.
2024-04-28 15:33:37,656:INFO:Setup _display_container:                     Description             Value
0                    Session id              3088
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              e30b
2024-04-28 15:33:37,716:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:37,716:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:37,773:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:37,773:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:37,773:INFO:setup() successfully completed in 0.57s...............
2024-04-28 15:33:37,774:INFO:Initializing compare_models()
2024-04-28 15:33:37,774:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020439A5CE50>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000020439A5CE50>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 15:33:37,774:INFO:Checking exceptions
2024-04-28 15:33:37,777:INFO:Preparing display monitor
2024-04-28 15:33:37,792:INFO:Initializing Logistic Regression
2024-04-28 15:33:37,792:INFO:Total runtime is 0.0 minutes
2024-04-28 15:33:37,795:INFO:SubProcess create_model() called ==================================
2024-04-28 15:33:37,795:INFO:Initializing create_model()
2024-04-28 15:33:37,795:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020439A5CE50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020439CCEE80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 15:33:37,795:INFO:Checking exceptions
2024-04-28 15:33:37,796:INFO:Importing libraries
2024-04-28 15:33:37,796:INFO:Copying training dataset
2024-04-28 15:33:37,800:INFO:Defining folds
2024-04-28 15:33:37,800:INFO:Declaring metric variables
2024-04-28 15:33:37,802:INFO:Importing untrained model
2024-04-28 15:33:37,804:INFO:Logistic Regression Imported successfully
2024-04-28 15:33:37,808:INFO:Starting cross validation
2024-04-28 15:33:37,809:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 15:33:40,296:INFO:Calculating mean and std
2024-04-28 15:33:40,299:INFO:Creating metrics dataframe
2024-04-28 15:33:40,306:INFO:Uploading results into container
2024-04-28 15:33:40,307:INFO:Uploading model into container now
2024-04-28 15:33:40,308:INFO:_master_model_container: 1
2024-04-28 15:33:40,308:INFO:_display_container: 2
2024-04-28 15:33:40,309:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3088, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 15:33:40,309:INFO:create_model() successfully completed......................................
2024-04-28 15:33:40,490:INFO:SubProcess create_model() end ==================================
2024-04-28 15:33:40,490:INFO:Creating metrics dataframe
2024-04-28 15:33:40,496:INFO:Initializing Decision Tree Classifier
2024-04-28 15:33:40,496:INFO:Total runtime is 0.045060384273529056 minutes
2024-04-28 15:33:40,498:INFO:SubProcess create_model() called ==================================
2024-04-28 15:33:40,498:INFO:Initializing create_model()
2024-04-28 15:33:40,498:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020439A5CE50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020439CCEE80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 15:33:40,498:INFO:Checking exceptions
2024-04-28 15:33:40,498:INFO:Importing libraries
2024-04-28 15:33:40,498:INFO:Copying training dataset
2024-04-28 15:33:40,502:INFO:Defining folds
2024-04-28 15:33:40,503:INFO:Declaring metric variables
2024-04-28 15:33:40,505:INFO:Importing untrained model
2024-04-28 15:33:40,507:INFO:Decision Tree Classifier Imported successfully
2024-04-28 15:33:40,513:INFO:Starting cross validation
2024-04-28 15:33:40,514:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 15:33:41,870:INFO:Calculating mean and std
2024-04-28 15:33:41,872:INFO:Creating metrics dataframe
2024-04-28 15:33:41,877:INFO:Uploading results into container
2024-04-28 15:33:41,878:INFO:Uploading model into container now
2024-04-28 15:33:41,878:INFO:_master_model_container: 2
2024-04-28 15:33:41,878:INFO:_display_container: 2
2024-04-28 15:33:41,878:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3088, splitter='best')
2024-04-28 15:33:41,878:INFO:create_model() successfully completed......................................
2024-04-28 15:33:42,001:INFO:SubProcess create_model() end ==================================
2024-04-28 15:33:42,001:INFO:Creating metrics dataframe
2024-04-28 15:33:42,015:INFO:Initializing create_model()
2024-04-28 15:33:42,015:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020439A5CE50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3088, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 15:33:42,015:INFO:Checking exceptions
2024-04-28 15:33:42,016:INFO:Importing libraries
2024-04-28 15:33:42,016:INFO:Copying training dataset
2024-04-28 15:33:42,020:INFO:Defining folds
2024-04-28 15:33:42,020:INFO:Declaring metric variables
2024-04-28 15:33:42,020:INFO:Importing untrained model
2024-04-28 15:33:42,020:INFO:Declaring custom model
2024-04-28 15:33:42,020:INFO:Decision Tree Classifier Imported successfully
2024-04-28 15:33:42,021:INFO:Cross validation set to False
2024-04-28 15:33:42,021:INFO:Fitting Model
2024-04-28 15:33:42,069:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3088, splitter='best')
2024-04-28 15:33:42,069:INFO:create_model() successfully completed......................................
2024-04-28 15:33:42,171:INFO:Initializing create_model()
2024-04-28 15:33:42,171:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020439A5CE50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3088, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 15:33:42,171:INFO:Checking exceptions
2024-04-28 15:33:42,173:INFO:Importing libraries
2024-04-28 15:33:42,173:INFO:Copying training dataset
2024-04-28 15:33:42,176:INFO:Defining folds
2024-04-28 15:33:42,176:INFO:Declaring metric variables
2024-04-28 15:33:42,176:INFO:Importing untrained model
2024-04-28 15:33:42,176:INFO:Declaring custom model
2024-04-28 15:33:42,177:INFO:Logistic Regression Imported successfully
2024-04-28 15:33:42,177:INFO:Cross validation set to False
2024-04-28 15:33:42,177:INFO:Fitting Model
2024-04-28 15:33:42,192:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3088, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 15:33:42,192:INFO:create_model() successfully completed......................................
2024-04-28 15:33:42,298:INFO:_master_model_container: 2
2024-04-28 15:33:42,298:INFO:_display_container: 2
2024-04-28 15:33:42,298:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3088, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3088, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-28 15:33:42,299:INFO:compare_models() successfully completed......................................
2024-04-28 15:33:42,300:INFO:Initializing plot_model()
2024-04-28 15:33:42,300:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3088, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020439A5CE50>, system=True)
2024-04-28 15:33:42,300:INFO:Checking exceptions
2024-04-28 15:33:42,303:INFO:Preloading libraries
2024-04-28 15:33:42,304:INFO:Copying training dataset
2024-04-28 15:33:42,304:INFO:Plot type: parameter
2024-04-28 15:33:42,306:INFO:Visual Rendered Successfully
2024-04-28 15:33:42,405:INFO:plot_model() successfully completed......................................
2024-04-28 15:33:42,431:INFO:Initializing predict_model()
2024-04-28 15:33:42,431:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020439A5CE50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3088, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002043A302700>)
2024-04-28 15:33:42,431:INFO:Checking exceptions
2024-04-28 15:33:42,431:INFO:Preloading libraries
2024-04-28 15:33:42,677:INFO:Initializing plot_model()
2024-04-28 15:33:42,677:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3088, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020439A5CE50>, system=True)
2024-04-28 15:33:42,677:INFO:Checking exceptions
2024-04-28 15:33:42,680:INFO:Preloading libraries
2024-04-28 15:33:42,681:INFO:Copying training dataset
2024-04-28 15:33:42,681:INFO:Plot type: parameter
2024-04-28 15:33:42,684:INFO:Visual Rendered Successfully
2024-04-28 15:33:42,788:INFO:plot_model() successfully completed......................................
2024-04-28 15:33:42,804:INFO:Initializing predict_model()
2024-04-28 15:33:42,804:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020439A5CE50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3088, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020433AC68B0>)
2024-04-28 15:33:42,804:INFO:Checking exceptions
2024-04-28 15:33:42,804:INFO:Preloading libraries
2024-04-28 15:33:43,045:INFO:Initializing load_model()
2024-04-28 15:33:43,045:INFO:load_model(model_name=./model_kobe, platform=None, authentication=None, verbose=True)
2024-04-28 15:33:43,100:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\mlflow\types\utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-28 15:33:45,556:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\_distutils_hack\__init__.py:26: UserWarning: Setuptools is replacing distutils.
  warnings.warn("Setuptools is replacing distutils.")

2024-04-28 15:33:45,618:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_6752\1973998042.py:83: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-28 15:33:45,649:INFO:PyCaret ClassificationExperiment
2024-04-28 15:33:45,649:INFO:Logging name: Projeto Kobe
2024-04-28 15:33:45,649:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 15:33:45,649:INFO:version 3.2.0
2024-04-28 15:33:45,649:INFO:Initializing setup()
2024-04-28 15:33:45,649:INFO:self.USI: 23e4
2024-04-28 15:33:45,649:INFO:self._variable_keys: {'X_test', 'fold_shuffle_param', 'logging_param', 'log_plots_param', 'memory', 'target_param', 'X_train', 'fix_imbalance', 'gpu_param', 'pipeline', 'fold_generator', 'is_multiclass', 'fold_groups_param', 'seed', 'n_jobs_param', 'USI', 'exp_id', 'y_train', 'data', '_ml_usecase', 'idx', '_available_plots', 'html_param', 'gpu_n_jobs_param', 'y_test', 'exp_name_log', 'y', 'X'}
2024-04-28 15:33:45,649:INFO:Checking environment
2024-04-28 15:33:45,649:INFO:python_version: 3.8.0
2024-04-28 15:33:45,649:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 15:33:45,649:INFO:machine: AMD64
2024-04-28 15:33:45,649:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 15:33:45,654:INFO:Memory: svmem(total=34301427712, available=19442212864, percent=43.3, used=14859214848, free=19442212864)
2024-04-28 15:33:45,655:INFO:Physical Core: 6
2024-04-28 15:33:45,655:INFO:Logical Core: 12
2024-04-28 15:33:45,655:INFO:Checking libraries
2024-04-28 15:33:45,655:INFO:System:
2024-04-28 15:33:45,655:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 15:33:45,655:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 15:33:45,655:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 15:33:45,655:INFO:PyCaret required dependencies:
2024-04-28 15:33:45,655:INFO:                 pip: 24.0
2024-04-28 15:33:45,655:INFO:          setuptools: 69.5.1
2024-04-28 15:33:45,655:INFO:             pycaret: 3.2.0
2024-04-28 15:33:45,655:INFO:             IPython: 8.12.3
2024-04-28 15:33:45,655:INFO:          ipywidgets: 8.1.2
2024-04-28 15:33:45,655:INFO:                tqdm: 4.66.2
2024-04-28 15:33:45,655:INFO:               numpy: 1.24.4
2024-04-28 15:33:45,655:INFO:              pandas: 1.5.3
2024-04-28 15:33:45,655:INFO:              jinja2: 3.1.3
2024-04-28 15:33:45,655:INFO:               scipy: 1.10.1
2024-04-28 15:33:45,655:INFO:              joblib: 1.3.2
2024-04-28 15:33:45,655:INFO:             sklearn: 1.2.0
2024-04-28 15:33:45,655:INFO:                pyod: 1.1.3
2024-04-28 15:33:45,655:INFO:            imblearn: 0.12.2
2024-04-28 15:33:45,655:INFO:   category_encoders: 2.6.3
2024-04-28 15:33:45,655:INFO:            lightgbm: 4.3.0
2024-04-28 15:33:45,655:INFO:               numba: 0.58.1
2024-04-28 15:33:45,655:INFO:            requests: 2.31.0
2024-04-28 15:33:45,655:INFO:          matplotlib: 3.6.0
2024-04-28 15:33:45,655:INFO:          scikitplot: 0.3.7
2024-04-28 15:33:45,655:INFO:         yellowbrick: 1.5
2024-04-28 15:33:45,655:INFO:              plotly: 5.20.0
2024-04-28 15:33:45,655:INFO:    plotly-resampler: Not installed
2024-04-28 15:33:45,655:INFO:             kaleido: 0.2.1
2024-04-28 15:33:45,656:INFO:           schemdraw: 0.15
2024-04-28 15:33:45,656:INFO:         statsmodels: 0.14.1
2024-04-28 15:33:45,656:INFO:              sktime: 0.21.1
2024-04-28 15:33:45,656:INFO:               tbats: 1.1.3
2024-04-28 15:33:45,656:INFO:            pmdarima: 2.0.4
2024-04-28 15:33:45,656:INFO:              psutil: 5.9.8
2024-04-28 15:33:45,656:INFO:          markupsafe: 2.1.5
2024-04-28 15:33:45,656:INFO:             pickle5: Not installed
2024-04-28 15:33:45,656:INFO:         cloudpickle: 3.0.0
2024-04-28 15:33:45,656:INFO:         deprecation: 2.1.0
2024-04-28 15:33:45,656:INFO:              xxhash: 3.4.1
2024-04-28 15:33:45,656:INFO:           wurlitzer: Not installed
2024-04-28 15:33:45,656:INFO:PyCaret optional dependencies:
2024-04-28 15:33:45,656:INFO:                shap: Not installed
2024-04-28 15:33:45,656:INFO:           interpret: Not installed
2024-04-28 15:33:45,656:INFO:                umap: Not installed
2024-04-28 15:33:45,656:INFO:     ydata_profiling: Not installed
2024-04-28 15:33:45,656:INFO:  explainerdashboard: Not installed
2024-04-28 15:33:45,656:INFO:             autoviz: Not installed
2024-04-28 15:33:45,656:INFO:           fairlearn: Not installed
2024-04-28 15:33:45,656:INFO:          deepchecks: Not installed
2024-04-28 15:33:45,656:INFO:             xgboost: Not installed
2024-04-28 15:33:45,656:INFO:            catboost: Not installed
2024-04-28 15:33:45,656:INFO:              kmodes: Not installed
2024-04-28 15:33:45,656:INFO:             mlxtend: Not installed
2024-04-28 15:33:45,656:INFO:       statsforecast: Not installed
2024-04-28 15:33:45,656:INFO:        tune_sklearn: Not installed
2024-04-28 15:33:45,656:INFO:                 ray: Not installed
2024-04-28 15:33:45,656:INFO:            hyperopt: Not installed
2024-04-28 15:33:45,656:INFO:              optuna: Not installed
2024-04-28 15:33:45,656:INFO:               skopt: Not installed
2024-04-28 15:33:45,656:INFO:              mlflow: 2.11.3
2024-04-28 15:33:45,656:INFO:              gradio: Not installed
2024-04-28 15:33:45,656:INFO:             fastapi: Not installed
2024-04-28 15:33:45,656:INFO:             uvicorn: Not installed
2024-04-28 15:33:45,656:INFO:              m2cgen: Not installed
2024-04-28 15:33:45,656:INFO:           evidently: Not installed
2024-04-28 15:33:45,657:INFO:               fugue: Not installed
2024-04-28 15:33:45,657:INFO:           streamlit: 1.33.0
2024-04-28 15:33:45,657:INFO:             prophet: Not installed
2024-04-28 15:33:45,657:INFO:None
2024-04-28 15:33:45,657:INFO:Set up data.
2024-04-28 15:33:45,663:INFO:Set up folding strategy.
2024-04-28 15:33:45,663:INFO:Set up train/test split.
2024-04-28 15:33:45,677:INFO:Set up index.
2024-04-28 15:33:45,678:INFO:Assigning column types.
2024-04-28 15:33:45,680:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 15:33:45,714:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 15:33:45,715:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:33:45,737:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:45,737:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:45,772:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 15:33:45,773:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:33:45,794:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:45,794:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:45,794:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 15:33:45,829:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:33:45,851:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:45,851:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:45,887:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 15:33:45,908:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:45,908:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:45,909:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 15:33:45,962:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:45,963:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:46,017:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:46,018:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:46,019:INFO:Preparing preprocessing pipeline...
2024-04-28 15:33:46,020:INFO:Set up simple imputation.
2024-04-28 15:33:46,031:INFO:Finished creating preprocessing pipeline.
2024-04-28 15:33:46,033:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-04-28 15:33:46,034:INFO:Creating final display dataframe.
2024-04-28 15:33:46,073:INFO:Setup _display_container:                     Description            Value
0                    Session id             1813
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (20285, 7)
4        Transformed data shape       (20285, 7)
5   Transformed train set shape       (14199, 7)
6    Transformed test set shape        (6086, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name     Projeto Kobe
18                          USI             23e4
2024-04-28 15:33:46,132:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:46,132:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:46,192:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:46,192:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 15:33:46,193:INFO:Logging experiment in loggers
2024-04-28 15:33:46,237:INFO:SubProcess save_model() called ==================================
2024-04-28 15:33:46,242:INFO:Initializing save_model()
2024-04-28 15:33:46,242:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), model_name=C:\Users\jpsar\AppData\Local\Temp\tmp2nwr1bax\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-28 15:33:46,242:INFO:Adding model into prep_pipe
2024-04-28 15:33:46,242:WARNING:Only Model saved as it was a pipeline.
2024-04-28 15:33:46,244:INFO:C:\Users\jpsar\AppData\Local\Temp\tmp2nwr1bax\Transformation Pipeline.pkl saved in current working directory
2024-04-28 15:33:46,246:INFO:Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-04-28 15:33:46,246:INFO:save_model() successfully completed......................................
2024-04-28 15:33:46,384:INFO:SubProcess save_model() end ==================================
2024-04-28 15:33:46,396:INFO:setup() successfully completed in 0.55s...............
2024-04-28 15:33:46,396:INFO:Initializing compare_models()
2024-04-28 15:33:46,396:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002043640D070>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=precision, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002043640D070>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'precision', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 15:33:46,396:INFO:Checking exceptions
2024-04-28 15:33:46,399:INFO:Preparing display monitor
2024-04-28 15:33:46,414:INFO:Initializing Logistic Regression
2024-04-28 15:33:46,414:INFO:Total runtime is 0.0 minutes
2024-04-28 15:33:46,416:INFO:SubProcess create_model() called ==================================
2024-04-28 15:33:46,417:INFO:Initializing create_model()
2024-04-28 15:33:46,417:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002043640D070>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002043C2E5370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 15:33:46,417:INFO:Checking exceptions
2024-04-28 15:33:46,417:INFO:Importing libraries
2024-04-28 15:33:46,417:INFO:Copying training dataset
2024-04-28 15:33:46,421:INFO:Defining folds
2024-04-28 15:33:46,422:INFO:Declaring metric variables
2024-04-28 15:33:46,424:INFO:Importing untrained model
2024-04-28 15:33:46,426:INFO:Logistic Regression Imported successfully
2024-04-28 15:33:46,430:INFO:Starting cross validation
2024-04-28 15:33:46,431:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 15:33:46,518:INFO:Calculating mean and std
2024-04-28 15:33:46,518:INFO:Creating metrics dataframe
2024-04-28 15:33:46,522:INFO:Uploading results into container
2024-04-28 15:33:46,522:INFO:Uploading model into container now
2024-04-28 15:33:46,522:INFO:_master_model_container: 1
2024-04-28 15:33:46,522:INFO:_display_container: 2
2024-04-28 15:33:46,523:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1813, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 15:33:46,523:INFO:create_model() successfully completed......................................
2024-04-28 15:33:46,648:INFO:SubProcess create_model() end ==================================
2024-04-28 15:33:46,649:INFO:Creating metrics dataframe
2024-04-28 15:33:46,655:INFO:Initializing Decision Tree Classifier
2024-04-28 15:33:46,655:INFO:Total runtime is 0.00401756763458252 minutes
2024-04-28 15:33:46,657:INFO:SubProcess create_model() called ==================================
2024-04-28 15:33:46,657:INFO:Initializing create_model()
2024-04-28 15:33:46,657:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002043640D070>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002043C2E5370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 15:33:46,658:INFO:Checking exceptions
2024-04-28 15:33:46,658:INFO:Importing libraries
2024-04-28 15:33:46,658:INFO:Copying training dataset
2024-04-28 15:33:46,661:INFO:Defining folds
2024-04-28 15:33:46,661:INFO:Declaring metric variables
2024-04-28 15:33:46,663:INFO:Importing untrained model
2024-04-28 15:33:46,665:INFO:Decision Tree Classifier Imported successfully
2024-04-28 15:33:46,669:INFO:Starting cross validation
2024-04-28 15:33:46,670:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 15:33:46,771:INFO:Calculating mean and std
2024-04-28 15:33:46,771:INFO:Creating metrics dataframe
2024-04-28 15:33:46,775:INFO:Uploading results into container
2024-04-28 15:33:46,775:INFO:Uploading model into container now
2024-04-28 15:33:46,775:INFO:_master_model_container: 2
2024-04-28 15:33:46,775:INFO:_display_container: 2
2024-04-28 15:33:46,776:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1813, splitter='best')
2024-04-28 15:33:46,776:INFO:create_model() successfully completed......................................
2024-04-28 15:33:46,906:INFO:SubProcess create_model() end ==================================
2024-04-28 15:33:46,906:INFO:Creating metrics dataframe
2024-04-28 15:33:46,918:INFO:Initializing create_model()
2024-04-28 15:33:46,918:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002043640D070>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1813, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 15:33:46,918:INFO:Checking exceptions
2024-04-28 15:33:46,919:INFO:Importing libraries
2024-04-28 15:33:46,919:INFO:Copying training dataset
2024-04-28 15:33:46,923:INFO:Defining folds
2024-04-28 15:33:46,923:INFO:Declaring metric variables
2024-04-28 15:33:46,923:INFO:Importing untrained model
2024-04-28 15:33:46,923:INFO:Declaring custom model
2024-04-28 15:33:46,923:INFO:Logistic Regression Imported successfully
2024-04-28 15:33:46,924:INFO:Cross validation set to False
2024-04-28 15:33:46,924:INFO:Fitting Model
2024-04-28 15:33:46,954:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1813, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 15:33:46,954:INFO:create_model() successfully completed......................................
2024-04-28 15:33:47,092:INFO:Creating Dashboard logs
2024-04-28 15:33:47,094:INFO:Model: Logistic Regression
2024-04-28 15:33:47,107:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 1813, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-04-28 15:33:47,169:INFO:Initializing predict_model()
2024-04-28 15:33:47,169:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002043640D070>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1813, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000204334F39D0>)
2024-04-28 15:33:47,169:INFO:Checking exceptions
2024-04-28 15:33:47,169:INFO:Preloading libraries
2024-04-28 15:33:47,358:INFO:SubProcess plot_model() called ==================================
2024-04-28 15:33:47,358:INFO:Initializing plot_model()
2024-04-28 15:33:47,358:INFO:plot_model(plot=auc, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1813, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmp0je6pv2t, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002043640D070>, system=False)
2024-04-28 15:33:47,358:INFO:Checking exceptions
2024-04-28 15:33:47,360:INFO:Preloading libraries
2024-04-28 15:33:47,360:INFO:Copying training dataset
2024-04-28 15:33:47,360:INFO:Plot type: auc
2024-04-28 15:33:47,397:INFO:Fitting Model
2024-04-28 15:33:47,397:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 15:33:47,398:INFO:Scoring test/hold-out set
2024-04-28 15:33:47,412:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmp0je6pv2t\AUC.png'
2024-04-28 15:33:47,580:INFO:Visual Rendered Successfully
2024-04-28 15:33:47,707:INFO:plot_model() successfully completed......................................
2024-04-28 15:33:47,712:INFO:Initializing plot_model()
2024-04-28 15:33:47,713:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1813, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmp0je6pv2t, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002043640D070>, system=False)
2024-04-28 15:33:47,713:INFO:Checking exceptions
2024-04-28 15:33:47,715:INFO:Preloading libraries
2024-04-28 15:33:47,715:INFO:Copying training dataset
2024-04-28 15:33:47,715:INFO:Plot type: confusion_matrix
2024-04-28 15:33:47,750:INFO:Fitting Model
2024-04-28 15:33:47,750:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 15:33:47,751:INFO:Scoring test/hold-out set
2024-04-28 15:33:47,764:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmp0je6pv2t\Confusion Matrix.png'
2024-04-28 15:33:47,848:INFO:Visual Rendered Successfully
2024-04-28 15:33:47,976:INFO:plot_model() successfully completed......................................
2024-04-28 15:33:47,983:INFO:Initializing plot_model()
2024-04-28 15:33:47,983:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1813, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmp0je6pv2t, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002043640D070>, system=False)
2024-04-28 15:33:47,983:INFO:Checking exceptions
2024-04-28 15:33:47,984:INFO:Preloading libraries
2024-04-28 15:33:47,985:INFO:Copying training dataset
2024-04-28 15:33:47,985:INFO:Plot type: feature
2024-04-28 15:33:48,015:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmp0je6pv2t\Feature Importance.png'
2024-04-28 15:33:48,143:INFO:Visual Rendered Successfully
2024-04-28 15:33:48,303:INFO:plot_model() successfully completed......................................
2024-04-28 15:33:48,309:INFO:SubProcess plot_model() end ==================================
2024-04-28 15:33:48,476:INFO:Creating Dashboard logs
2024-04-28 15:33:48,478:INFO:Model: Decision Tree Classifier
2024-04-28 15:33:48,492:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 1813, 'splitter': 'best'}
2024-04-28 15:33:48,732:INFO:_master_model_container: 2
2024-04-28 15:33:48,732:INFO:_display_container: 2
2024-04-28 15:33:48,733:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1813, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 15:33:48,733:INFO:compare_models() successfully completed......................................
2024-04-28 15:33:48,734:INFO:Initializing plot_model()
2024-04-28 15:33:48,734:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1813, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002043640D070>, system=True)
2024-04-28 15:33:48,734:INFO:Checking exceptions
2024-04-28 15:33:48,736:INFO:Preloading libraries
2024-04-28 15:33:48,737:INFO:Copying training dataset
2024-04-28 15:33:48,737:INFO:Plot type: auc
2024-04-28 15:33:48,774:INFO:Fitting Model
2024-04-28 15:33:48,774:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 15:33:48,775:INFO:Scoring test/hold-out set
2024-04-28 15:33:48,789:INFO:Saving 'AUC.png'
2024-04-28 15:33:48,954:INFO:Visual Rendered Successfully
2024-04-28 15:33:49,085:INFO:plot_model() successfully completed......................................
2024-04-28 15:33:49,090:INFO:Initializing plot_model()
2024-04-28 15:33:49,091:INFO:plot_model(plot=pr, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1813, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002043640D070>, system=True)
2024-04-28 15:33:49,091:INFO:Checking exceptions
2024-04-28 15:33:49,094:INFO:Preloading libraries
2024-04-28 15:33:49,095:INFO:Copying training dataset
2024-04-28 15:33:49,095:INFO:Plot type: pr
2024-04-28 15:33:49,135:INFO:Fitting Model
2024-04-28 15:33:49,136:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 15:33:49,136:INFO:Scoring test/hold-out set
2024-04-28 15:33:49,149:INFO:Saving 'Precision Recall.png'
2024-04-28 15:33:49,308:INFO:Visual Rendered Successfully
2024-04-28 15:33:49,439:INFO:plot_model() successfully completed......................................
2024-04-28 15:33:49,445:INFO:Initializing plot_model()
2024-04-28 15:33:49,445:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1813, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002043640D070>, system=True)
2024-04-28 15:33:49,445:INFO:Checking exceptions
2024-04-28 15:33:49,449:INFO:Preloading libraries
2024-04-28 15:33:49,449:INFO:Copying training dataset
2024-04-28 15:33:49,449:INFO:Plot type: confusion_matrix
2024-04-28 15:33:49,490:INFO:Fitting Model
2024-04-28 15:33:49,490:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 15:33:49,491:INFO:Scoring test/hold-out set
2024-04-28 15:33:49,504:INFO:Saving 'Confusion Matrix.png'
2024-04-28 15:33:49,585:INFO:Visual Rendered Successfully
2024-04-28 15:33:49,721:INFO:plot_model() successfully completed......................................
2024-04-28 15:33:49,722:INFO:Initializing plot_model()
2024-04-28 15:33:49,723:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1813, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002043640D070>, system=True)
2024-04-28 15:33:49,723:INFO:Checking exceptions
2024-04-28 15:33:49,726:INFO:Preloading libraries
2024-04-28 15:33:49,726:INFO:Copying training dataset
2024-04-28 15:33:49,726:INFO:Plot type: learning
2024-04-28 15:33:49,769:INFO:Fitting Model
2024-04-28 15:33:51,954:INFO:Saving 'Learning Curve.png'
2024-04-28 15:33:52,118:INFO:Visual Rendered Successfully
2024-04-28 15:33:52,246:INFO:plot_model() successfully completed......................................
2024-04-28 15:33:52,252:INFO:Initializing plot_model()
2024-04-28 15:33:52,252:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1813, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002043640D070>, system=True)
2024-04-28 15:33:52,252:INFO:Checking exceptions
2024-04-28 15:33:52,255:INFO:Preloading libraries
2024-04-28 15:33:52,256:INFO:Copying training dataset
2024-04-28 15:33:52,256:INFO:Plot type: feature
2024-04-28 15:33:52,289:INFO:Saving 'Feature Importance.png'
2024-04-28 15:33:52,418:INFO:Visual Rendered Successfully
2024-04-28 15:33:52,549:INFO:plot_model() successfully completed......................................
2024-04-28 15:33:52,575:INFO:Initializing predict_model()
2024-04-28 15:33:52,575:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002043640D070>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1813, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020433ADC040>)
2024-04-28 15:33:52,575:INFO:Checking exceptions
2024-04-28 15:33:52,575:INFO:Preloading libraries
2024-04-28 15:33:52,794:INFO:Initializing save_model()
2024-04-28 15:33:52,794:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1813, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=./model_kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-28 15:33:52,794:INFO:Adding model into prep_pipe
2024-04-28 15:33:52,796:INFO:./model_kobe.pkl saved in current working directory
2024-04-28 15:33:52,799:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=1813,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-04-28 15:33:52,799:INFO:save_model() successfully completed......................................
2024-04-28 15:33:52,928:INFO:Initializing load_model()
2024-04-28 15:33:52,928:INFO:load_model(model_name=./model_kobe, platform=None, authentication=None, verbose=True)
2024-04-28 15:33:52,989:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\mlflow\types\utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-28 15:33:55,010:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_6752\2127829727.py:28: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-28 15:33:55,012:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_6752\2127829727.py:29: FutureWarning: ``mlflow.tracking.client.MlflowClient.transition_model_version_stage`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  client.transition_model_version_stage(

2024-04-28 15:33:57,176:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\mlflow\store\artifact\utils\models.py:32: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-04-28 15:33:57,191:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_6752\2120704362.py:6: DeprecationWarning: In a future version, `df.iloc[:, i] = newvals` will attempt to set the values inplace instead of always setting a new array. To retain the old behavior, use either `df[df.columns[i]] = newvals` or, if columns are non-unique, `df.isetitem(i, newvals)`
  xtest.loc[:, 'operation_label'] = loaded_model.predict(http_data)

2024-04-28 16:00:22,808:INFO:PyCaret ClassificationExperiment
2024-04-28 16:00:22,808:INFO:Logging name: clf-default-name
2024-04-28 16:00:22,808:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 16:00:22,808:INFO:version 3.2.0
2024-04-28 16:00:22,808:INFO:Initializing setup()
2024-04-28 16:00:22,808:INFO:self.USI: a86a
2024-04-28 16:00:22,808:INFO:self._variable_keys: {'X_test', 'fold_shuffle_param', 'logging_param', 'log_plots_param', 'memory', 'target_param', 'X_train', 'fix_imbalance', 'gpu_param', 'pipeline', 'fold_generator', 'is_multiclass', 'fold_groups_param', 'seed', 'n_jobs_param', 'USI', 'exp_id', 'y_train', 'data', '_ml_usecase', 'idx', '_available_plots', 'html_param', 'gpu_n_jobs_param', 'y_test', 'exp_name_log', 'y', 'X'}
2024-04-28 16:00:22,808:INFO:Checking environment
2024-04-28 16:00:22,808:INFO:python_version: 3.8.0
2024-04-28 16:00:22,808:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 16:00:22,808:INFO:machine: AMD64
2024-04-28 16:00:22,808:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 16:00:22,814:INFO:Memory: svmem(total=34301427712, available=20812996608, percent=39.3, used=13488431104, free=20812996608)
2024-04-28 16:00:22,814:INFO:Physical Core: 6
2024-04-28 16:00:22,814:INFO:Logical Core: 12
2024-04-28 16:00:22,814:INFO:Checking libraries
2024-04-28 16:00:22,814:INFO:System:
2024-04-28 16:00:22,814:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 16:00:22,814:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 16:00:22,814:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 16:00:22,814:INFO:PyCaret required dependencies:
2024-04-28 16:00:22,814:INFO:                 pip: 24.0
2024-04-28 16:00:22,814:INFO:          setuptools: 69.5.1
2024-04-28 16:00:22,814:INFO:             pycaret: 3.2.0
2024-04-28 16:00:22,814:INFO:             IPython: 8.12.3
2024-04-28 16:00:22,814:INFO:          ipywidgets: 8.1.2
2024-04-28 16:00:22,814:INFO:                tqdm: 4.66.2
2024-04-28 16:00:22,814:INFO:               numpy: 1.24.4
2024-04-28 16:00:22,814:INFO:              pandas: 1.5.3
2024-04-28 16:00:22,814:INFO:              jinja2: 3.1.3
2024-04-28 16:00:22,814:INFO:               scipy: 1.10.1
2024-04-28 16:00:22,814:INFO:              joblib: 1.3.2
2024-04-28 16:00:22,814:INFO:             sklearn: 1.2.0
2024-04-28 16:00:22,814:INFO:                pyod: 1.1.3
2024-04-28 16:00:22,814:INFO:            imblearn: 0.12.2
2024-04-28 16:00:22,814:INFO:   category_encoders: 2.6.3
2024-04-28 16:00:22,814:INFO:            lightgbm: 4.3.0
2024-04-28 16:00:22,814:INFO:               numba: 0.58.1
2024-04-28 16:00:22,815:INFO:            requests: 2.31.0
2024-04-28 16:00:22,815:INFO:          matplotlib: 3.6.0
2024-04-28 16:00:22,815:INFO:          scikitplot: 0.3.7
2024-04-28 16:00:22,815:INFO:         yellowbrick: 1.5
2024-04-28 16:00:22,815:INFO:              plotly: 5.20.0
2024-04-28 16:00:22,815:INFO:    plotly-resampler: Not installed
2024-04-28 16:00:22,815:INFO:             kaleido: 0.2.1
2024-04-28 16:00:22,815:INFO:           schemdraw: 0.15
2024-04-28 16:00:22,815:INFO:         statsmodels: 0.14.1
2024-04-28 16:00:22,815:INFO:              sktime: 0.21.1
2024-04-28 16:00:22,815:INFO:               tbats: 1.1.3
2024-04-28 16:00:22,815:INFO:            pmdarima: 2.0.4
2024-04-28 16:00:22,815:INFO:              psutil: 5.9.8
2024-04-28 16:00:22,815:INFO:          markupsafe: 2.1.5
2024-04-28 16:00:22,815:INFO:             pickle5: Not installed
2024-04-28 16:00:22,815:INFO:         cloudpickle: 3.0.0
2024-04-28 16:00:22,815:INFO:         deprecation: 2.1.0
2024-04-28 16:00:22,815:INFO:              xxhash: 3.4.1
2024-04-28 16:00:22,815:INFO:           wurlitzer: Not installed
2024-04-28 16:00:22,815:INFO:PyCaret optional dependencies:
2024-04-28 16:00:22,815:INFO:                shap: Not installed
2024-04-28 16:00:22,815:INFO:           interpret: Not installed
2024-04-28 16:00:22,815:INFO:                umap: Not installed
2024-04-28 16:00:22,815:INFO:     ydata_profiling: Not installed
2024-04-28 16:00:22,815:INFO:  explainerdashboard: Not installed
2024-04-28 16:00:22,815:INFO:             autoviz: Not installed
2024-04-28 16:00:22,815:INFO:           fairlearn: Not installed
2024-04-28 16:00:22,815:INFO:          deepchecks: Not installed
2024-04-28 16:00:22,815:INFO:             xgboost: Not installed
2024-04-28 16:00:22,815:INFO:            catboost: Not installed
2024-04-28 16:00:22,815:INFO:              kmodes: Not installed
2024-04-28 16:00:22,815:INFO:             mlxtend: Not installed
2024-04-28 16:00:22,815:INFO:       statsforecast: Not installed
2024-04-28 16:00:22,815:INFO:        tune_sklearn: Not installed
2024-04-28 16:00:22,815:INFO:                 ray: Not installed
2024-04-28 16:00:22,815:INFO:            hyperopt: Not installed
2024-04-28 16:00:22,815:INFO:              optuna: Not installed
2024-04-28 16:00:22,815:INFO:               skopt: Not installed
2024-04-28 16:00:22,815:INFO:              mlflow: 2.11.3
2024-04-28 16:00:22,815:INFO:              gradio: Not installed
2024-04-28 16:00:22,815:INFO:             fastapi: Not installed
2024-04-28 16:00:22,816:INFO:             uvicorn: Not installed
2024-04-28 16:00:22,816:INFO:              m2cgen: Not installed
2024-04-28 16:00:22,816:INFO:           evidently: Not installed
2024-04-28 16:00:22,816:INFO:               fugue: Not installed
2024-04-28 16:00:22,816:INFO:           streamlit: 1.33.0
2024-04-28 16:00:22,816:INFO:             prophet: Not installed
2024-04-28 16:00:22,816:INFO:None
2024-04-28 16:00:22,816:INFO:Set up data.
2024-04-28 16:00:22,820:INFO:Set up folding strategy.
2024-04-28 16:00:22,820:INFO:Set up train/test split.
2024-04-28 16:00:22,820:INFO:Set up data.
2024-04-28 16:00:22,823:INFO:Set up index.
2024-04-28 16:00:22,823:INFO:Assigning column types.
2024-04-28 16:00:22,825:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 16:00:22,859:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 16:00:22,859:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 16:00:22,880:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:22,881:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:22,915:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 16:00:22,916:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 16:00:22,937:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:22,937:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:22,937:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 16:00:22,971:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 16:00:22,993:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:22,993:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:23,029:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 16:00:23,051:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:23,051:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:23,051:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 16:00:23,105:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:23,106:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:23,162:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:23,162:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:23,163:INFO:Preparing preprocessing pipeline...
2024-04-28 16:00:23,164:INFO:Set up simple imputation.
2024-04-28 16:00:23,164:INFO:Set up feature normalization.
2024-04-28 16:00:23,188:INFO:Finished creating preprocessing pipeline.
2024-04-28 16:00:23,191:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              v...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-28 16:00:23,191:INFO:Creating final display dataframe.
2024-04-28 16:00:23,242:INFO:Setup _display_container:                     Description             Value
0                    Session id              4844
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (20285, 7)
4        Transformed data shape        (20285, 7)
5   Transformed train set shape        (16228, 7)
6    Transformed test set shape         (4057, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              a86a
2024-04-28 16:00:23,304:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:23,305:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:23,361:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:23,361:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:23,362:INFO:setup() successfully completed in 0.56s...............
2024-04-28 16:00:23,363:INFO:Initializing compare_models()
2024-04-28 16:00:23,363:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002043F643D30>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002043F643D30>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 16:00:23,363:INFO:Checking exceptions
2024-04-28 16:00:23,366:INFO:Preparing display monitor
2024-04-28 16:00:23,379:INFO:Initializing Logistic Regression
2024-04-28 16:00:23,379:INFO:Total runtime is 0.0 minutes
2024-04-28 16:00:23,381:INFO:SubProcess create_model() called ==================================
2024-04-28 16:00:23,381:INFO:Initializing create_model()
2024-04-28 16:00:23,381:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002043F643D30>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002043A260BE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 16:00:23,381:INFO:Checking exceptions
2024-04-28 16:00:23,382:INFO:Importing libraries
2024-04-28 16:00:23,382:INFO:Copying training dataset
2024-04-28 16:00:23,386:INFO:Defining folds
2024-04-28 16:00:23,386:INFO:Declaring metric variables
2024-04-28 16:00:23,388:INFO:Importing untrained model
2024-04-28 16:00:23,390:INFO:Logistic Regression Imported successfully
2024-04-28 16:00:23,394:INFO:Starting cross validation
2024-04-28 16:00:23,395:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 16:00:27,291:INFO:Calculating mean and std
2024-04-28 16:00:27,293:INFO:Creating metrics dataframe
2024-04-28 16:00:27,300:INFO:Uploading results into container
2024-04-28 16:00:27,301:INFO:Uploading model into container now
2024-04-28 16:00:27,301:INFO:_master_model_container: 1
2024-04-28 16:00:27,301:INFO:_display_container: 2
2024-04-28 16:00:27,302:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4844, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 16:00:27,302:INFO:create_model() successfully completed......................................
2024-04-28 16:00:27,589:INFO:SubProcess create_model() end ==================================
2024-04-28 16:00:27,590:INFO:Creating metrics dataframe
2024-04-28 16:00:27,596:INFO:Initializing Decision Tree Classifier
2024-04-28 16:00:27,596:INFO:Total runtime is 0.0702825665473938 minutes
2024-04-28 16:00:27,598:INFO:SubProcess create_model() called ==================================
2024-04-28 16:00:27,599:INFO:Initializing create_model()
2024-04-28 16:00:27,599:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002043F643D30>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002043A260BE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 16:00:27,599:INFO:Checking exceptions
2024-04-28 16:00:27,599:INFO:Importing libraries
2024-04-28 16:00:27,599:INFO:Copying training dataset
2024-04-28 16:00:27,604:INFO:Defining folds
2024-04-28 16:00:27,604:INFO:Declaring metric variables
2024-04-28 16:00:27,606:INFO:Importing untrained model
2024-04-28 16:00:27,608:INFO:Decision Tree Classifier Imported successfully
2024-04-28 16:00:27,612:INFO:Starting cross validation
2024-04-28 16:00:27,613:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 16:00:28,966:INFO:Calculating mean and std
2024-04-28 16:00:28,968:INFO:Creating metrics dataframe
2024-04-28 16:00:28,972:INFO:Uploading results into container
2024-04-28 16:00:28,973:INFO:Uploading model into container now
2024-04-28 16:00:28,973:INFO:_master_model_container: 2
2024-04-28 16:00:28,974:INFO:_display_container: 2
2024-04-28 16:00:28,974:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4844, splitter='best')
2024-04-28 16:00:28,974:INFO:create_model() successfully completed......................................
2024-04-28 16:00:29,150:INFO:SubProcess create_model() end ==================================
2024-04-28 16:00:29,150:INFO:Creating metrics dataframe
2024-04-28 16:00:29,161:INFO:Initializing create_model()
2024-04-28 16:00:29,161:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002043F643D30>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4844, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 16:00:29,162:INFO:Checking exceptions
2024-04-28 16:00:29,163:INFO:Importing libraries
2024-04-28 16:00:29,163:INFO:Copying training dataset
2024-04-28 16:00:29,166:INFO:Defining folds
2024-04-28 16:00:29,166:INFO:Declaring metric variables
2024-04-28 16:00:29,166:INFO:Importing untrained model
2024-04-28 16:00:29,166:INFO:Declaring custom model
2024-04-28 16:00:29,167:INFO:Decision Tree Classifier Imported successfully
2024-04-28 16:00:29,167:INFO:Cross validation set to False
2024-04-28 16:00:29,167:INFO:Fitting Model
2024-04-28 16:00:29,215:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4844, splitter='best')
2024-04-28 16:00:29,215:INFO:create_model() successfully completed......................................
2024-04-28 16:00:29,359:INFO:Initializing create_model()
2024-04-28 16:00:29,360:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002043F643D30>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4844, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 16:00:29,360:INFO:Checking exceptions
2024-04-28 16:00:29,361:INFO:Importing libraries
2024-04-28 16:00:29,361:INFO:Copying training dataset
2024-04-28 16:00:29,364:INFO:Defining folds
2024-04-28 16:00:29,364:INFO:Declaring metric variables
2024-04-28 16:00:29,365:INFO:Importing untrained model
2024-04-28 16:00:29,365:INFO:Declaring custom model
2024-04-28 16:00:29,365:INFO:Logistic Regression Imported successfully
2024-04-28 16:00:29,366:INFO:Cross validation set to False
2024-04-28 16:00:29,366:INFO:Fitting Model
2024-04-28 16:00:29,379:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4844, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 16:00:29,379:INFO:create_model() successfully completed......................................
2024-04-28 16:00:29,535:INFO:_master_model_container: 2
2024-04-28 16:00:29,535:INFO:_display_container: 2
2024-04-28 16:00:29,536:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4844, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4844, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-28 16:00:29,536:INFO:compare_models() successfully completed......................................
2024-04-28 16:00:29,537:INFO:Initializing plot_model()
2024-04-28 16:00:29,537:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4844, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002043F643D30>, system=True)
2024-04-28 16:00:29,537:INFO:Checking exceptions
2024-04-28 16:00:29,540:INFO:Preloading libraries
2024-04-28 16:00:29,541:INFO:Copying training dataset
2024-04-28 16:00:29,541:INFO:Plot type: parameter
2024-04-28 16:00:29,543:INFO:Visual Rendered Successfully
2024-04-28 16:00:29,689:INFO:plot_model() successfully completed......................................
2024-04-28 16:00:29,708:INFO:Initializing predict_model()
2024-04-28 16:00:29,708:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002043F643D30>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4844, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020440EA6DC0>)
2024-04-28 16:00:29,708:INFO:Checking exceptions
2024-04-28 16:00:29,708:INFO:Preloading libraries
2024-04-28 16:00:30,002:INFO:Initializing plot_model()
2024-04-28 16:00:30,002:INFO:plot_model(plot=parameter, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4844, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002043F643D30>, system=True)
2024-04-28 16:00:30,003:INFO:Checking exceptions
2024-04-28 16:00:30,005:INFO:Preloading libraries
2024-04-28 16:00:30,006:INFO:Copying training dataset
2024-04-28 16:00:30,006:INFO:Plot type: parameter
2024-04-28 16:00:30,008:INFO:Visual Rendered Successfully
2024-04-28 16:00:30,153:INFO:plot_model() successfully completed......................................
2024-04-28 16:00:30,168:INFO:Initializing predict_model()
2024-04-28 16:00:30,168:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002043F643D30>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4844, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000204412A1B80>)
2024-04-28 16:00:30,168:INFO:Checking exceptions
2024-04-28 16:00:30,168:INFO:Preloading libraries
2024-04-28 16:00:30,455:INFO:Initializing load_model()
2024-04-28 16:00:30,456:INFO:load_model(model_name=./model_kobe, platform=None, authentication=None, verbose=True)
2024-04-28 16:00:30,508:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\mlflow\types\utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-28 16:00:32,649:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_6752\1973998042.py:83: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-28 16:00:32,682:INFO:PyCaret ClassificationExperiment
2024-04-28 16:00:32,682:INFO:Logging name: Projeto Kobe
2024-04-28 16:00:32,682:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 16:00:32,682:INFO:version 3.2.0
2024-04-28 16:00:32,682:INFO:Initializing setup()
2024-04-28 16:00:32,682:INFO:self.USI: 9125
2024-04-28 16:00:32,682:INFO:self._variable_keys: {'X_test', 'fold_shuffle_param', 'logging_param', 'log_plots_param', 'memory', 'target_param', 'X_train', 'fix_imbalance', 'gpu_param', 'pipeline', 'fold_generator', 'is_multiclass', 'fold_groups_param', 'seed', 'n_jobs_param', 'USI', 'exp_id', 'y_train', 'data', '_ml_usecase', 'idx', '_available_plots', 'html_param', 'gpu_n_jobs_param', 'y_test', 'exp_name_log', 'y', 'X'}
2024-04-28 16:00:32,682:INFO:Checking environment
2024-04-28 16:00:32,682:INFO:python_version: 3.8.0
2024-04-28 16:00:32,682:INFO:python_build: ('tags/v3.8.0:fa919fd', 'Oct 14 2019 19:37:50')
2024-04-28 16:00:32,682:INFO:machine: AMD64
2024-04-28 16:00:32,682:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-28 16:00:32,688:INFO:Memory: svmem(total=34301427712, available=19405324288, percent=43.4, used=14896103424, free=19405324288)
2024-04-28 16:00:32,688:INFO:Physical Core: 6
2024-04-28 16:00:32,688:INFO:Logical Core: 12
2024-04-28 16:00:32,688:INFO:Checking libraries
2024-04-28 16:00:32,688:INFO:System:
2024-04-28 16:00:32,688:INFO:    python: 3.8.0 (tags/v3.8.0:fa919fd, Oct 14 2019, 19:37:50) [MSC v.1916 64 bit (AMD64)]
2024-04-28 16:00:32,688:INFO:executable: f:\projeto_kobe_2\venv\Scripts\python.exe
2024-04-28 16:00:32,688:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-28 16:00:32,688:INFO:PyCaret required dependencies:
2024-04-28 16:00:32,688:INFO:                 pip: 24.0
2024-04-28 16:00:32,688:INFO:          setuptools: 69.5.1
2024-04-28 16:00:32,688:INFO:             pycaret: 3.2.0
2024-04-28 16:00:32,688:INFO:             IPython: 8.12.3
2024-04-28 16:00:32,688:INFO:          ipywidgets: 8.1.2
2024-04-28 16:00:32,688:INFO:                tqdm: 4.66.2
2024-04-28 16:00:32,688:INFO:               numpy: 1.24.4
2024-04-28 16:00:32,688:INFO:              pandas: 1.5.3
2024-04-28 16:00:32,688:INFO:              jinja2: 3.1.3
2024-04-28 16:00:32,688:INFO:               scipy: 1.10.1
2024-04-28 16:00:32,688:INFO:              joblib: 1.3.2
2024-04-28 16:00:32,688:INFO:             sklearn: 1.2.0
2024-04-28 16:00:32,688:INFO:                pyod: 1.1.3
2024-04-28 16:00:32,688:INFO:            imblearn: 0.12.2
2024-04-28 16:00:32,688:INFO:   category_encoders: 2.6.3
2024-04-28 16:00:32,688:INFO:            lightgbm: 4.3.0
2024-04-28 16:00:32,688:INFO:               numba: 0.58.1
2024-04-28 16:00:32,689:INFO:            requests: 2.31.0
2024-04-28 16:00:32,689:INFO:          matplotlib: 3.6.0
2024-04-28 16:00:32,689:INFO:          scikitplot: 0.3.7
2024-04-28 16:00:32,689:INFO:         yellowbrick: 1.5
2024-04-28 16:00:32,689:INFO:              plotly: 5.20.0
2024-04-28 16:00:32,689:INFO:    plotly-resampler: Not installed
2024-04-28 16:00:32,689:INFO:             kaleido: 0.2.1
2024-04-28 16:00:32,689:INFO:           schemdraw: 0.15
2024-04-28 16:00:32,689:INFO:         statsmodels: 0.14.1
2024-04-28 16:00:32,689:INFO:              sktime: 0.21.1
2024-04-28 16:00:32,689:INFO:               tbats: 1.1.3
2024-04-28 16:00:32,689:INFO:            pmdarima: 2.0.4
2024-04-28 16:00:32,689:INFO:              psutil: 5.9.8
2024-04-28 16:00:32,689:INFO:          markupsafe: 2.1.5
2024-04-28 16:00:32,689:INFO:             pickle5: Not installed
2024-04-28 16:00:32,689:INFO:         cloudpickle: 3.0.0
2024-04-28 16:00:32,689:INFO:         deprecation: 2.1.0
2024-04-28 16:00:32,689:INFO:              xxhash: 3.4.1
2024-04-28 16:00:32,689:INFO:           wurlitzer: Not installed
2024-04-28 16:00:32,689:INFO:PyCaret optional dependencies:
2024-04-28 16:00:32,689:INFO:                shap: Not installed
2024-04-28 16:00:32,689:INFO:           interpret: Not installed
2024-04-28 16:00:32,689:INFO:                umap: Not installed
2024-04-28 16:00:32,689:INFO:     ydata_profiling: Not installed
2024-04-28 16:00:32,689:INFO:  explainerdashboard: Not installed
2024-04-28 16:00:32,689:INFO:             autoviz: Not installed
2024-04-28 16:00:32,689:INFO:           fairlearn: Not installed
2024-04-28 16:00:32,689:INFO:          deepchecks: Not installed
2024-04-28 16:00:32,689:INFO:             xgboost: Not installed
2024-04-28 16:00:32,689:INFO:            catboost: Not installed
2024-04-28 16:00:32,689:INFO:              kmodes: Not installed
2024-04-28 16:00:32,689:INFO:             mlxtend: Not installed
2024-04-28 16:00:32,689:INFO:       statsforecast: Not installed
2024-04-28 16:00:32,689:INFO:        tune_sklearn: Not installed
2024-04-28 16:00:32,689:INFO:                 ray: Not installed
2024-04-28 16:00:32,689:INFO:            hyperopt: Not installed
2024-04-28 16:00:32,689:INFO:              optuna: Not installed
2024-04-28 16:00:32,689:INFO:               skopt: Not installed
2024-04-28 16:00:32,690:INFO:              mlflow: 2.11.3
2024-04-28 16:00:32,690:INFO:              gradio: Not installed
2024-04-28 16:00:32,690:INFO:             fastapi: Not installed
2024-04-28 16:00:32,690:INFO:             uvicorn: Not installed
2024-04-28 16:00:32,690:INFO:              m2cgen: Not installed
2024-04-28 16:00:32,690:INFO:           evidently: Not installed
2024-04-28 16:00:32,690:INFO:               fugue: Not installed
2024-04-28 16:00:32,690:INFO:           streamlit: 1.33.0
2024-04-28 16:00:32,690:INFO:             prophet: Not installed
2024-04-28 16:00:32,690:INFO:None
2024-04-28 16:00:32,690:INFO:Set up data.
2024-04-28 16:00:32,694:INFO:Set up folding strategy.
2024-04-28 16:00:32,694:INFO:Set up train/test split.
2024-04-28 16:00:32,701:INFO:Set up index.
2024-04-28 16:00:32,701:INFO:Assigning column types.
2024-04-28 16:00:32,703:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 16:00:32,736:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 16:00:32,737:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 16:00:32,758:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:32,758:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:32,791:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 16:00:32,792:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 16:00:32,814:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:32,814:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:32,814:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 16:00:32,852:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 16:00:32,876:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:32,877:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:32,924:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 16:00:32,949:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:32,950:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:32,950:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 16:00:33,020:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:33,020:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:33,119:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:33,119:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:33,121:INFO:Preparing preprocessing pipeline...
2024-04-28 16:00:33,122:INFO:Set up simple imputation.
2024-04-28 16:00:33,139:INFO:Finished creating preprocessing pipeline.
2024-04-28 16:00:33,141:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-04-28 16:00:33,141:INFO:Creating final display dataframe.
2024-04-28 16:00:33,191:INFO:Setup _display_container:                     Description            Value
0                    Session id             1969
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (20285, 7)
4        Transformed data shape       (20285, 7)
5   Transformed train set shape       (14199, 7)
6    Transformed test set shape        (6086, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name     Projeto Kobe
18                          USI             9125
2024-04-28 16:00:33,252:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:33,252:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:33,308:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:33,309:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 16:00:33,309:INFO:Logging experiment in loggers
2024-04-28 16:00:33,344:INFO:SubProcess save_model() called ==================================
2024-04-28 16:00:33,348:INFO:Initializing save_model()
2024-04-28 16:00:33,348:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), model_name=C:\Users\jpsar\AppData\Local\Temp\tmprdh0pg_w\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-28 16:00:33,348:INFO:Adding model into prep_pipe
2024-04-28 16:00:33,348:WARNING:Only Model saved as it was a pipeline.
2024-04-28 16:00:33,350:INFO:C:\Users\jpsar\AppData\Local\Temp\tmprdh0pg_w\Transformation Pipeline.pkl saved in current working directory
2024-04-28 16:00:33,352:INFO:Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-04-28 16:00:33,352:INFO:save_model() successfully completed......................................
2024-04-28 16:00:33,520:INFO:SubProcess save_model() end ==================================
2024-04-28 16:00:33,530:INFO:setup() successfully completed in 0.63s...............
2024-04-28 16:00:33,536:INFO:Initializing compare_models()
2024-04-28 16:00:33,536:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020440EF4130>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=precision, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000020440EF4130>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'precision', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 16:00:33,536:INFO:Checking exceptions
2024-04-28 16:00:33,539:INFO:Preparing display monitor
2024-04-28 16:00:33,554:INFO:Initializing Logistic Regression
2024-04-28 16:00:33,554:INFO:Total runtime is 0.0 minutes
2024-04-28 16:00:33,556:INFO:SubProcess create_model() called ==================================
2024-04-28 16:00:33,556:INFO:Initializing create_model()
2024-04-28 16:00:33,556:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020440EF4130>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002043C384D60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 16:00:33,557:INFO:Checking exceptions
2024-04-28 16:00:33,557:INFO:Importing libraries
2024-04-28 16:00:33,557:INFO:Copying training dataset
2024-04-28 16:00:33,561:INFO:Defining folds
2024-04-28 16:00:33,561:INFO:Declaring metric variables
2024-04-28 16:00:33,563:INFO:Importing untrained model
2024-04-28 16:00:33,566:INFO:Logistic Regression Imported successfully
2024-04-28 16:00:33,570:INFO:Starting cross validation
2024-04-28 16:00:33,571:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 16:00:33,693:INFO:Calculating mean and std
2024-04-28 16:00:33,693:INFO:Creating metrics dataframe
2024-04-28 16:00:33,698:INFO:Uploading results into container
2024-04-28 16:00:33,700:INFO:Uploading model into container now
2024-04-28 16:00:33,700:INFO:_master_model_container: 1
2024-04-28 16:00:33,700:INFO:_display_container: 2
2024-04-28 16:00:33,701:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1969, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 16:00:33,701:INFO:create_model() successfully completed......................................
2024-04-28 16:00:33,935:INFO:SubProcess create_model() end ==================================
2024-04-28 16:00:33,935:INFO:Creating metrics dataframe
2024-04-28 16:00:33,941:INFO:Initializing Decision Tree Classifier
2024-04-28 16:00:33,941:INFO:Total runtime is 0.006434798240661621 minutes
2024-04-28 16:00:33,944:INFO:SubProcess create_model() called ==================================
2024-04-28 16:00:33,944:INFO:Initializing create_model()
2024-04-28 16:00:33,944:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020440EF4130>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002043C384D60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 16:00:33,944:INFO:Checking exceptions
2024-04-28 16:00:33,944:INFO:Importing libraries
2024-04-28 16:00:33,944:INFO:Copying training dataset
2024-04-28 16:00:33,947:INFO:Defining folds
2024-04-28 16:00:33,947:INFO:Declaring metric variables
2024-04-28 16:00:33,950:INFO:Importing untrained model
2024-04-28 16:00:33,952:INFO:Decision Tree Classifier Imported successfully
2024-04-28 16:00:33,956:INFO:Starting cross validation
2024-04-28 16:00:33,957:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 16:00:34,056:INFO:Calculating mean and std
2024-04-28 16:00:34,056:INFO:Creating metrics dataframe
2024-04-28 16:00:34,059:INFO:Uploading results into container
2024-04-28 16:00:34,059:INFO:Uploading model into container now
2024-04-28 16:00:34,059:INFO:_master_model_container: 2
2024-04-28 16:00:34,059:INFO:_display_container: 2
2024-04-28 16:00:34,059:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1969, splitter='best')
2024-04-28 16:00:34,059:INFO:create_model() successfully completed......................................
2024-04-28 16:00:34,214:INFO:SubProcess create_model() end ==================================
2024-04-28 16:00:34,214:INFO:Creating metrics dataframe
2024-04-28 16:00:34,227:INFO:Initializing create_model()
2024-04-28 16:00:34,228:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020440EF4130>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1969, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 16:00:34,228:INFO:Checking exceptions
2024-04-28 16:00:34,229:INFO:Importing libraries
2024-04-28 16:00:34,229:INFO:Copying training dataset
2024-04-28 16:00:34,233:INFO:Defining folds
2024-04-28 16:00:34,233:INFO:Declaring metric variables
2024-04-28 16:00:34,233:INFO:Importing untrained model
2024-04-28 16:00:34,233:INFO:Declaring custom model
2024-04-28 16:00:34,234:INFO:Logistic Regression Imported successfully
2024-04-28 16:00:34,234:INFO:Cross validation set to False
2024-04-28 16:00:34,234:INFO:Fitting Model
2024-04-28 16:00:34,260:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1969, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 16:00:34,260:INFO:create_model() successfully completed......................................
2024-04-28 16:00:34,414:INFO:Creating Dashboard logs
2024-04-28 16:00:34,417:INFO:Model: Logistic Regression
2024-04-28 16:00:34,430:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 1969, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-04-28 16:00:34,488:INFO:Initializing predict_model()
2024-04-28 16:00:34,488:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020440EF4130>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1969, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002043C300160>)
2024-04-28 16:00:34,488:INFO:Checking exceptions
2024-04-28 16:00:34,488:INFO:Preloading libraries
2024-04-28 16:00:34,692:INFO:SubProcess plot_model() called ==================================
2024-04-28 16:00:34,692:INFO:Initializing plot_model()
2024-04-28 16:00:34,692:INFO:plot_model(plot=auc, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1969, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmppda5ihbc, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020440EF4130>, system=False)
2024-04-28 16:00:34,693:INFO:Checking exceptions
2024-04-28 16:00:34,694:INFO:Preloading libraries
2024-04-28 16:00:34,695:INFO:Copying training dataset
2024-04-28 16:00:34,695:INFO:Plot type: auc
2024-04-28 16:00:34,738:INFO:Fitting Model
2024-04-28 16:00:34,738:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 16:00:34,739:INFO:Scoring test/hold-out set
2024-04-28 16:00:34,753:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmppda5ihbc\AUC.png'
2024-04-28 16:00:34,917:INFO:Visual Rendered Successfully
2024-04-28 16:00:35,066:INFO:plot_model() successfully completed......................................
2024-04-28 16:00:35,072:INFO:Initializing plot_model()
2024-04-28 16:00:35,072:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1969, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmppda5ihbc, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020440EF4130>, system=False)
2024-04-28 16:00:35,072:INFO:Checking exceptions
2024-04-28 16:00:35,073:INFO:Preloading libraries
2024-04-28 16:00:35,074:INFO:Copying training dataset
2024-04-28 16:00:35,074:INFO:Plot type: confusion_matrix
2024-04-28 16:00:35,109:INFO:Fitting Model
2024-04-28 16:00:35,110:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 16:00:35,110:INFO:Scoring test/hold-out set
2024-04-28 16:00:35,124:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmppda5ihbc\Confusion Matrix.png'
2024-04-28 16:00:35,204:INFO:Visual Rendered Successfully
2024-04-28 16:00:35,367:INFO:plot_model() successfully completed......................................
2024-04-28 16:00:35,373:INFO:Initializing plot_model()
2024-04-28 16:00:35,373:INFO:plot_model(plot=feature, fold=None, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1969, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=C:\Users\jpsar\AppData\Local\Temp\tmppda5ihbc, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020440EF4130>, system=False)
2024-04-28 16:00:35,373:INFO:Checking exceptions
2024-04-28 16:00:35,374:INFO:Preloading libraries
2024-04-28 16:00:35,375:INFO:Copying training dataset
2024-04-28 16:00:35,375:INFO:Plot type: feature
2024-04-28 16:00:35,404:INFO:Saving 'C:\Users\jpsar\AppData\Local\Temp\tmppda5ihbc\Feature Importance.png'
2024-04-28 16:00:35,517:INFO:Visual Rendered Successfully
2024-04-28 16:00:35,659:INFO:plot_model() successfully completed......................................
2024-04-28 16:00:35,664:INFO:SubProcess plot_model() end ==================================
2024-04-28 16:00:35,857:INFO:Creating Dashboard logs
2024-04-28 16:00:35,859:INFO:Model: Decision Tree Classifier
2024-04-28 16:00:35,872:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 1969, 'splitter': 'best'}
2024-04-28 16:00:36,154:INFO:_master_model_container: 2
2024-04-28 16:00:36,154:INFO:_display_container: 2
2024-04-28 16:00:36,154:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1969, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 16:00:36,154:INFO:compare_models() successfully completed......................................
2024-04-28 16:00:36,155:INFO:Initializing plot_model()
2024-04-28 16:00:36,155:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1969, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020440EF4130>, system=True)
2024-04-28 16:00:36,155:INFO:Checking exceptions
2024-04-28 16:00:36,158:INFO:Preloading libraries
2024-04-28 16:00:36,158:INFO:Copying training dataset
2024-04-28 16:00:36,158:INFO:Plot type: auc
2024-04-28 16:00:36,202:INFO:Fitting Model
2024-04-28 16:00:36,202:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 16:00:36,203:INFO:Scoring test/hold-out set
2024-04-28 16:00:36,218:INFO:Saving 'AUC.png'
2024-04-28 16:00:36,384:INFO:Visual Rendered Successfully
2024-04-28 16:00:36,542:INFO:plot_model() successfully completed......................................
2024-04-28 16:00:36,548:INFO:Initializing plot_model()
2024-04-28 16:00:36,549:INFO:plot_model(plot=pr, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1969, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020440EF4130>, system=True)
2024-04-28 16:00:36,549:INFO:Checking exceptions
2024-04-28 16:00:36,552:INFO:Preloading libraries
2024-04-28 16:00:36,552:INFO:Copying training dataset
2024-04-28 16:00:36,552:INFO:Plot type: pr
2024-04-28 16:00:36,594:INFO:Fitting Model
2024-04-28 16:00:36,595:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 16:00:36,595:INFO:Scoring test/hold-out set
2024-04-28 16:00:36,610:INFO:Saving 'Precision Recall.png'
2024-04-28 16:00:36,774:INFO:Visual Rendered Successfully
2024-04-28 16:00:36,945:INFO:plot_model() successfully completed......................................
2024-04-28 16:00:36,951:INFO:Initializing plot_model()
2024-04-28 16:00:36,951:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1969, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020440EF4130>, system=True)
2024-04-28 16:00:36,951:INFO:Checking exceptions
2024-04-28 16:00:36,954:INFO:Preloading libraries
2024-04-28 16:00:36,954:INFO:Copying training dataset
2024-04-28 16:00:36,955:INFO:Plot type: confusion_matrix
2024-04-28 16:00:36,993:INFO:Fitting Model
2024-04-28 16:00:36,993:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\sklearn\base.py:409: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-04-28 16:00:36,993:INFO:Scoring test/hold-out set
2024-04-28 16:00:37,006:INFO:Saving 'Confusion Matrix.png'
2024-04-28 16:00:37,089:INFO:Visual Rendered Successfully
2024-04-28 16:00:37,249:INFO:plot_model() successfully completed......................................
2024-04-28 16:00:37,256:INFO:Initializing plot_model()
2024-04-28 16:00:37,256:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1969, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020440EF4130>, system=True)
2024-04-28 16:00:37,256:INFO:Checking exceptions
2024-04-28 16:00:37,259:INFO:Preloading libraries
2024-04-28 16:00:37,260:INFO:Copying training dataset
2024-04-28 16:00:37,260:INFO:Plot type: learning
2024-04-28 16:00:37,302:INFO:Fitting Model
2024-04-28 16:00:40,068:INFO:Saving 'Learning Curve.png'
2024-04-28 16:00:40,236:INFO:Visual Rendered Successfully
2024-04-28 16:00:40,386:INFO:plot_model() successfully completed......................................
2024-04-28 16:00:40,388:INFO:Initializing plot_model()
2024-04-28 16:00:40,388:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1969, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020440EF4130>, system=True)
2024-04-28 16:00:40,388:INFO:Checking exceptions
2024-04-28 16:00:40,392:INFO:Preloading libraries
2024-04-28 16:00:40,392:INFO:Copying training dataset
2024-04-28 16:00:40,392:INFO:Plot type: feature
2024-04-28 16:00:40,424:INFO:Saving 'Feature Importance.png'
2024-04-28 16:00:40,541:INFO:Visual Rendered Successfully
2024-04-28 16:00:40,699:INFO:plot_model() successfully completed......................................
2024-04-28 16:00:40,749:INFO:Initializing predict_model()
2024-04-28 16:00:40,749:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020440EF4130>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1969, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002043BF7DE50>)
2024-04-28 16:00:40,749:INFO:Checking exceptions
2024-04-28 16:00:40,749:INFO:Preloading libraries
2024-04-28 16:00:40,957:INFO:Initializing save_model()
2024-04-28 16:00:40,957:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1969, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=./model_kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\jpsar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-28 16:00:40,958:INFO:Adding model into prep_pipe
2024-04-28 16:00:40,959:INFO:./model_kobe.pkl saved in current working directory
2024-04-28 16:00:40,962:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=1969,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-04-28 16:00:40,962:INFO:save_model() successfully completed......................................
2024-04-28 16:00:41,112:INFO:Initializing load_model()
2024-04-28 16:00:41,112:INFO:load_model(model_name=./model_kobe, platform=None, authentication=None, verbose=True)
2024-04-28 16:00:41,176:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\mlflow\types\utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-28 16:00:43,217:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_6752\2127829727.py:28: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-28 16:00:43,219:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_6752\2127829727.py:29: FutureWarning: ``mlflow.tracking.client.MlflowClient.transition_model_version_stage`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  client.transition_model_version_stage(

2024-04-28 16:00:45,400:WARNING:f:\projeto_kobe_2\venv\lib\site-packages\mlflow\store\artifact\utils\models.py:32: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-04-28 16:00:45,413:WARNING:C:\Users\jpsar\AppData\Local\Temp\ipykernel_6752\2120704362.py:6: DeprecationWarning: In a future version, `df.iloc[:, i] = newvals` will attempt to set the values inplace instead of always setting a new array. To retain the old behavior, use either `df[df.columns[i]] = newvals` or, if columns are non-unique, `df.isetitem(i, newvals)`
  xtest.loc[:, 'operation_label'] = loaded_model.predict(http_data)

